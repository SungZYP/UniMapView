/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import"../geometry.js";import{i as r,u as t}from"../core/lang.js";import o from"../geometry/support/GeographicTransformation.js";import s from"../layers/support/PixelBlock.js";import{d as e,R as i}from"./RasterSymbolizer.js";import{f as m,g as a,m as p,k as l,n}from"./pixelUtils.js";import{r as c,l as j,d as f}from"./rasterProjectionHelper.js";import{c as u,d}from"./vectorFieldUtils.js";import{r as g}from"./utils8.js";import{c as y}from"./dataUtils.js";import S from"../geometry/Extent.js";import"./ensureType.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"../geometry/Geometry.js";import"./tslib.es6.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./tracking.js";import"../core/Error.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../geometry/support/GeographicTransformationStep.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./colorUtils2.js";import"../layers/support/RasterInfo.js";import"./colorRampUtils.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./pe.js";import"../geometry/projection.js";import"./mat4.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"./zscale.js";import"./enumeration.js";class h{convertVectorFieldData(t){const o=s.fromJSON(t.pixelBlock),e=u(o,t.type);return Promise.resolve(r(e)&&e.toJSON())}async decode(r){const t=await e(r.data,r.options);return t&&t.toJSON()}symbolize(t){t.pixelBlock=s.fromJSON(t.pixelBlock),t.extent=t.extent?S.fromJSON(t.extent):null;const o=this.symbolizer.symbolize(t);return Promise.resolve(r(o)&&o.toJSON())}async updateSymbolizer(r){var t;this.symbolizer=i.fromJSON(r.symbolizerJSON),r.histograms&&"rasterStretch"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(t){const o=this.symbolizer.simpleStretch(s.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(r(o)&&o.toJSON())}estimateStatisticsHistograms(r){const t=m(s.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=a(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,o)=>{t.set(o,null==r?void 0:r.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){var o;const e=r.srcPixelBlocks.map((r=>r?new s(r):null)),i=p(e,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let m,a=i;return r.coefs&&(a=l(i,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(m=n(r.destDimension,r.gcsGrid),a=t(d(a,r.isUV?"vector-uv":"vector-magdir",m))),{pixelBlock:null==(o=a)?void 0:o.toJSON(),localNorthDirections:m}}async createStreamlinesMesh(r,t){const o={data:new Float32Array(r.flowData.buffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:e}=await y(r.rendererSettings,o,t.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:e.buffer},transferList:[s.buffer,e.buffer]}}async getProjectionOffsetGrid(r){const t=S.fromJSON(r.projectedExtent),s=S.fromJSON(r.srcBufferExtent);let e=null;r.datumTransformationSteps&&(e=new o({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(t.spatialReference,s.spatialReference,e))&&await j();const i=r.rasterTransform?g(r.rasterTransform):null;return f({...r,projectedExtent:t,srcBufferExtent:s,datumTransformation:e,rasterTransform:i})}}export{h as default};
