/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as i}from"./tslib.es6.js";import e from"../core/Collection.js";import{r as s,c as r}from"./collectionUtils.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import l from"../views/layers/LayerView.js";import"./ArrayPool.js";import"./Evented.js";import"../core/Accessor.js";import"./deprecate.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./shared.js";import"../core/HandleOwner.js";import"../core/Handles.js";import"../core/reactiveUtils.js";import"./Identifiable.js";import"./Promise.js";let o=class extends l{constructor(i){super(i),this.type="group",this.layerViews=new e}initialize(){this.handles.add([this.layerViews.on("change",(i=>this._layerViewsChangeHandler(i))),this.layer.watch("visibilityMode",(()=>this._visibilityModeHandler()),!0),this.watch("visible",(()=>this._visibleHandler()),!0)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(i){this._set("layerViews",s(i,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((i,e)=>i+e.updatingProgress),0)/this.layerViews.length}isUpdating(){return this.layerViews.some((i=>i.updating))}_hasLayerViewVisibleOverrides(){return this.layerViews.some((i=>i._isOverridden("visible")))}_findLayerViewForLayer(i){return i&&this.layerViews.find((e=>e.layer===i))}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find((i=>{const e=this._findLayerViewForLayer(i);return e&&e.visible}));return i&&this._findLayerViewForLayer(i)}_enforceExclusiveVisibility(i){this._hasLayerViewVisibleOverrides()&&(i||!(i=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.getItemAt(0))),this.layerViews.forEach((e=>{e.visible=e===i})))}_layerViewsChangeHandler(i){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((i=>i.watch("visible",(e=>this._layerViewVisibleHandler(e,i)),!0))).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];let s=null;e&&e.visible&&(s=e),this._enforceVisibility(s)}_enforceVisibility(i){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":{const i=this.visible;this.layerViews.forEach((e=>{e.visible=i}));break}case"exclusive":this._enforceExclusiveVisibility(i)}}_visibilityModeHandler(){this._enforceVisibility()}_layerViewVisibleHandler(i,e){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":i!==this.visible&&(e.visible=this.visible);break;case"exclusive":this._enforceExclusiveVisibility(i&&e)}}_visibleHandler(){var i;this._hasLayerViewVisibleOverrides()&&"inherited"===(null==(i=this.layer)?void 0:i.visibilityMode)&&this._enforceVisibility()}};i([t({cast:r})],o.prototype,"layerViews",null),i([t({readOnly:!0})],o.prototype,"updatingProgress",null),i([t()],o.prototype,"view",void 0),o=i([a("esri.views.layers.GroupLayerView")],o);const n=o;export{n as default};
