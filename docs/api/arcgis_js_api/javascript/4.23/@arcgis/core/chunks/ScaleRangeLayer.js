/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";const l=l=>{let t=class extends l{constructor(){super(...arguments),this.minScale=0,this.maxScale=0}get effectiveScaleRange(){const e={minScale:this.minScale,maxScale:this.maxScale},a=this.parent;var c,l;a&&"effectiveScaleRange"in a&&(c=e,l=a.effectiveScaleRange,c.minScale=c.minScale>0?l.minScale>0?Math.min(c.minScale,l.minScale):c.minScale:l.minScale,c.maxScale=c.maxScale>0?l.maxScale>0?Math.max(c.maxScale,l.maxScale):c.maxScale:l.maxScale);const t=this._get("effectiveScaleRange");return t&&t.minScale===e.minScale&&t.maxScale===e.maxScale?t:e}};return e([a({type:Number,nonNullable:!0,json:{write:!0}})],t.prototype,"minScale",void 0),e([a({type:Number,nonNullable:!0,json:{write:!0}})],t.prototype,"maxScale",void 0),e([a({readOnly:!0})],t.prototype,"effectiveScaleRange",null),t=e([c("esri.layers.mixins.ScaleRangeLayer")],t),t};export{l as S};
