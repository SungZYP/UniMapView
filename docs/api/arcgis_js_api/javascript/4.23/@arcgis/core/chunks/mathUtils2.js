/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{c as n,d as t,s,n as i,a,b as o,l as r,e as c,f as h,g as e,h as u,i as f}from"./mathUtils.js";function m(n){const t=n[0]*n[0]+n[4]*n[4]+n[8]*n[8],s=n[1]*n[1]+n[5]*n[5]+n[9]*n[9],i=n[2]*n[2]+n[6]*n[6]+n[10]*n[10];return Math.sqrt(Math.max(t,s,i))}function M(n,t){const i=Math.sqrt(t[0]*t[0]+t[4]*t[4]+t[8]*t[8]),a=Math.sqrt(t[1]*t[1]+t[5]*t[5]+t[9]*t[9]),o=Math.sqrt(t[2]*t[2]+t[6]*t[6]+t[10]*t[10]);return s(n,i,a,o),n}function l(n,a,o){o=o||n;const r=t(n,a);s(o,n[0]-r*a[0],n[1]-r*a[1],n[2]-r*a[2]),i(o,o)}function d(n,t,o){Math.abs(n[0])>Math.abs(n[1])?s(t,0,1,0):s(t,1,0,0),a(o,n,t),i(t,t),a(t,o,n),i(o,o)}function g(n,t){return(n%t+t)%t}function b(n,t,s,i,a,o){const r=n+(t-n)*a;return r+(s+(i-s)*a-r)*o}function z(n,s,i,a=o()){const u=r(n),f=r(s),m=t(n,s)/(u*f);if(m<.9999999999999999){const t=Math.acos(m),o=((1-i)*u+i*f)/Math.sin(t),r=o/u*Math.sin((1-i)*t),e=o/f*Math.sin(i*t);return c(U,n,r),c(k,s,e),h(a,U,k)}return e(a,n,s,i)}function x(n,s,a,f=o(),m=o()){const M=r(n),l=r(s),d=t(n,s)/(M*l);if(d<.9999999999999999){const t=Math.acos(d),i=Math.sin(t),o=Math.sin(a*t),r=Math.sin((1-a)*t),e=(1-a)*M+a*l;{const t=e/i,a=t/l*o;c(U,n,t/M*r),c(k,s,a),h(f,U,k)}{const u=1/M*(-Math.cos((1-a)*t)*t*e+r*(-M+l));c(U,n,u);const f=1/l*(Math.cos(a*t)*t*e+o*(-M+l));c(k,s,f),h(m,U,k),c(m,m,1/i)}return m}return e(f,n,s,a),u(m,s,n),i(m,m),m}function p(n,s,o){n=i(U,n),s=i(k,s);const r=f(t(n,s));if(o){const i=a(S,n,s);if(t(i,o)<0)return-r}return r}function q(n){const t=n.length;return function(s){if(s<=n[0][0])return n[0][1];if(s>=n[t-1][0])return n[t-1][1];let i=1;for(;s>n[i][0];)i++;const a=n[i-1][0],o=n[i][0],r=(o-s)/(o-a);return r*n[i-1][1]+(1-r)*n[i][1]}}class w{constructor(n,t){this.min=n,this.max=t,this.range=t-n}ndiff(n,t=0){return Math.ceil((n-t)/this.range)*this.range+t}_normalize(n,t,s,i=0,a=!1){return(s-=i)<n?s+=this.ndiff(n-s):s>t&&(s-=this.ndiff(s-t)),a&&s===t&&(s=n),s+i}normalize(n,t=0,s=!1){return this._normalize(this.min,this.max,n,t,s)}clamp(t,s=0){return n(t-s,this.min,this.max)+s}monotonic(n,t,s){return n<t?t:t+this.ndiff(n-t,s)}minimalMonotonic(n,t,s){return this._normalize(n,n+this.range,t,s)}center(n,t,s){return t=this.monotonic(n,t,s),this.normalize((n+t)/2,s)}diff(n,t,s){return this.monotonic(n,t,s)-n}shortestSignedDiff(n,t){n=this.normalize(n);const s=(t=this.normalize(t))-n,i=t<n?this.minimalMonotonic(n,t)-n:t-this.minimalMonotonic(t,n);return Math.abs(s)<Math.abs(i)?s:i}contains(n,t,s){return t=this.minimalMonotonic(n,t),(s=this.minimalMonotonic(n,s))>n&&s<t}}function I(n,s,o,r){u(P,s,n),u(_,o,n),a(r,P,_),i(r,r),r[3]=-t(n,r)}const P=o(),_=o();function j(n){for(const t in n){const s=n[t];s instanceof Function&&(n[t]=s.bind(n))}return n}const C=j(new w(0,2*Math.PI)),D=j(new w(-Math.PI,Math.PI)),F=j(new w(0,360)),S=o(),U=o(),k=o();export{w as C,l as a,z as b,F as c,q as d,p as e,D as f,b as g,M as h,C as i,g as j,m,I as p,x as s,d as t};
