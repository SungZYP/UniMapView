/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{L as e}from"./Logger.js";import{i as t,u as i,b as r}from"../core/lang.js";import{b as s}from"./screenUtils.js";import{c as o}from"./vec2.js";import{s as a,h as n,d as l,e as p,f as c,j as d,l as u,u as f,v as m,b as h}from"./mathUtils.js";import{P as g}from"./frustum.js";import{c as P,d as v,f as S,b as x}from"./lineSegment.js";import{c as C,j as b,k as T,n as O}from"./plane.js";import{B as E,c as R}from"./BufferView.js";import{T as _,d as A,k as y,f as j,s as w,p as L,c as N,R as U,S as I,P as D,b as B,l as H,a as z,h as q,i as M,t as V,n as W,o as F,q as X,G,w as $}from"./glUtil3D.js";import{b as k}from"./geometryDataUtils.js";import{D as Q,M as J,c as K,a as Y}from"./Material.js";import{R as Z}from"./RenderSlot.js";import{i as ee}from"./Util.js";import{V as te}from"./VertexAttribute.js";import{b as ie,d as re,D as se}from"./DefaultBufferWriter.js";import{i as oe}from"./utils2.js";import{_ as ae}from"./tslib.es6.js";import{V as ne}from"./VertexColor.glsl.js";import{L as le}from"./lineUtils.js";import{S as pe,g as ce}from"./ShaderBuilder.js";import{B as de,P as ue}from"./enums.js";import{s as fe,m as me,d as he,a as ge}from"./OrderIndependentTransparency.js";const Pe=Object.freeze({__proto__:null,build:function(e){const t=new pe;return t.include(_,{linearDepth:!1}),t.include(ne,e),t.include(le,{...e,stippleRequiresStretchMeasure:!1}),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),e.stippleEnabled&&(t.vertex.uniforms.add("ndcToPixel","vec2"),t.attributes.add(te.UV0,"vec2"),t.attributes.add(te.AUXPOS1,"vec3")),t.attributes.add(te.POSITION,"vec3"),t.varyings.add("vpos","vec3"),t.vertex.code.add(ce`void main(void) {
vpos = position;
forwardNormalizedVertexColor();
gl_Position = transformPosition(proj, view, vpos);`),e.stippleEnabled&&(t.vertex.code.add(ce`vec4 vpos2 = transformPosition(proj, view, auxpos1);
float lineSegmentPixelSize = length((vpos2.xy / vpos2.w - gl_Position.xy / gl_Position.w) * ndcToPixel);`),e.draped||t.vertex.code.add(ce`vec3 segmentCenter = (position + auxpos1) * 0.5;
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),t.vertex.code.add(ce`float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);`),e.draped?t.vertex.code.add(ce`float startPseudoScreen = uv0.y * discreteWorldToScreenRatio - mix(0.0, lineSegmentPixelSize, uv0.x);
float segmentLengthPseudoScreen = lineSegmentPixelSize;`):t.vertex.code.add(ce`float segmentLengthRender = length(position - auxpos1);
float startPseudoScreen = mix(uv0.y, uv0.y - segmentLengthRender, uv0.x) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),t.vertex.code.add(ce`vec2 stippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, lineSegmentPixelSize, stipplePatternPixelSize);
vStippleDistance = mix(stippleDistanceLimits.x, stippleDistanceLimits.y, uv0.x);
vStippleDistance *= gl_Position.w;`)),t.vertex.code.add(ce`}`),e.output===A.Highlight&&t.include(y),t.include(j,e),t.fragment.uniforms.add("constantColor","vec4").add("alphaCoverage","float"),t.fragment.code.add(ce`
  void main() {
    discardBySlice(vpos);

    vec4 color = ${e.attributeColor?"vColor":"constantColor"};

    float stippleAlpha = getStippleAlpha();
    discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);

    vec4 finalColor = blendStipple(vec4(color.rgb, color.a * alphaCoverage), stippleAlpha);

    if (finalColor.a < ${ce.float(w)}) {
      discard;
    }

    ${e.output===A.Color?ce`gl_FragColor = highlightSlice(finalColor, vpos);`:""}
    ${e.output===A.Highlight?ce`outputHighlight();`:""}
  }
  `),t}});class ve extends I{constructor(e,t,i){super(e,t,i),this.stipplePattern=null,this.stippleTextureBind=null,this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==A.Highlight}initializeProgram(e){const t=ve.shader.get(),i=this.configuration,r=t.build({output:i.output,attributeColor:i.vertexColors,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:i.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:i.stippleOffColorEnabled,stippleRequiresClamp:!1,stippleScaleWithLineWidth:!1,stipplePreferContinuous:i.stipplePreferContinuous});return new D(e.rctx,r,Q)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,r){if(B(this.program,r.camera.projectionMatrix),this.stipplePattern!==e.stipplePattern){const t=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,t),this.stipplePattern=t}if(this.stippleEnabled){const{pixelSize:e,sdfNormalizer:i,pixels:s}=t(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",i),this.program.setUniform1f("stipplePatternTextureSize",s),this.program.setUniform1f("stipplePatternPixelSize",e),this.program.setUniform1f("stipplePatternPixelSizeInv",1/e),this.program.setUniform1f("pixelRatio",r.camera.pixelRatio),this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/r.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/r.camera.perScreenPixelRatio),this.program.setUniform2f("ndcToPixel",r.camera.fullViewport[2]/2,r.camera.fullViewport[3]/2)}if(this.program.setUniform4fv("constantColor",e.color),this.program.setUniform1f("alphaCoverage",Math.min(1,e.width*r.camera.pixelRatio)),this.configuration.stippleOffColorEnabled){const t=i(e.stippleOffColor);this.program.setUniform4f("stippleOffColor",t[0],t[1],t[2],t.length>3?t[3]:1)}this.configuration.output===A.Highlight&&H(this.program,r)}bindDraw(e){z(this.program,e),this.stippleEnabled&&!this.configuration.draped&&q(this.program,e.origin,e.camera.viewInverseTransposeMatrix),M(this.program,this.configuration,e),this.program.rebindTextures()}initializePipeline(){const e=this.configuration,t=fe(de.SRC_ALPHA,de.ONE,de.ONE_MINUS_SRC_ALPHA,de.ONE_MINUS_SRC_ALPHA),i=(t,i=null,r=null)=>me({blending:i,depthTest:V,depthWrite:r,colorWrite:he,stencilWrite:e.sceneHasOcludees?W:null,stencilTest:e.sceneHasOcludees?t?F:X:null});return e.output===A.Color?(this._occludeePipelineState=i(!0,e.transparent||this.stippleEnabled?t:null,ge),i(!1,e.transparent||this.stippleEnabled?t:null,ge)):i(!1)}get primitiveType(){return ue.LINES}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}ve.shader=new U(Pe,(()=>Promise.resolve().then((()=>Pe))));class Se extends N{constructor(){super(...arguments),this.output=A.Color,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.sceneHasOcludees=!1}}ae([L({count:A.COUNT})],Se.prototype,"output",void 0),ae([L()],Se.prototype,"slicePlaneEnabled",void 0),ae([L()],Se.prototype,"vertexColors",void 0),ae([L()],Se.prototype,"transparent",void 0),ae([L()],Se.prototype,"draped",void 0),ae([L()],Se.prototype,"stippleEnabled",void 0),ae([L()],Se.prototype,"stippleOffColorEnabled",void 0),ae([L()],Se.prototype,"stipplePreferContinuous",void 0),ae([L()],Se.prototype,"sceneHasOcludees",void 0);const xe=e.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");var Ce;!function(e){e[e.START=0]="START",e[e.END=1]="END"}(Ce||(Ce={}));class be extends J{constructor(e){super(e,Ee),this._techniqueConfig=new Se}getTechniqueConfig(e,i){this._techniqueConfig.output=e,this._techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this._techniqueConfig.vertexColors=this.parameters.vertexColors,this._techniqueConfig.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._techniqueConfig.draped=i.slot===Z.DRAPED_MATERIAL;const r=t(this.parameters.stipplePattern);return this._techniqueConfig.stippleEnabled=r,this._techniqueConfig.stippleOffColorEnabled=r&&t(this.parameters.stippleOffColor),this._techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this._techniqueConfig.stipplePreferContinuous=this.parameters.stipplePreferContinuous,this._techniqueConfig}getPassParameters(){return this.parameters}intersect(e,i,r,s,o,a,n,l,p){t(p)?K(e,s,p,a,1,n):this._intersectLineGeometry(e,i,r,s,n)}_intersectLineGeometry(e,t,i,r,s){if(!r.options.selectionMode||oe(t))return;if(!ee(i))return void xe.error("intersection assumes a translation-only matrix");const m=e.vertexAttributes.get(te.POSITION).data,h=r.camera,P=De;o(P,r.point);a(Be[0],P[0]-2,P[1]+2,0),a(Be[1],P[0]+2,P[1]+2,0),a(Be[2],P[0]+2,P[1]-2,0),a(Be[3],P[0]-2,P[1]-2,0);for(let e=0;e<4;e++)if(!h.unprojectFromRenderScreen(Be[e],He[e]))return;b(h.eye,He[0],He[1],ze),b(h.eye,He[1],He[2],qe),b(h.eye,He[2],He[3],Me),b(h.eye,He[3],He[0],Ve);let C=Number.MAX_VALUE,E=0;for(let e=0;e<m.length-5;e+=3){if(Re[0]=m[e]+i[12],Re[1]=m[e+1]+i[13],Re[2]=m[e+2]+i[14],_e[0]=m[e+3]+i[12],_e[1]=m[e+4]+i[13],_e[2]=m[e+5]+i[14],T(ze,Re)<0&&T(ze,_e)<0||T(qe,Re)<0&&T(qe,_e)<0||T(Me,Re)<0&&T(Me,_e)<0||T(Ve,Re)<0&&T(Ve,_e)<0)continue;if(h.projectToRenderScreen(Re,je),h.projectToRenderScreen(_e,we),je[2]<0&&we[2]>0){n(Ae,Re,_e);const e=h.frustum,t=-T(e[g.NEAR],Re)/l(Ae,O(e[g.NEAR]));p(Ae,Ae,t),c(Re,Re,Ae),h.projectToRenderScreen(Re,je)}else if(je[2]>0&&we[2]<0){n(Ae,_e,Re);const e=h.frustum,t=-T(e[g.NEAR],_e)/l(Ae,O(e[g.NEAR]));p(Ae,Ae,t),c(_e,_e,Ae),h.projectToRenderScreen(_e,we)}else if(je[2]<0&&we[2]<0)continue;je[2]=0,we[2]=0;const t=v(S(je,we,Ue),P);t<C&&(C=t,d(Le,Re),d(Ne,_e),E=e/3)}const R=r.rayBegin,_=r.rayEnd;if(C<4){let e=Number.MAX_VALUE;if(x(S(Le,Ne,Ue),S(R,_,Ie),ye)){n(ye,ye,R);const t=u(ye);p(ye,ye,1/t),e=t/f(R,_)}s(e,ye,E,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const r=i.get(te.POSITION);return k(r,null,!1,t)}requiresSlot(e){return e===Z.OPAQUE_MATERIAL||e===Z.DRAPED_MATERIAL}createGLMaterial(e){return e.output===A.Color||e.output===A.Highlight?new Te(e):null}createBufferWriter(){const e=this.parameters.vertexColors?ie:re;return r(this.parameters.stipplePattern)?new se(e):new Oe(e.clone().vec3f(te.AUXPOS1).vec2f(te.UV0))}}class Te extends G{updateParameters(e){return this.ensureTechnique(ve,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return this._output===A.Color&&this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}class Oe{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(te.POSITION).length}write(e,t,i,r){$(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,i,r),this._writeAuxpos1(e,t,i,r),this._writeUV0(e,t,i,r)}_writeAuxpos1(e,t,i,r){const s=i.getField(te.AUXPOS1,E),o=t.indices.get(te.POSITION),a=t.vertexAttributes.get(te.POSITION).data,n=e.transformation,l=s.typedBufferStride,p=s.typedBuffer;r*=l;for(let e=0;e<o.length-1;e+=2)for(const t of[1,0]){const i=3*o[e+t],s=a[i],c=a[i+1],d=a[i+2],u=n[0]*s+n[4]*c+n[8]*d+n[12],f=n[1]*s+n[5]*c+n[9]*d+n[13],m=n[2]*s+n[6]*c+n[10]*d+n[14];p[r]=u,p[r+1]=f,p[r+2]=m,r+=l}}_writeUV0(e,t,i,r){var s;const o=i.getField(te.UV0,R),n=t.indices.get(te.POSITION),l=t.vertexAttributes.get(te.POSITION).data,p=null==(s=t.vertexAttributes.get(te.DISTANCETOSTART))?void 0:s.data,c=e.transformation,u=o.typedBufferStride,h=o.typedBuffer;let g=0;h[r*=u]=Ce.START,h[r+1]=g,r+=u;const P=3*n[0],v=a(Re,l[P],l[P+1],l[P+2]);c&&m(v,v,c);const S=_e,x=n.length-1;let C=1;const b=p?(e,t,i)=>g=p[i]:(e,t,i)=>g+=f(e,t);for(let e=1;e<x;e+=2){const t=3*n[e];a(S,l[t],l[t+1],l[t+2]),c&&m(S,S,c),b(v,S,C++);for(let e=0;e<2;++e)h[r]=1-e,h[r+1]=g,r+=u;d(v,S)}const T=3*n[x];a(S,l[T],l[T+1],l[T+2]),c&&m(S,S,c),b(v,S,C),h[r]=Ce.END,h[r+1]=g}}const Ee={color:[1,1,1,1],vertexColors:!1,slicePlaneEnabled:!1,width:1,stipplePattern:null,stippleOffColor:null,stipplePreferContinuous:!0,sceneHasOcludees:!1,...Y},Re=h(),_e=h(),Ae=h(),ye=h(),je=s(),we=s(),Le=h(),Ne=h(),Ue=P(),Ie=P(),De=h(),Be=[s(),s(),s(),s()],He=[h(),h(),h(),h()],ze=C(),qe=C(),Me=C(),Ve=C();export{be as N};
