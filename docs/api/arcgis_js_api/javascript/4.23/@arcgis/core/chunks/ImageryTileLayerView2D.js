/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{L as s}from"./Logger.js";import{debounce as i,isAbortError as r,eachAlways as o}from"../core/promiseUtils.js";import{watch as a,syncAndInitial as l,initial as n}from"../core/reactiveUtils.js";import{watch as p}from"../core/watchUtils.js";import{property as m}from"../core/accessorSupport/decorators/property.js";import{i as h,b as c,u}from"../core/lang.js";import"./ensureType.js";import{subclass as y}from"../core/accessorSupport/decorators/subclass.js";import{R as d,F as b}from"./RasterVFDisplayObject.js";import{L as f}from"./LayerView2D.js";import{b as g}from"./aaBoundingRect.js";import{m as j}from"../views/2d/ViewState.js";import{R as w,b as _,B as v}from"./brushes.js";import{c as P}from"./mat3f32.js";import{T as S}from"./TiledDisplayObject.js";import{W as I}from"./enums4.js";import{T}from"./TileContainer.js";import"../geometry.js";import{HandleOwner as R}from"../core/HandleOwner.js";import U from"../geometry/Point.js";import C from"../layers/support/PixelBlock.js";import V from"../layers/support/TileInfo.js";import{u as x,c as D,r as L,g as k}from"./RawBlockCache.js";import{e as z}from"./pixelUtils.js";import{g as F,h as B}from"./rasterProjectionHelper.js";import{a as G,T as M}from"./TileStrategy.js";import{T as E}from"./TileInfoView.js";import"./TileKey.js";import{g as O}from"./capabilities2.js";import W from"../geometry/Extent.js";import{c as q}from"./util2.js";import{h as A}from"./vectorFieldUtils.js";import{d as Q,m as H}from"./mat3.js";import{I as J}from"./ImageryTileLayerView.js";import N from"../views/layers/LayerView.js";import{R as K}from"./RefreshableLayerView.js";import"../PopupTemplate.js";import"../core/Collection.js";import"./ArrayPool.js";import"./Evented.js";import"../core/Accessor.js";import"./deprecate.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Error.js";import"./object.js";import"../config.js";import"./string.js";import"./shared.js";import"./JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils3.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils4.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"./Loadable.js";import"./Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"./Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./dataUtils.js";import"./WGLContainer.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./mat4f32.js";import"./mat4.js";import"./_commonjsHelpers.js";import"./DisplayObject.js";import"./earcut.js";import"./vec2.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./number2.js";import"./VertexArrayObject.js";import"./Texture.js";import"./context-util.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./vec2f32.js";import"./Utils16.js";import"./enums2.js";import"./ClipRect.js";import"../Viewpoint.js";import"../Camera.js";import"./mathUtils2.js";import"./mat2d.js";import"./mat2df32.js";import"./mat2df64.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"../geometry/projection.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./DefaultVertexAttributeLayouts.js";import"./FramebufferObject.js";import"./definitions.js";import"./vec4f32.js";import"./ProgramTemplate.js";import"./Program.js";import"./StyleDefinition.js";import"./config.js";import"./GeometryUtils2.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"../core/Handles.js";import"../layers/support/LOD.js";import"./QueueProcessor.js";import"./Queue.js";import"./commonProperties.js";import"../TimeExtent.js";import"./timeUtils.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./popupUtils.js";class X extends S{constructor(e,t,s,i,r,o=null){super(e,t,s,i,r),this.bitmap=new w(o,null,null),this.bitmap.coordScale=[i,r],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:P(),tileMat3:P()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class Y extends T{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,i]=this._tileInfoView.tileInfo.size;return new X(e,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[_.raster],target:()=>this.children.map((e=>e.bitmap)),drawPhase:I.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===I.MAP&&super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(g(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this._tileInfoView,i=j(s.spatialReference);if(i){const{resolution:r}=s.lodAt(e.level),o=i/r%s.size[0],a=o?(s.size[0]-o)*r:0;t[0]-=a*e.world,t[2]-=a*e.world}}return t}}const Z=[0,0],$=s.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let ee=class extends R{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=i(((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.doRefresh():this._redrawImage(t)))}get useWebGLForProcessing(){var e;return null==(e=this._get("useWebGLForProcessing"))||e}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return null==this._get("useProgressiveUpdate")||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new G({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:s,scale:i}=e.state,r=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){var o;if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[r.level],i=t.toJSON?t:W.fromJSON(t);x(this._blockCacheRegistryUrl,this._blockCacheRegistryId,i,s,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,(null==(o=this.previousLOD)?void 0:o.level)!==r.level&&(this.previousLOD=r,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._fetchQueue.updating||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){O().supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new E(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new M({tileInfoView:this._tileInfoView,concurrency:e,process:(e,t)=>this._fetchTile1(e,t)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new G({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,D(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",(()=>{e.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&h(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[s,i]=e,r=new C({width:s,height:i,pixels:[new Uint8Array(s*i)],mask:new Uint8Array(s*i),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=r),r}_fetchTile1(e,t){const s=!c(t)&&t.signal,i=this.canUseWebGLForProcessing(),{layerView:r}=this,o=!r.tileInfo.isWrappable&&h(F(r.view.spatialReference)),a={allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:i?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:i,signal:u(s),srcResolution:this._srcResolutions[e.level],timeExtent:r.timeExtent,tileInfo:r.tileInfo,disableWrapAround:o};return this.fetchTile(e,a)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new U({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:s,srcResolutions:i,isCustomTilingScheme:r}=B(this.layer.rasterInfo,e),o=V.create({spatialReference:e,size:512,scales:s});(0===o.origin.x||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=r,this.layerView.set("tileInfo",o),this._srcResolutions=null!=i?i:[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),{bandIds:s}=this.layer;let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){i=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(e){r(e)&&$.error(e)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(Z,e.key),a=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:s,coords:o,resolution:a}),e.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(e)}catch(e){r(e)||$.error(e)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map((async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await o(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!s||!s.pixelBlock)return;const i=this.layer.symbolizer.generateWebGLParameters({pixelBlock:z(s.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&i&&"stretch"===i.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(i.factor=i.factor.map((e=>255*e)),i.outMin=Math.round(255*i.outMin),i.outMax=Math.round(255*i.outMax)),this._globalSymbolizerParams=i}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:s,raster:i}=this.layer,{multidimensionalDefinition:r}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),o=null!=s&&s.multidimensionalInfo?i.getSliceIndex(r):null,a=k(t,o);if(a!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&D(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=L(a,this.layer.raster.rasterInfo),e){const e=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),t=this._srcResolutions[e.level];x(a,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,t,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=a}}async doRefresh(){await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._tileStrategy.tiles.forEach((t=>e.push(this._enqueueTileFetch(t)))),await o(e)}};e([m()],ee.prototype,"_fetchQueue",void 0),e([m()],ee.prototype,"_globalUpdateRequested",void 0),e([m()],ee.prototype,"attached",void 0),e([m()],ee.prototype,"container",void 0),e([m()],ee.prototype,"layer",void 0),e([m()],ee.prototype,"layerView",void 0),e([m()],ee.prototype,"type",void 0),e([m()],ee.prototype,"useWebGLForProcessing",null),e([m()],ee.prototype,"useProgressiveUpdate",null),e([m()],ee.prototype,"timeExtent",void 0),e([m()],ee.prototype,"updating",null),ee=e([y("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],ee);let te=class extends ee{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new Y(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!("majority"===this.layer.interpolation&&q(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:s}=this.layer,i=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{source:o,symbolizerParams:a,globalSymbolizerParams:l,suspended:n,coords:p,resolution:m}=t,{bitmap:c}=e;if([c.x,c.y]=p,c.resolution=m,o&&h(o)&&h(o.pixelBlock)){const e={extent:o.extent,pixelBlock:o.pixelBlock};if(c.rawPixelData=e,r)c.source=o.pixelBlock,c.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===(null==l?void 0:l.type)?l:null);c.source=t,c.isRendereredSource=!0}c.symbolizerParameters=r?a:null,r?c.transformGrid||(c.transformGrid=o.transformGrid):c.transformGrid=null}else{const e=this.createEmptyTilePixelBlock();c.source=e,c.symbolizerParameters=r?a:null,c.transformGrid=null}c.bandIds=r?s:null,c.width=this._tileInfoView.tileInfo.size[0],c.height=this._tileInfoView.tileInfo.size[1],c.interpolation=i,c.suspended=n,c.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:i}=t,{bandIds:r}=this.layer,o=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:n}=l;!a&&h(n)?(l.source=await this.layer.applyRenderer(n,"stretch"===(null==i?void 0:i.type)?i:null),l.isRendereredSource=!0):(l.isRendereredSource&&h(n)&&(l.source=n.pixelBlock),l.isRendereredSource=!1),l.symbolizerParameters=a?i||s:null,l.bandIds=a?r:null,l.interpolation=o,l.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if("raster-colormap"===e||"unique-value"===e||"class-breaks"===e)return"nearest";const{interpolation:t}=this.layer,{renderer:s}=this.layer;return"raster-stretch"===s.type&&null!=s.colorRamp?"bilinear"===t||"cubic"===t?"bilinear":"nearest":t}};e([m()],te.prototype,"container",void 0),e([m()],te.prototype,"layer",void 0),e([m()],te.prototype,"type",void 0),te=e([y("esri.views.2d.layers.imagery.ImageryTileView2D")],te);const se=te;class ie extends S{constructor(e,t,s,i,r,o=null){super(e,t,s,i,r),this.tileData=new d(o),this.tileData.coordScale=[i,r],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:P(),tileMat3:P()}}setTransform(e,t){super.setTransform(e,t);const s=t/(e.resolution*e.pixelRatio),i=this.transforms.tileMat3,[r,o]=this.tileData.offset,a=[this.x+r*t,this.y-o*t],[l,n]=e.toScreenNoRotation([0,0],a),{symbolTileSize:p}=this.tileData.symbolizerParameters,m=Math.round((this.width-this.tileData.offset[0])/p)*p,h=Math.round((this.height-this.tileData.offset[1])/p)*p,c=m/this.rangeX*s,u=h/this.rangeY*s;Q(i,c,0,0,0,u,0,l,n,1),H(this.transforms.dvs,e.displayViewMat3,i),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class re extends T{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(g(),e),[s,i]=this._tileInfoView.tileInfo.size;return new ie(e,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[v],target:()=>this.children.map((e=>e.tileData)),drawPhase:I.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===I.MAP&&this.symbolTypes.forEach((t=>{e.renderPass=t,super.doRender(e)}))}}let oe=class extends ee{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.rasterInfo.dataType&&null!=s&&s.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,t)),s}updateTileSource(e,t){const s=t.symbolizerParams,{tileData:i}=e;i.key=e.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=s,{source:o}=t;if(i.offset=this._getTileSymbolOffset(i.key,r),h(o)&&h(o.pixelBlock)){const e={extent:o.extent,pixelBlock:o.pixelBlock};i.rawPixelData=e,i.symbolizerParameters=s,i.source=this._sampleVectorFieldData(o.pixelBlock,s,i.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo[0]-i.offset[0])/r),Math.round((this._tileInfoView.tileInfo[1]-i.offset[1])/r)],t=this.createEmptyTilePixelBlock(e);i.source=t,i.symbolizerParameters=s}return i.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var s;const i=t.local,{symbolTileSize:r}=i,{tileData:o}=e;o.offset=this._getTileSymbolOffset(o.key,r);const a=o.symbolizerParameters.symbolTileSize;return o.symbolizerParameters=i,h(null==(s=o.rawPixelData)?void 0:s.pixelBlock)&&a!==r&&(o.source=this._sampleVectorFieldData(o.rawPixelData.pixelBlock,o.symbolizerParameters,o.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new re(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=a((()=>this.layer.renderer),(e=>this._updateSymbolType(e)))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const s=e.col*this._tileInfoView.tileInfo.size[0]%t,i=e.row*this._tileInfoView.tileInfo.size[1]%t;return[s>t/2?t-s:-s,i>t/2?t-i:-i]}_sampleVectorFieldData(e,t,s){const{symbolTileSize:i}=t;return A(e,"vector-uv",i,s)}_updateSymbolType(e){"vector-field"===e.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};e([m()],oe.prototype,"container",void 0),e([m()],oe.prototype,"layer",void 0),e([m()],oe.prototype,"type",void 0),oe=e([y("esri.views.2d.layers.imagery.VectorFieldTileView2D")],oe);const ae=oe,le=s.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let ne=class extends(J(K(f(N)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([p(this.layer,["bandIds","renderer","interpolation","multidimensionalDefinition"],((e,t,s)=>{const i="multidimensionalDefinition"===s,o="interpolation"===s&&("majority"===e||"majority"===t)&&q(this.layer),a="renderer"===s&&t.type!==e.type;a&&this._updateSubview();const l=i||o||a;this.subview.redrawOrRefetch(l).catch((e=>{r(e)||le.error(e)})),this.notifyChange("updating")})),a((()=>{var e;return null!=(e=this.layer.blendMode)?e:"normal"}),(e=>{this.subview.container.blendMode=e}),l),a((()=>{var e;return null!=(e=this.layer.effect)?e:null}),(e=>{this.subview.container.effect=e}),l),a((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch((e=>{r(e)||le.error(e)}))}),n)],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),null==(e=this.subview)||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,s){return[new t({attributes:{},geometry:e.clone()})]}doRefresh(){return this.subview.doRefresh()}_updateSubview(){const e="vector-field"===this.layer.renderer.type?"rasterVF":"flow"===this.layer.renderer.type?"flow":"raster";if(this.subview){var t;if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),null==(t=this.subview)||t.destroy(),this.subview=null}const{layer:s}=this;let i;i="rasterVF"===e?new ae({layer:s,layerView:this}):"flow"===e?new b({layer:s,layerView:this}):new se({layer:s,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i&&(i.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){null!=e&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};e([m()],ne.prototype,"subview",void 0),e([m()],ne.prototype,"useWebGLForProcessing",null),e([m()],ne.prototype,"useProgressiveUpdate",null),ne=e([y("esri.views.2d.layers.ImageryTileLayerView2D")],ne);const pe=ne;export{pe as default};
