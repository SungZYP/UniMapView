/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{b as r,g as t,e as i,c as s}from"../geometry/Extent.js";import{isPolygon as o,isExtent as n,getJsonType as l}from"../geometry/support/jsonUtils.js";import{j as a}from"../geometry/SpatialReference.js";import{e as p}from"./featureConversionUtils.js";import{O as u}from"./OptimizedFeature.js";import{c}from"./projectionSupport.js";import{a as f}from"./utils17.js";function m(e,r){return e?r?4:3:r?3:2}function y(e,r,t,i,s){if(!e)return!1;const o=m(r,t),{coords:n,lengths:l}=e;let a=!1,p=0;for(const e of l)a=R(a,n,o,p,e,i,s),p+=e*o;return a}function R(e,r,t,i,s,o,n){let l=e,a=i;for(let e=i,p=i+s*t;e<p;e+=t){a=e+t,a===p&&(a=i);const s=r[e],u=r[e+1],c=r[a],f=r[a+1];(u<n&&f>=n||f<n&&u>=n)&&s+(n-u)/(f-u)*(c-s)<o&&(l=!l)}return l}const S={esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"intersects",esriSpatialRelIndexIntersects:null,esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:null},g={esriSpatialRelIntersects:!0,esriSpatialRelContains:!0,esriSpatialRelWithin:!0,esriSpatialRelCrosses:!0,esriSpatialRelDisjoint:!0,esriSpatialRelTouches:!0,esriSpatialRelOverlaps:!0,esriSpatialRelEnvelopeIntersects:!0,esriSpatialRelIndexIntersects:!1,esriSpatialRelRelation:!1},h={esriGeometryPoint:!0,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!0},d={esriGeometryPoint:!0,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!1};function j(e,l,a,c,R){if(o(l)&&"esriGeometryPoint"===a&&("esriSpatialRelIntersects"===e||"esriSpatialRelContains"===e)){const e=p(new u,l,!1,!1);return Promise.resolve((r=>function(e,r,t,i){return y(e,r,t,i.coords[0],i.coords[1])}(e,!1,!1,r)))}if(o(l)&&"esriGeometryMultipoint"===a){const r=p(new u,l,!1,!1);if("esriSpatialRelContains"===e)return Promise.resolve((e=>function(e,r,t,i,s,o){const n=m(s,o),{coords:l,lengths:a}=i;if(!a)return!1;for(let i=0,s=0;i<a.length;i++,s+=n)if(!y(e,r,t,l[s],l[s+1]))return!1;return!0}(r,!1,!1,e,c,R)))}if(n(l)&&"esriGeometryPoint"===a&&("esriSpatialRelIntersects"===e||"esriSpatialRelContains"===e))return Promise.resolve((e=>i(l,f(a,c,R,e))));if(n(l)&&"esriGeometryMultipoint"===a&&"esriSpatialRelContains"===e)return Promise.resolve((e=>s(l,f(a,c,R,e))));if(n(l)&&"esriSpatialRelIntersects"===e){const e=function(e){return"mesh"===e?r:t(e)}(a);return Promise.resolve((r=>e(l,f(a,c,R,r))))}return import("./geometryEngineJSON.js").then((e=>e.g)).then((r=>{const t=r[S[e]].bind(null,l.spatialReference,l);return e=>t(f(a,c,R,e))}))}async function G(r,t,i){const{spatialRel:s,geometry:o}=r;if(o){if(!0!==g[s])throw new e("feature-store:unsupported-query","Unsupported query spatial relationship",{query:r});if(a(o.spatialReference)&&a(i)){if(!function(e){return!0===h[l(e)]}(o))throw new e("feature-store:unsupported-query","Unsupported query geometry type",{query:r});if(!function(e){return!0===d[e]}(t))throw new e("feature-store:unsupported-query","Unsupported layer geometry type",{query:r});if(r.outSR)return c(r.geometry&&r.geometry.spatialReference,r.outSR)}}}function v(e){if(n(e))return!0;if(o(e)){for(const r of e.rings){if(5!==r.length)return!1;if(r[0][0]!==r[1][0]||r[0][0]!==r[4][0]||r[2][0]!==r[3][0]||r[0][1]!==r[3][1]||r[0][1]!==r[4][1]||r[1][1]!==r[2][1])return!1}return!0}return!1}export{G as a,v as c,j as g};
