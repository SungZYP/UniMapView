/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{d as e,T as t,O as r,f as s,C as a,m as i,k as o,s as n,p as l,c as p,S as u,P as c,b as h,l as d,g as f,a as g,i as m,n as v,o as b,q as C,R as P,G as T}from"./glUtil3D.js";import{C as y,T as E}from"./basicInterfaces.js";import{o as O,D,b as _}from"./DefaultBufferWriter.js";import{D as A,a as w,M as x,i as q}from"./Material.js";import{m as F,b as S,o as H,c as j,f as N,a as R,d as I,g as $,h as L}from"./OrderIndependentTransparency.js";import{R as M}from"./RenderSlot.js";import{_ as U}from"./tslib.es6.js";import{V as G}from"./VertexColor.glsl.js";import{S as V,g as W,R as z}from"./ShaderBuilder.js";import{V as B}from"./VertexAttribute.js";const Q=Object.freeze({__proto__:null,build:function(l){const p=new V,u=l.output===e.Depth;return p.include(t,{linearDepth:u}),p.include(G,l),p.vertex.uniforms.add("proj","mat4").add("view","mat4"),p.attributes.add(B.POSITION,"vec3"),p.varyings.add("vpos","vec3"),l.multipassTerrainEnabled&&p.varyings.add("depth","float"),u&&(p.include(r,l),p.vertex.uniforms.add("nearFar","vec2"),p.varyings.add("linearDepth","float")),p.vertex.code.add(W`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      ${l.multipassTerrainEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = ${u?W`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);`:W`transformPosition(proj, view, vpos);`}
    }
  `),p.include(s,l),p.fragment.include(a),l.multipassTerrainEnabled&&(p.fragment.include(z),p.include(i,l)),p.fragment.uniforms.add("eColor","vec4"),l.output===e.Highlight&&p.include(o),p.fragment.code.add(W`
  void main() {
    discardBySlice(vpos);
    ${l.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
    vec4 fColor = ${l.attributeColor?"vColor * eColor;":"eColor;"}

    if (fColor.a < ${W.float(n)}) {
      discard;
    }

    ${l.output===e.Alpha?W`gl_FragColor = vec4(fColor.a);`:""}

    ${l.output===e.Color?W`gl_FragColor = highlightSlice(fColor, vpos); ${l.oitEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    ${l.output===e.Highlight?W`outputHighlight();`:""};
    ${l.output===e.Depth?W`outputDepth(linearDepth);`:""};
  }
  `),p}});class k extends u{initializeProgram(e){const t=k.shader.get(),r=this.configuration,s=t.build({output:r.output,oitEnabled:r.transparencyPassType===E.Color,attributeColor:r.vertexColors,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new c(e.rctx,s,A)}bindPass(t,r){h(this.program,r.camera.projectionMatrix),this.program.setUniform4fv("eColor",t.color),this.configuration.output===e.Highlight&&d(this.program,r),(this.configuration.output===e.Depth||r.multipassTerrainEnabled)&&this.program.setUniform2fv("nearFar",r.camera.nearFar),r.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",r.inverseViewport),f(this.program,r))}bindDraw(e){g(this.program,e),this.program.rebindTextures(),m(this.program,this.configuration,e)}_createPipeline(t,r){const s=this.configuration,a=t===E.NONE,i=t===E.FrontFace;return F({blending:s.output!==e.Color&&s.output!==e.Alpha||!s.transparent?null:a?S:H(t),culling:j(s.cullFace),depthTest:{func:N(t)},depthWrite:a||i?s.writeDepth&&R:null,colorWrite:I,stencilWrite:s.sceneHasOcludees?v:null,stencilTest:s.sceneHasOcludees?r?b:C:null,polygonOffset:a||i?s.polygonOffset&&J:$(s.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._createPipeline(this.configuration.transparencyPassType,!0),this._createPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}k.shader=new P(Q,(()=>Promise.resolve().then((()=>Q))));const J={factor:1,units:1};class K extends p{constructor(){super(...arguments),this.output=e.Color,this.cullFace=y.None,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparencyPassType=E.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}U([l({count:e.COUNT})],K.prototype,"output",void 0),U([l({count:y.COUNT})],K.prototype,"cullFace",void 0),U([l()],K.prototype,"slicePlaneEnabled",void 0),U([l()],K.prototype,"vertexColors",void 0),U([l()],K.prototype,"transparent",void 0),U([l()],K.prototype,"polygonOffset",void 0),U([l()],K.prototype,"enableOffset",void 0),U([l()],K.prototype,"writeDepth",void 0),U([l()],K.prototype,"sceneHasOcludees",void 0),U([l({count:E.COUNT})],K.prototype,"transparencyPassType",void 0),U([l()],K.prototype,"multipassTerrainEnabled",void 0),U([l()],K.prototype,"cullAboveGround",void 0);class X extends x{constructor(e){super(e,Z),this.supportsEdges=!0,this.techniqueConfig=new K}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.parameters.cullFace,this.techniqueConfig.vertexColors=this.parameters.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.enableOffset=t.camera.relativeElevation<L,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig}getPassParameters(){return this.parameters}intersect(e,t,r,s,a,i,o){q(e,t,s,a,i,void 0,o)}requiresSlot(t,r){if(t===M.DRAPED_MATERIAL)return!0;if(O(r)===e.Highlight)return t===M.OPAQUE_MATERIAL;return t===(this.parameters.transparent?this.parameters.writeDepth?M.TRANSPARENT_MATERIAL:M.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:M.OPAQUE_MATERIAL)}createGLMaterial(t){return t.output===e.Color||t.output===e.Alpha||t.output===e.Highlight||t.output===e.Depth&&this.parameters.writeLinearDepth?new Y(t):null}createBufferWriter(){return new D(_)}}class Y extends T{updateParameters(e){return this.ensureTechnique(k,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(t){return this._output!==e.Color&&this._output!==e.Alpha||this._updateOccludeeState(t),this.updateParameters(t)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const Z={color:[1,1,1,1],transparent:!1,writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:y.None,sceneHasOcludees:!1,...w};export{X as C};
