/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../PopupTemplate.js";import{clone as r,i,b as s,u as n}from"../core/lang.js";import{M as a}from"../chunks/MultiOriginJSONSupport.js";import{when as o,throwIfAbortError as l}from"../core/promiseUtils.js";import{property as u,ensureRange as p}from"../core/accessorSupport/decorators/property.js";import{k as m,I as c,l as d}from"../chunks/ensureType.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{w as y}from"../chunks/writer.js";import f from"./Layer.js";import"../geometry.js";import g from"../Graphic.js";import{read as R,rasterRendererTypes as b,websceneRasterRendererTypes as v}from"../rasterRenderers.js";import S from"../request.js";import j from"../core/Error.js";import{s as x}from"../chunks/jsonMap.js";import{L as I}from"../chunks/Logger.js";import{urlToObject as w}from"../core/urlUtils.js";import{aliasOf as F}from"../core/accessorSupport/decorators/aliasOf.js";import{r as D}from"../chunks/reader.js";import{o as P,u as T,b as C,p as _}from"../chunks/commonProperties.js";import V from"./support/DimensionalDefinition.js";import{a as N}from"../chunks/JSONSupport.js";import O from"./support/RasterFunction.js";import{g as k,c as M,a as A,r as U}from"../chunks/colorRampUtils.js";import{s as L}from"../renderers/RasterStretchRenderer.js";import E from"../renderers/visualVariables/SizeVariable.js";import z from"./support/MosaicRule.js";import{i as J,n as q}from"../chunks/rasterEnums.js";import Q from"./support/Field.js";import H from"./support/FieldsIndex.js";import B from"./support/PixelBlock.js";import G from"./support/RasterInfo.js";import{R as W}from"../chunks/RasterJobHandler.js";import{R as Z,d as K,g as X}from"../chunks/RasterSymbolizer.js";import{u as Y}from"../chunks/vectorFieldUtils.js";import{g as $,a as ee,c as te,n as re}from"../chunks/rasterRendererHelper.js";import{computeAngles as ie,computePixelSpaceLocations as se,computeHistograms as ne,computeStatisticsHistograms as ae,getImageSpatialReferenceQueryParameter as oe,getSamples as le,identify as ue}from"../rest/imageService.js";import"../chunks/unitUtils.js";import"../kernel.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import{e as pe,a as me,b as ce}from"../chunks/executeQueryJSON.js";import de from"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Multipoint.js";import he from"../geometry/Point.js";import ye from"../geometry/Polygon.js";import"../geometry/Polyline.js";import"../geometry/support/normalizeUtils.js";import"../chunks/pbf.js";import fe from"../geometry/SpatialReference.js";import ge from"../rest/support/Query.js";import"../chunks/featureConversionUtils.js";import Re from"../rest/support/FeatureSet.js";import"../rest/support/RelationshipQuery.js";import"../rest/support/TopFeaturesQuery.js";import be from"../rest/support/ImageAngleParameters.js";import ve from"../rest/support/ImageHistogramParameters.js";import Se from"../rest/support/ImageIdentifyParameters.js";import je from"../rest/support/ImagePixelLocationParameters.js";import xe from"../rest/support/ImageSampleParameters.js";import{c as Ie}from"../chunks/dataUtils.js";import{A as we}from"../chunks/ArcGISService.js";import{B as Fe}from"../chunks/BlendLayer.js";import{C as De}from"../chunks/CustomParametersMixin.js";import{O as Pe}from"../chunks/OperationalLayer.js";import{P as Te}from"../chunks/PortalLayer.js";import{R as Ce}from"../chunks/RefreshableLayer.js";import{S as _e}from"../chunks/ScaleRangeLayer.js";import{T as Ve}from"../chunks/TemporalLayer.js";import{s as Ne}from"../chunks/versionUtils.js";import{createPopupTemplate as Oe}from"../support/popupUtils.js";import"../core/Collection.js";import"../chunks/ArrayPool.js";import"../chunks/Evented.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/shared.js";import"../core/accessorSupport/decorators/cast.js";import"./support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../chunks/zmUtils.js";import"../chunks/extentUtils.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../chunks/locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../chunks/chartMediaInfoUtils.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"../chunks/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../chunks/Loadable.js";import"../chunks/Promise.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../chunks/common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils3.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils4.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/aaBoundingBox.js";import"../chunks/aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../chunks/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../chunks/Thumbnail.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/support/ClassBreakInfo.js";import"../chunks/commonProperties2.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../chunks/projectionEllipsoid.js";import"../renderers/FlowRenderer.js";import"../renderers/RasterColormapRenderer.js";import"../renderers/support/ColormapInfo.js";import"../renderers/RasterShadedReliefRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../renderers/VectorFieldRenderer.js";import"../chunks/utils6.js";import"../chunks/asyncUtils.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/mat4f32.js";import"../chunks/mat4.js";import"../chunks/_commonjsHelpers.js";import"../chunks/assets.js";import"../chunks/ItemCache.js";import"../chunks/MemCache.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/utils7.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/colorUtils2.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/fieldType.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"../chunks/messages.js";import"../chunks/pixelUtils.js";import"../chunks/generateRendererUtils.js";import"../chunks/utils5.js";import"../chunks/scaleUtils.js";import"../chunks/floorFilterUtils.js";import"../rest/support/ImageAngleResult.js";import"../rest/support/ImageIdentifyResult.js";import"../rest/support/ImageSampleResult.js";import"../rest/support/ImageSample.js";import"../rest/support/ImagePixelLocationResult.js";import"../chunks/query.js";import"../chunks/pbfQueryUtils.js";import"../chunks/OptimizedFeature.js";import"../chunks/OptimizedFeatureSet.js";import"../chunks/queryZScale.js";import"../chunks/zscale.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/DataLayerSource.js";import"../rest/support/StatisticDefinition.js";import"../rest/support/TopFilter.js";import"../chunks/arcgisLayerUrl.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../TimeInterval.js";import"./support/TimeInfo.js";const ke={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Me={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Ae={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ue=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Le(e){return Ue.has(e.type)}function Ee(e,t){if(!e||!t)return r(e||t);const i=r(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),ze(i.rasterFunctionDefinition.arguments,t)}else if("none"!==t.functionName.toLowerCase()){Qe(i.functionArguments).Raster=t}return i}function ze(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&ze(e[r].arguments,t))}function Je(e){const t=r(ke[e.functionName+"Function"]),i=e.functionArguments;for(const e in i)"raster"===e.toLowerCase()?(t.arguments[e]=Je(i[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=We(i[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=i[e];return t}function qe(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new O;i.functionName="Stretch";const s=He[L.toJSON(e.stretchType)],n="u8",a=function(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}(e.statistics),o={StretchType:s,Statistics:a,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};null!=e.outputMin&&(o.Min=e.outputMin);null!=e.outputMax&&(o.Max=e.outputMax);s===He.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=n):s===He.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,i.outputPixelType=n):s===He.minMax?i.outputPixelType=n:s===He.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel);if(i.functionArguments=o,i.variableName="Raster",e.colorRamp){const s=e.colorRamp,n=new O;if(r)n.functionArguments={ColorRamp:k(s)};else{const r=A(s);r?n.functionArguments={colorRamp:r}:!t.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type?n.functionArguments={colorRamp:e.colorRamp.toJSON()}:n.functionArguments={Colormap:M(s,256)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=i,r?new O({rasterFunctionDefinition:Je(n)}):n}return r?new O({rasterFunctionDefinition:Je(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],s=[],n=[],a=1e-6,{pixelType:o,rasterAttributeTable:l}=t,u=l&&l.features,p=Ge(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let s;i.a&&u.forEach((a=>{s=a.attributes[e.field],(s>=t.minValue&&s<t.maxValue||r===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([a.attributes[p],i.r,i.g,i.b])}))}));const r=o?Be(n,o):n,i=new O;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new O({rasterFunctionDefinition:Je(i)}):i}e.classBreakInfos.forEach(((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+a):r.push(e.minValue+a,e.maxValue+a),i.push(t),n.push([t,o.r,o.g,o.b])):s.push(e.minValue,e.maxValue)}));const m=o?Be(n,o):n,c=new O;c.functionName="Remap",c.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:s},c.variableName="Raster";const d=new O;return d.functionName="Colormap",d.functionArguments={Colormap:m,Raster:c},t.convertToRFT?new O({rasterFunctionDefinition:Je(d)}):d}(e,t);case"unique-value":return function(e,t){var r,i;const s=[],{pixelType:n,rasterAttributeTable:a}=t,o=a&&a.features,l=Ge(a),u=null==(r=e.defaultSymbol)||null==(i=r.color)?void 0:i.toRgb(),p=e.uniqueValueInfos;if(p)if(o){const t=new Map;p.forEach((e=>{var r;const i=e.value,s=null==(r=e.symbol.color)?void 0:r.toRgb();null!=i&&s&&t.set(String(i),s)}));const r=e.field;o.forEach((({attributes:e})=>{const i=String(e[r]),n=e[l];if(t.has(i)){const e=t.get(i);s.push([n,...e])}else u&&s.push([n,...u])}))}else for(let e=0;e<p.length;e++){const t=p[e],r=t.symbol.color,i=+t.value;if(null!=r&&r.a){if(isNaN(i))return null;s.push([i,r.r,r.g,r.b])}}const m=n&&s.length>0?Be(s,n):s,c=new O;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",t.convertToRFT?new O({rasterFunctionDefinition:Je(c)}):c}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,s=i?Be(r,i):r,n=new O;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,t.convertToRFT?new O({rasterFunctionDefinition:Je(n)}):n}(e,t);case"vector-field":return function(e,t){const r=new O;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:s}=t,n="vector-uv"===i;let a,o;s&&2===s.length&&(a=s.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),o=s.map((e=>e.BandName.toLowerCase())).indexOf("direction"));-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new E,m={magnitudeBandID:a,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Ae[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=m,t.convertToRFT?new O({rasterFunctionDefinition:Je(r)}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType)return new O;const i=new O;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,a={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};0===s&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude);3===n&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor);i.functionArguments=a,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?a.ColorRamp=k(e.colorRamp):a.Colormap=M(e.colorRamp,256));return r?new O({rasterFunctionDefinition:Je(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function Qe(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?Qe(t.functionArguments):e}const He={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Be(e,t){const r=Me[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function Ge(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function We(e){const t=[],r=[];return e.forEach((e=>{t.push(e[0]),r.push(U([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:r}}let Ze=class extends N{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new z({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:s}=t;if(!s||!Le(s))return i;return Ee(qe(s,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6,convertToRFT:!(null==i||!i.rasterFunctionDefinition)}),i)}_addResampleRasterFunction(e){var t;if(!("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type))||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;let i=new O({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return i=null!=e&&e.rasterFunctionDefinition?new O({rasterFunctionDefinition:Je(i)}):i,Ee(i,e)}};e([u()],Ze.prototype,"layer",void 0),e([u({json:{write:!0}})],Ze.prototype,"adjustAspectRatio",void 0),e([y("adjustAspectRatio")],Ze.prototype,"writeAdjustAspectRatio",null),e([u({json:{write:!0}}),F("layer.bandIds")],Ze.prototype,"bandIds",void 0),e([u({json:{write:!0}})],Ze.prototype,"compression",void 0),e([u({json:{write:!0}}),F("layer.compressionQuality")],Ze.prototype,"compressionQuality",void 0),e([y("compressionQuality")],Ze.prototype,"writeCompressionQuality",null),e([u({json:{write:!0}}),F("layer.compressionTolerance")],Ze.prototype,"compressionTolerance",void 0),e([y("compressionTolerance")],Ze.prototype,"writeCompressionTolerance",null),e([u({json:{write:!0}}),F("layer.format")],Ze.prototype,"format",void 0),e([u({type:String,json:{read:{reader:J.read},write:{writer:J.write}}}),F("layer.interpolation")],Ze.prototype,"interpolation",void 0),e([u({json:{write:!0}}),F("layer.noData")],Ze.prototype,"noData",void 0),e([u({type:String,json:{read:{reader:q.read},write:{writer:q.write}}}),F("layer.noDataInterpretation")],Ze.prototype,"noDataInterpretation",void 0),e([u({json:{write:!0}})],Ze.prototype,"pixelType",void 0),e([u({json:{write:!0}})],Ze.prototype,"lercVersion",void 0),e([y("lercVersion")],Ze.prototype,"writeLercVersion",null),e([u({type:Number})],Ze.prototype,"version",null),e([u({json:{write:!0}})],Ze.prototype,"mosaicRule",null),e([u({json:{write:!0}})],Ze.prototype,"renderingRule",null),Ze=e([h("esri.layers.mixins.ExportImageServiceParameters")],Ze);const Ke=I.getLogger("esri.layers.mixins.ArcGISImageService"),Xe=x()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ye=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),$e=p(d,{min:0,max:255});const et=t=>{let a=class extends t{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new Ze({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?z.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||i(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||i(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new H(this.fields):null}set format(e){e&&Ye.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?z.fromJSON(r):this._isMosaicRuleSupported(t)?z.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new z({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=$e(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?w(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){var i,s;const n=null==t||null==(i=t.layerDefinition)||null==(s=i.drawingInfo)?void 0:s.renderer,a=R(n,r);return null==a?null:("vector-field"===a.type&&t.symbolTileSize&&!n.symbolTileSize&&(a.symbolTileSize=t.symbolTileSize),Le(a)||Ke.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new Q({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new Q({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new Q({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?r(this.fields):[];a.push(s),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&i(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&a.push(n),i(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{a.push(new Q({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new Q({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new Q({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const o=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(o&&o.length>0){const t=o.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const i=r(t);return i.name=e+t.name,i}));a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=O.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?O.fromJSON({rasterFunctionDefinition:t.renderingRule}):O.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?fe.fromJSON(r):null}readPixelType(e){return Xe.fromJSON(e)||e}writePixelType(e,t,r){(s(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Xe.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this.symbolizer.bind(),await s.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new j("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=m(be,e).clone(),ie(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new j("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=m(je,e).clone(),se(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new j("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=m(ve,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),ne(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new j("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=m(ve,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),ae(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return i(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new j("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return o(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){return S(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new j("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):S(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>Re.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=S(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=S(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const n=de.fromJSON(s[0].extent),a=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new G({bandCount:s[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new he({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:n.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:a,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await S(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await S(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?S(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=S(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then((e=>e.data)).catch((()=>({}))),u=(s.xmin+s.xmax)/2,p=(s.ymax-s.ymin)/6,m=s.ymin+p,c=[];for(let e=0;e<5;e++)c.push({x:u,y:m+p*e});const d={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:c}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},h=S(this.parsedUrl.path+"/project",{query:this._getQueryParams(d),...t}).then((e=>e.data)).catch((()=>({}))),y=await Promise.all([n,l,h]);let f=y[0].ipxf;if(null==f){var g,R,b;const e=null==(g=i.geodataXform)?void 0:g.xf_0;"topup"===(null==e||null==(R=e.name)?void 0:R.toLowerCase())&&6===(null==e||null==(b=e.coefficients)?void 0:b.length)&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=de.fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);v&&(v.spatialReference=new fe({wkid:0,imageCoordinateSystem:i}));const j=y[2].geometries?y[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],x=j.length;if(x<3)return{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:null};let I=0,w=0,F=0,D=0;for(let e=0;e<x;e++)I+=j[e].x,w+=j[e].y,F+=j[e].x*j[e].x,D+=j[e].x*j[e].y;const P=(x*D-I*w)/(x*F-I*I);let T=0;const C=j[4].x>j[0].x,_=j[4].y>j[0].y;return P===1/0?T=_?90:270:0===P?T=C?0:180:P>0?T=C?180*Math.atan(P)/Math.PI:180*Math.atan(P)/Math.PI+180:P<0&&(T=_?180+180*Math.atan(P)/Math.PI:360+180*Math.atan(P)/Math.PI),{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:T}}async generateRasterInfo(e,t){var r;if((!e||"none"===(null==e||null==(r=e.functionName)?void 0:r.toLowerCase())||this._isVectorFieldResampleFunction(e))&&i(this.serviceRasterInfo))return this.serviceRasterInfo;const s=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const n=this._generateRasterInfo(e,t);this._functionRasterInfos[s]=n;try{return await n}catch{return this._functionRasterInfos[s]=null,null}}getExportImageServiceParameters(e,t,r,s){var n;e=e.clone().shiftCentralMeridian();const a=oe(e.spatialReference,this.parsedUrl.path);i(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u}=o;let{renderingRule:p}=o;const m=null==(n=this.renderingRule)?void 0:n.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=l&&l.length&&this._hasRenderingRule(this.renderingRule)&&!m&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:l}};if("Stretch"===p.rasterFunction)e.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=e;else if("Colormap"===p.rasterFunction){const t=p.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,p.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=p,p=e;o.bandIds=void 0}else o.bandIds=null==l?void 0:l.join(",");u instanceof Array&&u.length>0&&(o.noData=u.join(","));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,s):null;o.mosaicRule=d&&JSON.stringify(d),o.renderingRule=this._getRenderingRuleString(O.fromJSON(p));const h={};if(s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?h.time=""+e:null==e&&null==t||(h.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...h}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new j("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=m(xe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),le(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new j("imagery-layer:query-rasters","query operation is not supported on the input image service");e=m(Se,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=n(t)}return r&&null==e.raster&&(e.raster=r),ue(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new ge;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),pe(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),me(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),ce(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new j("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:r,returnDomainValues:n,returnTopmostRaster:a,showNoDataRecords:o}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let l=!1,u=null,p=null;const m="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if(i(e.outFields)&&(l=e.outFields.some((e=>-1===e.toLowerCase().indexOf(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(m)>-1&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));u=t.map((e=>new O({functionName:e[0]}))),p=t.map((e=>e[1])),0===u.length?this.renderingRule?(u.push(this.renderingRule),p.push(this.renderingRule.functionName)):u=null:this.renderingRule&&!u.some((e=>e.functionName===this.renderingRule.functionName))&&(u.push(this.renderingRule),p.push(this.renderingRule.functionName))}const d=s(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h),f=this._getQueryParams({geometry:e.geometry,timeExtent:h,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:u,pixelSize:r,returnCatalogItems:l,returnGeometry:d,raster:this.raster,maxItemCount:a?1:null});delete f.f;const g=new Se(f);try{var R,b;await this.generateRasterInfo(this.renderingRule);const r=await ue(this.url,g,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),s=e.outFields,a=r.value.toLowerCase().indexOf("nodata")>-1;if(!(l&&!d&&(null==r||null==(R=r.catalogItems)?void 0:R.features.length)&&(o||!a)))return this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:s});const u=this.objectIdField||"ObjectId",m=r.catalogItems.features,c=m.map((e=>{var t;return null==(t=e.attributes)?void 0:t[u]})),h=new ge({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[u]}),y=await this.queryRasters(h);return null!=y&&null!=(b=y.features)&&b.length&&y.features.forEach((t=>{m.forEach((r=>{r.attributes[u]===t.attributes[u]&&(r.geometry=new ye(t.geometry),i(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:s})}catch{throw new j("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=S(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=S(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createStreamlinesMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):Ie(e.rendererSettings,e.flowData,i(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),i(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=i(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),s=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,s,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Ke.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.watch("renderingRule",(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=i(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(s(e)||s(this.multidimensionalInfo)||s(t)||s(null==r?void 0:r.startField))return e;const{startField:n}=r;var a;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(a=e.multidimensionalDefinition)?void 0:a.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),l=i(t.start)?t.start.getTime():null,u=i(t.end)?t.end.getTime():null,p=null==l||null==u||l===u,m=p?[l||u]:[[l,u]],c=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===n&&(c?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=p,e.values=m))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=p,e.values=m})):e.multidimensionalDefinition.push(new V({variableName:"",dimensionName:n,isSlice:p,values:m}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return s(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new j("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=i(e)?m(ge,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new W;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||$(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await S(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new j("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if(!i(e))return!1;const{functionName:t,functionArguments:r}=e,s="resample"===(null==t?void 0:t.toLowerCase()),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return s&&(7===n||10===n)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=ee(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var t,r;if(!e)e=te(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(t=this.mosaicRule)||null==(r=t.multidimensionalDefinition)?void 0:r[0].variableName});const i=re(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new Z({rendererJSON:i,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:i(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){i(null==e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):K(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await S(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return t;if(t&&this.version>=10.3){var r;if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return null==(r=(await S(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)?void 0:r.rasterFunctionInfos}return null}async _fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new j("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.signal,i=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&S(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>Re.fromJSON(e.data))).catch((()=>null)),s=!!(t.hasColormap&&this.version>=10.1)&&S(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),n=!!(t.hasHistograms&&this.version>=10.1)&&S(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=this.version>=10.3&&S(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:null==e?void 0:e.renderingRule}),signal:r}).then((e=>e.data)).catch((()=>{})),o=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo(),l=await Promise.all([i,s,n,a,o]);let u=null;if(t.minValues&&t.minValues.length===t.bandCount){u=[];for(let e=0;e<t.minValues.length;e++)u.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const p=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),m=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),c=fe.fromJSON(t.spatialReference||t.extent.spatialReference);return new G({width:p,height:m,bandCount:t.bandCount,extent:de.fromJSON(t.extent),spatialReference:c,pixelSize:new he({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:c}),pixelType:t.pixelType.toLowerCase(),statistics:u,attributeTable:l[0]||null,colormap:l[1]||null,histograms:l[2]||null,keyProperties:l[3]||{},multidimensionalInfo:l[4]||null})}async _requestArrayBuffer(e){var t;const{imageProps:r,requestAsImageElement:i,signal:s}=e;if(i&&!this.pixelFilter&&(null==(t=r.format)?void 0:t.indexOf("png"))>-1){return{imageElement:(await S(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:s})).data,params:r}}const n=this._initJobHandler(),a=S(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:s}),o=(await Promise.all([a,n]))[0].data,l=r.format||"jpgpng";let u=l;if("bsq"!==u&&"bip"!==u&&(u=X(o)),!u)throw new j("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(o)));const p={signal:s},m="gif"===l||"bmp"===l||l.indexOf("png")>-1&&("png"===u||"jpg"===u)?K(o,{useCanvas:!0,...r},p):this._decodePixelBlock(o,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:l},p);return{pixelData:{pixelBlock:await m,extent:r.extent},params:r}}async _generateRasterInfo(e,t){const{data:r}=await S(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this._defaultServiceMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],s=i.extent;let n=!0,a=[s[0]];i.hasRanges&&!0===i.hasRanges?(n=!1,a=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(s[1])<=Math.abs(s[0])&&(a=[s[1]]),r.push(new V({variableName:"",dimensionName:t[e].name,isSlice:n,values:a}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new z;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(";")>-1?(t=";",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const m=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,d=[];if(r&&!u&&!c){const e={};e[m]=0;p=[r],u=[new g(this.fullExtent,null,e)]}if(!u)return[];let h,y,f;this._updateResponseFieldNames(u,o),c&&!n&&(u=[]);for(let e=0;e<u.length;e++){if(h=u[e],null!=r){if(y=p[e],f=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",a="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(y,t),h.attributes[a]=this._formatAttributeValue(f,a),this._updateFeatureWithMagDirValues(h,y);const o=this.fields&&this.fields.length>0;let u=this.renderingRule&&i(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?y:r:f;this.renderingRule||(u=o?y:r),this._updateFeatureWithRasterAttributeTableValues(h,u)}if(h.sourceLayer=h.layer=this,a&&this._updateFeatureWithDomainValues(h),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}d.push(u[e])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||i(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,s=r&&r.features;if(!s)return;const n=r.fields,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=a&&a[0];if(!o)return;const l=s.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new B({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new de(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:Y([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=a[0],e.attributes["Raster.Direction"]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;i(r)&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let r=e.toJSON();return r=null!=(t=r.rasterFunctionDefinition)?t:r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==i||!i.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return e([u()],a.prototype,"_functionRasterInfos",void 0),e([u()],a.prototype,"_rasterJobHandler",void 0),e([u({dependsOn:["_serviceSupportsMosaicRule"]})],a.prototype,"_defaultServiceMosaicRule",void 0),e([D("_defaultServiceMosaicRule",["defaultMosaicMethod"])],a.prototype,"readDefaultServiceMosaicRule",null),e([u()],a.prototype,"_cachedRendererJson",void 0),e([u({readOnly:!0})],a.prototype,"_serviceSourceType",void 0),e([D("_serviceSourceType",["serviceSourceType","fields"])],a.prototype,"readServiceSourceType",null),e([u({readOnly:!0})],a.prototype,"_serviceSupportsMosaicRule",void 0),e([D("_serviceSupportsMosaicRule",["currentVersion","fields"])],a.prototype,"readServiceSupportsMosaicRule",null),e([u()],a.prototype,"rasterAttributeTableFieldPrefix",void 0),e([u({readOnly:!0})],a.prototype,"rasterFunctionNamesIndex",null),e([u()],a.prototype,"adjustAspectRatio",void 0),e([u({readOnly:!0}),F("serviceRasterInfo.bandCount")],a.prototype,"bandCount",void 0),e([u({type:[c],json:{write:!0}})],a.prototype,"bandIds",void 0),e([D("bandIds")],a.prototype,"readBandIds",null),e([u({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",void 0),e([D("service","capabilities",["capabilities","currentVersion","serviceDataType"])],a.prototype,"readCapabilities",null),e([u({type:Number})],a.prototype,"compressionQuality",void 0),e([y("compressionQuality")],a.prototype,"writeCompressionQuality",null),e([u({type:Number})],a.prototype,"compressionTolerance",void 0),e([y("compressionTolerance")],a.prototype,"writeCompressionTolerance",null),e([u({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),e([u({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],a.prototype,"definitionExpression",void 0),e([u({readOnly:!0,constructOnly:!0})],a.prototype,"exportImageServiceParameters",void 0),e([u()],a.prototype,"rasterInfo",void 0),e([u({readOnly:!0,type:[Q]})],a.prototype,"fields",void 0),e([u({readOnly:!0})],a.prototype,"fieldsIndex",null),e([u({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],a.prototype,"format",null),e([D("service","format",["serviceDataType"])],a.prototype,"readFormat",null),e([u({type:de})],a.prototype,"fullExtent",void 0),e([u({readOnly:!0})],a.prototype,"hasMultidimensions",void 0),e([u({json:{read:{source:"maxImageHeight"}}})],a.prototype,"imageMaxHeight",void 0),e([u({json:{read:{source:"maxImageWidth"}}})],a.prototype,"imageMaxWidth",void 0),e([u({type:String,json:{type:J.jsonValues,read:J.read,write:J.write}})],a.prototype,"interpolation",void 0),e([u()],a.prototype,"minScale",void 0),e([D("service","minScale")],a.prototype,"readMinScale",null),e([u()],a.prototype,"maxScale",void 0),e([D("service","maxScale")],a.prototype,"readMaxScale",null),e([u({type:z})],a.prototype,"mosaicRule",null),e([D("mosaicRule",["mosaicRule","defaultMosaicMethod"])],a.prototype,"readMosaicRule",null),e([y("mosaicRule")],a.prototype,"writeMosaicRule",null),e([u({readOnly:!0}),F("serviceRasterInfo.multidimensionalInfo")],a.prototype,"multidimensionalInfo",void 0),e([u({json:{type:c}})],a.prototype,"noData",void 0),e([y("noData")],a.prototype,"writeNoData",null),e([u({type:String,json:{type:q.jsonValues,read:q.read,write:q.write}})],a.prototype,"noDataInterpretation",void 0),e([u({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],a.prototype,"objectIdField",void 0),e([D("objectIdField")],a.prototype,"readObjectIdField",null),e([u({})],a.prototype,"geometryType",void 0),e([u({})],a.prototype,"typeIdField",void 0),e([u({})],a.prototype,"types",void 0),e([u({readOnly:!0})],a.prototype,"parsedUrl",null),e([u({readOnly:!0}),F("serviceRasterInfo.pixelSize.x")],a.prototype,"pixelSizeX",void 0),e([u({readOnly:!0}),F("serviceRasterInfo.pixelSize.y")],a.prototype,"pixelSizeY",void 0),e([u({type:Function})],a.prototype,"pixelFilter",void 0),e([u()],a.prototype,"raster",void 0),e([u()],a.prototype,"viewId",void 0),e([u({types:b,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:v,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],a.prototype,"renderer",null),e([D("renderer")],a.prototype,"readRenderer",null),e([y("renderer")],a.prototype,"writeRenderer",null),e([u()],a.prototype,"symbolizer",void 0),e([u(P)],a.prototype,"opacity",void 0),e([u({readOnly:!0}),F("serviceRasterInfo.attributeTable")],a.prototype,"rasterAttributeTable",void 0),e([u({readOnly:!0})],a.prototype,"rasterFields",null),e([u({constructOnly:!0})],a.prototype,"rasterFunctionInfos",void 0),e([u({type:O})],a.prototype,"renderingRule",null),e([D("renderingRule",["renderingRule","rasterFunctionInfos"])],a.prototype,"readRenderingRule",null),e([y("renderingRule")],a.prototype,"writeRenderingRule",null),e([u()],a.prototype,"serviceDataType",void 0),e([u({readOnly:!0,type:fe})],a.prototype,"spatialReference",void 0),e([D("spatialReference",["spatialReference","extent"])],a.prototype,"readSpatialReference",null),e([u({json:{type:Xe.jsonValues}})],a.prototype,"pixelType",void 0),e([D("pixelType")],a.prototype,"readPixelType",null),e([y("pixelType")],a.prototype,"writePixelType",null),e([u({constructOnly:!0,type:G})],a.prototype,"serviceRasterInfo",void 0),e([u()],a.prototype,"sourceJSON",void 0),e([u(T)],a.prototype,"url",void 0),e([u({readOnly:!0})],a.prototype,"version",void 0),e([D("version",["currentVersion","fields","timeInfo"])],a.prototype,"readVersion",null),a=e([h("esri.layers.mixins.ArcGISImageService")],a),a};let tt=class extends(Fe(Ve(Ce(_e(Pe(Te(et(De(we(a(f))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=i(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const s="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=s?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let s=!1,n=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=s&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const a=new Set;s&&(a.add("raster.itempixelvalue"),n&&a.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();a.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return Oe({fields:t,title:r},{...e,visibleFieldNames:i})}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return Ne(this,e)}};e([u(C)],tt.prototype,"legendEnabled",void 0),e([u({type:["show","hide"]})],tt.prototype,"listMode",void 0),e([u({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],tt.prototype,"isReference",void 0),e([u({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],tt.prototype,"operationalLayerType",void 0),e([y("web-map","operationalLayerType")],tt.prototype,"writeOperationalLayerType",null),e([u(_)],tt.prototype,"popupEnabled",void 0),e([u({type:t,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],tt.prototype,"popupTemplate",void 0),e([u({readOnly:!0})],tt.prototype,"defaultPopupTemplate",null),e([u({readOnly:!0,json:{read:!1}})],tt.prototype,"type",void 0),tt=e([h("esri.layers.ImageryLayer")],tt);const rt=tt;export{rt as default};
