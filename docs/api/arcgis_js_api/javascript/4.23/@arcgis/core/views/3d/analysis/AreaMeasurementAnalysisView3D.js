/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{i as s,o as i,x as r,b as o,u as n}from"../../../core/lang.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ensureType.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import{d as l}from"../../../chunks/defaultUnit.js";import{A as p}from"../../../chunks/AnalysisView3D.js";import{M as m}from"../../../chunks/interfaces2.js";import c from"../../../core/Handles.js";import{watch as d,sync as u,syncAndInitial as g}from"../../../core/reactiveUtils.js";import{canProjectWithoutEngine as _,canProjectToWGS84ComparableLonLat as y,projectPointToVector as f,projectPointToWGS84ComparableLonLat as j,projectDirection as L,projectVectorToVector as b,tryProjectWithZConversion as v}from"../../../geometry/projection.js";import{a as S,g as C,W as k,S as w}from"../../../chunks/projectionEllipsoid.js";import{b as P,n as M,u as A,j as D,a as V,J as R,h as G,d as x,e as U,f as z,k as E,z as I,m as T,W as O}from"../../../chunks/mathUtils.js";import{c as F,m as W,a as q,U as N,L as B,G as H,t as $,f as Q,E as J}from"../../../chunks/Segment.js";import{e as X}from"../../../chunks/earcut.js";import{a as Z,b as K}from"../../../chunks/vec2.js";import{a as Y}from"../../../chunks/vec2f64.js";import{c as ee,f as te}from"../../../chunks/vec4f64.js";import se from"../../../geometry/SpatialReference.js";import{A as ie}from"../../../chunks/sphere.js";import{s as re}from"../../../geometry/Extent.js";import{s as oe,b as ne,f as ae,t as he,a as le,p as pe,c as me,d as ce,e as de}from"../../../chunks/measurementUtils.js";import{g as ue}from"../../../chunks/ElevationProvider.js";import{a as ge,t as _e}from"../../../chunks/mathUtils2.js";import{E as ye}from"../../../chunks/Evented.js";import{L as fe}from"../../../chunks/Logger.js";import je from"../../../geometry/Point.js";import{d as Le,i as be}from"../../../chunks/aaBoundingRect.js";import{l as ve,L as Se}from"../../../chunks/LineVisualElement.js";import{E as Ce,a as ke,c as we,C as Pe}from"../../../chunks/EditGeometryOperations.js";import"../../../intl.js";import{c as Me,p as Ae,j as De,k as Ve,n as Re}from"../../../chunks/unitUtils.js";import{x as Ge,j as xe}from"../../../chunks/mat4.js";import{c as Ue}from"../../../chunks/mat4f64.js";import{O as ze}from"../../../chunks/Object3DVisualElement.js";import{m as Ee,C as Ie,p as Te,c as Oe,R as Fe,S as We,P as qe,b as Ne,g as Be,a as He,d as $e,G as Qe,e as Je}from"../../../chunks/glUtil3D.js";import{D as Xe,M as Ze,i as Ke,a as Ye,R as et}from"../../../chunks/Material.js";import{V as tt}from"../../../chunks/VertexAttribute.js";import{T as st}from"../../../chunks/basicInterfaces.js";import{R as it}from"../../../chunks/RenderSlot.js";import{D as rt,P as ot}from"../../../chunks/DefaultBufferWriter.js";import{s as nt,m as at,o as ht,f as lt,a as pt,e as mt,d as ct}from"../../../chunks/OrderIndependentTransparency.js";import{S as dt,g as ut,R as gt}from"../../../chunks/ShaderBuilder.js";import{B as _t}from"../../../chunks/enums.js";import{c as yt}from"../../../chunks/lineStippleUtils.js";import{o as ft}from"../../../chunks/locale.js";import{f as jt}from"../../../chunks/messages.js";import"../../../chunks/deprecate.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/ArrayPool.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/Promise.js";import"../../../core/Collection.js";import"../../../chunks/shared.js";import"../../../geometry/Multipoint.js";import"../../../chunks/writer.js";import"../../../geometry/Geometry.js";import"../../../chunks/JSONSupport.js";import"../../../chunks/reader.js";import"../../../chunks/zmUtils.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/Ellipsoid.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/common.js";import"../../../chunks/jsonMap.js";import"../../../chunks/screenUtils.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/byteSizeEstimations.js";import"../../../chunks/number.js";import"../../../chunks/viewUtils.js";import"../../../chunks/VisualElement.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/vectorStacks.js";import"../../../chunks/quatf64.js";import"../../../chunks/ray.js";import"../../../geometry/geometryEngine.js";import"../../../chunks/geometryEngineBase.js";import"../../../chunks/hydrated.js";import"../../../geometry/support/geodesicUtils.js";import"../../../geometry.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/vec4f32.js";import"../../../chunks/lineUtils.js";import"../../../chunks/triangulationUtils.js";import"../../../chunks/deduplicate.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/compilerUtils.js";import"../../../core/watchUtils.js";import"../../../chunks/vec2f32.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/Texture.js";import"../../../chunks/context-util.js";import"../../../chunks/NestedMap.js";import"../../../chunks/Camera.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/Util.js";import"../../../chunks/glUtil.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/VisualVariables.glsl.js";import"../../../chunks/vec3f32.js";import"../../../chunks/weather.js";import"../environment/CloudyWeather.js";import"../../../chunks/enumeration.js";import"../environment/FoggyWeather.js";import"../environment/RainyWeather.js";import"../environment/SunnyWeather.js";import"../../../chunks/ReadShadowMap.glsl.js";import"../../../chunks/MemCache.js";import"../../../chunks/utils2.js";import"../../../chunks/doublePrecisionUtils.js";import"../../../chunks/InterleavedLayout.js";import"../../../chunks/BufferView.js";import"../../../chunks/types.js";import"../../../chunks/heatmapUtils.js";import"../../../chunks/ScreenSpacePass.js";import"../../../chunks/lineSegment.js";import"../../../chunks/geometryDataUtils.js";import"../../../chunks/triangle.js";import"../../../chunks/Intersector.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/mat3.js";import"../../../chunks/quat.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Scheduler.js";import"../../../chunks/debugFlags.js";import"../../../chunks/geometry2dUtils.js";import"../../../chunks/mat4f32.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/dehydratedFeatures.js";import"../../../chunks/quantizationUtils.js";import"../../../layers/support/Field.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../layers/support/fieldUtils.js";import"../../../chunks/arcadeOnDemand.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../chunks/date.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../chunks/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/TextContent.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../support/actions/ActionBase.js";import"../../../chunks/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../symbols.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../Color.js";import"../../../chunks/colorUtils.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils3.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils4.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/Font.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../chunks/persistableUrlUtils.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../portal/Portal.js";import"../../../chunks/Loadable.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../portal/PortalGroup.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../chunks/Clonable.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/Symbol3DVerticalOffset.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";class Lt{constructor(e,t){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=P(),this.areaCentroidRenderCoords=P(),this.geodesicAreaCentroidRenderCoords=P(),this._length=0,this._centroidRenderCoords=P(),this._planeWorldCoords=ee(),this._worldUp=P(),this._worldTangent=P(),this._frame=[P(),P(),P()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=P(),this._tempV=P(),this._tempVec3=P(),this._tempSphere={center:P(),radius:0},this._sceneView=e,this.unitNormalizer=t}update(e,t,r,o,n,a,h){const l=this.unitNormalizer,p=this._sceneView.renderSpatialReference,m=this.unitNormalizer.spatialReference,c=s(t);if(this._pathVersion===e.version&&this._validMeasurement===o&&!h&&this._hasCursorPoint===c&&this._mode===a)return!1;this._pathVersion=e.version,this._validMeasurement=o,this._hasCursorPoint=c;const d=e.numVertices;this._resize(d);const u=S(r.spatialReference),g=_(r.spatialReference,u)&&y(r.spatialReference),L=this.positionsGeographic,b=this.positionsWorldCoords,v=this.positionsRenderCoords,C=this.positionsSpherical;e.forEachVertexPosition(((e,t)=>{!function(e,t){if(t.hasZ)return;t.z=i(ue(e,t,"ground"),0)}(r.elevationProvider,e),f(e,b[t],m),f(e,v[t],p),g&&(j(e,L[t]),f(e,C[t],u),M(C[t],C[t]))}));const k=this._updatePathLengths(o);if(this.pathLength=this._length>1?F(l.normalizeDistance(k),"meters"):null,g){const e=this._updateGeodesicPathLengths(o,m);this.geodesicPathLength=this._length>1?F(e,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,t),this._updateMode(e,a),o?(this._updateArea(r,l,p,m,n),g&&this._updateGeodesicArea(r),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(P()),this.positionsRenderCoords.push(P()),this.positionsProjectedWorldCoords.push(Y()),this.positionsFittedRenderCoords.push(P()),this.positionsGeographic.push(P()),this.positionsSpherical.push(P()),this.positionsStereographic.push(Y()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let r=0;r<this._length;++r){const o=s[r]=A(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(i+=o)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let r=0;for(let o=0;o<this._length;++o){const n=i[o]=oe(s[o],s[(o+1)%this._length],t);(o<this._length-1||e)&&(r+=n)}return r}_updateArea(e,t,s,i,r){const o=e.renderCoordsHelper,n=this.positionsWorldCoords,a=this.positionsRenderCoords,h=this.positionsProjectedWorldCoords,l=this.positionsFittedRenderCoords,p=this._planeWorldCoords,m=this._centroidRenderCoords;W(a,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,ie.X,this._worldTangent),L(m,this._worldUp,s,this._worldUp,i),L(m,this._worldTangent,s,this._worldTangent,i),n.length>2&&ne(n,p),this.fittingMode=this._selectFittingMode(p,n,this._worldUp,r);let c=0;if("horizontal"===this.fittingMode){let e=-1/0;a.forEach(((t,s)=>{const i=o.getAltitude(a[s]);i>e&&(e=i,c=s)}))}const d=n[c];let u=p,g=this._worldTangent;"horizontal"===this.fittingMode?u=this._worldUp:"vertical"===this.fittingMode&&(u=this._tempVec3,g=this._worldUp,ge(p,this._worldUp,u)),D(this._frame[2],u),ge(g,u,this._frame[0]),V(this._frame[1],this._frame[0],this._frame[2]),R(this._frame[1],this._frame[1]);const _=this._tempVec3,y=this._tempU,f=this._tempV;for(let e=0;e<this._length;++e){const t=h[e],r=l[e];G(_,n[e],d),Z(t,x(this._frame[0],_),x(this._frame[1],_)),U(y,this._frame[0],t[0]),U(f,this._frame[1],t[1]),z(_,y,f),z(_,_,d),b(_,i,r,s)}this.perimeterLength=this._length>0?F(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,W(l,this.areaCentroidRenderCoords),b(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?q(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,i=this.positionsStereographic,r=this._tempVec3,o=ae(s,r);if(!o)return void(this.geodesicArea=null);const n=this._tempU,a=this._tempV;_e(r,n,a);for(let e=0;e<this._length;++e){const t=x(s[e],n),o=x(s[e],a),h=x(s[e],r);Z(i[e],t/h,o/h)}U(r,r,C(e.spatialReference).radius),t.toRenderCoords(r,S(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=o&&0===this.geodesicIntersectingSegments.size?q(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i){s+=t[i]=K(e[i],e[(i+1)%this._length])}return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];re(r,o,n,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=bt(e,2),s=this.triangleIndices=new Uint32Array(X(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=he(e[s[t]],e[s[t+1]],e[s[t+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];re(r,o,n,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=bt(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(X(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=le(e[s[t]],e[s[t+1]],e[s[t+2]],se.WGS84);return i}_selectFittingMode(e,t,s,i){const r=t.map((t=>Math.abs(pe(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);me(t,this._tempSphere);const o=r/(2*this._tempSphere.radius),n=o<i.maxRelativeErrorCoplanar,a=o<i.maxRelativeErrorAlmostCoplanar;let h="horizontal";if(n)h="oblique";else if(a){h=Math.abs(x(s,e))>Math.cos(E(i.verticalAngleThreshold))?"horizontal":"vertical"}return h}_updateCursorSegmentLength(e,t){const i=e.lastPoint;!e.isValidPolygon&&s(i)&&s(t)?(this.geodesicCursorSegmentLength=F(ce(i,t),"meters"),this.cursorSegmentLength=F(this.unitNormalizer.normalizeDistance(de(i,t,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,t){if(t===m.Auto){this.actualMeasurementMode="euclidean";let t=0;null!=this.geodesicPathLength&&(t+=this.geodesicPathLength.value),!e.isValidPolygon&&s(this.geodesicCursorSegmentLength)&&(t+=this.geodesicCursorSegmentLength.value),t>vt&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=t===m.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=t}}function bt(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const r=e[i];for(let e=0;e<t;++e)s[i*t+e]=r[e]}return s}const vt=1e5;let St=class extends t{constructor(e){super(e),this._handles=new c}initialize(){const e=this.view.spatialReference,t=S(e),s=t===w?k:t,i=!e||_(e,s)?s:e,r=new N(i);this._measurementDataManager=new Lt(this.view,r),this._handles.add([this.analysisViewData.path.on("change",(()=>this._update())),d((()=>this.analysisViewData.cursorPoint),(()=>this._update()),u),d((()=>this.analysisViewData.mode),(()=>this._update()),u)]),this._update()}destroy(){this._handles=r(this._handles)}_update(e=!1){const t=this.analysisViewData;if(this._measurementDataManager.update(t.path,t.cursorPoint,this.view,t.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)){const e=this._measurementDataManager.getData();this._set("measurementData",e),t.measurementData=e}}};e([a({constructOnly:!0})],St.prototype,"view",void 0),e([a({constructOnly:!0})],St.prototype,"analysis",void 0),e([a({readOnly:!0})],St.prototype,"measurementData",void 0),e([a({constructOnly:!0})],St.prototype,"analysisViewData",void 0),St=e([h("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],St);const Ct=fe.getLogger("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper");let kt=class extends ye.EventedAccessor{constructor(e={}){super(e),this._handles=new c,this._version=0,this._internalGeometryChange=!1,this._extent=Le()}destroy(){this._handles=r(this._handles)}set areaMeasurement(e){this._set("areaMeasurement",e),s(e)&&s(this.view)&&this._initialize(e,this.view)}set view(e){this._set("view",e),s(e)&&s(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e)}get initialized(){return s(this.areaMeasurement)&&s(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].isClosed()}get extent(){if(this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].vertices.length>0){const e=Le(this._extent);return this.forEachVertex((t=>{be(e,t.pos)})),e}return null}get spatialReference(){return this.initialized?this.editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this._handles.removeAll(),this._handles.add(d((()=>e.geometry),(()=>{this._updateEditGeometryFromModelGeometry(e,t)}),g)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let i=e.geometry;if(s(i)){const s=v(i,t.spatialReference);o(s)&&ve(e,i.spatialReference,Ct),i=s}s(i)?this._editGeometryOperations=Ce.fromGeometry(i,t.state.viewingMode):this._editGeometryOperations=new Ce(new ke("polygon",we(!0,!1,t.spatialReference),t.state.viewingMode)),this._makeDirty(!0),this.emit("change"),this._handles.add(this.editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this.editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry")}get editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.initialized&&this.editGeometry.components.length>0?this.editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this.editGeometry.components.length>0){const e=this.editGeometry.components[0].getLastVertex();if(s(e))return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this.editGeometry.components.length||0===this.editGeometry.components[0].vertices.length)return null;const t=this.editGeometry.components[0].vertices[0];let s=t;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==t&&null!=s);return null}getVertexPositionAsPoint(e){return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this.editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this.editGeometry.coordinateHelper;this.forEachVertex(((s,i)=>{t.vectorToPoint(s.pos,wt),e(wt,i)}))}clear(){s(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(e){if(!this.initialized)return null;if(0===this.editGeometry.components.length){const e=n(this.view);this.editGeometry.components.push(new Pe(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this.editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.initialized||0===this.editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this.editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let s=!1;if(this.editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(s=!0)}))})),!s)throw new Error(`vertex doesnt exist ${t}`);return s}setVertexPosition(e,t){if(!this.initialized)return null;const s=this._editGeometryOperations.setVertexPosition(e,this.editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((s,i)=>{const r=e.getVertexPositionAsPointFromIndex(i);s.equals(r)||(t=!1)})),!!t}};e([a({value:null})],kt.prototype,"areaMeasurement",null),e([a({value:null})],kt.prototype,"view",null),e([a()],kt.prototype,"isValidPolygon",null),e([a()],kt.prototype,"extent",null),e([a()],kt.prototype,"spatialReference",null),e([a()],kt.prototype,"numVertices",null),kt=e([h("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],kt);const wt=new je;const Pt=Object.freeze({__proto__:null,build:function(e){const t=new dt;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add(tt.POSITION,"vec3"),t.attributes.add(tt.UV0,"vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(ut`
    void main(void) {
      vUV = uv0;
      ${e.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.multipassTerrainEnabled&&(t.fragment.include(gt),t.include(Ee,e)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(Ie),t.fragment.code.add(ut`
    void main() {
      ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.oitEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}});class Mt extends We{initializeProgram(e){const t=Mt.shader.get(),s=this.configuration,i=t.build({oitEnabled:s.transparencyPassType===st.Color,multipassTerrainEnabled:s.multipassTerrainEnabled,cullAboveGround:s.cullAboveGround});return new qe(e.rctx,i,Xe)}bindPass(e,t){Ne(this.program,t.camera.projectionMatrix),this.program.setUniform2fv("size",e.size),this.program.setUniform4fv("color1",e.color1),this.program.setUniform4fv("color2",e.color2),t.multipassTerrainEnabled&&(this.program.setUniform2fv("nearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),Be(this.program,t))}bindDraw(e){He(this.program,e)}_setPipelineState(e){const t=this.configuration,s=e===st.NONE,i=e===st.FrontFace;return at({blending:t.transparent?s?Dt:ht(e):null,depthTest:{func:lt(e)},depthWrite:s?t.writeDepth&&pt:mt(e),colorWrite:ct,polygonOffset:s||i?t.polygonOffset&&At:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Mt.shader=new Fe(Pt,(()=>Promise.resolve().then((()=>Pt))));const At={factor:0,units:-25},Dt=nt(_t.SRC_ALPHA,_t.ONE,_t.ONE_MINUS_SRC_ALPHA,_t.ONE_MINUS_SRC_ALPHA);class Vt extends Oe{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=st.NONE,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([Te()],Vt.prototype,"transparent",void 0),e([Te()],Vt.prototype,"writeDepth",void 0),e([Te()],Vt.prototype,"polygonOffset",void 0),e([Te({count:st.COUNT})],Vt.prototype,"transparencyPassType",void 0),e([Te()],Vt.prototype,"multipassTerrainEnabled",void 0),e([Te()],Vt.prototype,"cullAboveGround",void 0);class Rt extends Ze{constructor(e){super(e,xt),this.techniqueConfig=new Vt}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:st.NONE,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,s,i,r,o,n){return Ke(e,t,i,r,o,void 0,n)}requiresSlot(e){let t=it.OPAQUE_MATERIAL;return this.parameters.transparent&&(t=this.parameters.writeDepth?it.TRANSPARENT_MATERIAL:it.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===t||e===it.DRAPED_MATERIAL}createGLMaterial(e){return e.output===$e.Color||e.output===$e.Alpha?new Gt(e):null}createBufferWriter(){return new rt(ot)}}class Gt extends Qe{updateParameters(e){return this.ensureTechnique(Mt,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const xt={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Ye};class Ut extends ze{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=et.OccludeAndTransparent,this._geometry=null,this._size=[1,1],this._color1=te(1,.5,0,.5),this._color2=te(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){this._size=e,this._updateMaterial()}get color1(){return this._color1}set color1(e){I(e,this._color1)||(T(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){I(e,this._color2)||(T(this._color2,e),this._updateMaterial())}_updateMaterial(){s(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Rt({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:et.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){s(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(o(this._geometry)||o(this._checkerBoardMaterial))return;const t=zt;Ge(t,this.transform);const s=this._geometry,i=[],r=P();s.position.forEach((e=>{G(r,e,t),i.push(r[0],r[1],r[2])}));const n=[];s.uv.forEach((e=>{n.push(e[0],e[1])}));const a=new Je([[tt.POSITION,{size:3,data:i,exclusive:!0}],[tt.UV0,{size:2,data:n,exclusive:!0}]],[[tt.POSITION,s.triangleIndices],[tt.UV0,s.triangleIndices]]);e.addGeometry(a,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const zt=P();let Et=class extends t{constructor(e){super(e),this._handles=new c,this._params={...Tt},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=P(),this._originTransform=Ue(),this._cursorPositionRenderSpace=P(),this.messages=null,this.viewData=Ot,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const e=this.view,t=this._params;this._path=new Se({view:e,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:et.OccludeAndTransparent}),this._intersectedPath=new Se({view:e,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:et.OccludeAndTransparent}),this._perimeter=new Se({view:e,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:et.OccludeAndTransparent}),this._intersectedPerimeter=new Se({view:e,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:et.OccludeAndTransparent}),this._projectionLines=new Se({view:e,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:yt(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:et.OccludeAndTransparent}),this._measurementArea=new Ut({view:e,attached:!0,color1:t.areaColor1,color2:t.areaColor2}),this._areaLabel=new B({view:this.view,attached:!0,fontSize:It.Large}),this._pathLengthLabel=new B({view:e,attached:!0,fontSize:It.Small}),this._cursorSegmentLengthLabel=new B({view:e,attached:!0,fontSize:It.Small}),this._perimeterLengthLabel=new B({view:e,attached:!0,fontSize:It.Small});const s=this.analysisViewData;this._handles.add([d((()=>[s.mode,this.visible,s.unit,s.measurementData,s.cursorPoint]),(()=>this._update()),g),d((()=>{var t;return null==(t=e.state)?void 0:t.camera}),(()=>this._updateLabels()),g),ft((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=r(this._measurementArea),this._path=r(this._path),this._intersectedPath=r(this._intersectedPath),this._perimeter=r(this._perimeter),this._intersectedPerimeter=r(this._intersectedPerimeter),this._areaLabel=r(this._areaLabel),this._pathLengthLabel=r(this._pathLengthLabel),this._cursorSegmentLengthLabel=r(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=r(this._perimeterLengthLabel),this._projectionLines=r(this._projectionLines),this._handles=r(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const e=this.analysisViewData,t=e.measurementData;o(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,s){const i=t.isValidPolygon,r="geodesic"===e.actualMeasurementMode,o=r?e.geodesicArea:e.area;let n=1;if(o){const t=this._toPreferredAreaUnit(o,this.analysisViewData.unit);n=O(Math.sqrt(t.value)/Math.sqrt(300)),n*=Math.sqrt(Me(1,t.unit,"square-meters")),n/=e.unitNormalizer.normalizeDistance(1)}const a={validMeasurement:i,path:t,pathVersion:t.version,cursorPoint:s,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:r?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:r?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:r?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:n};this._set("viewData",a)}_updateOrigin(){const e=this.viewData;W(e.positionsRenderCoords,this._origin),xe(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,s=t.path,i=this.view.renderCoordsHelper.spatialReference,r=t.mode,o=[],n=[],a=[],h=t.validMeasurement?s.numVertices:s.numVertices-1;for(let l=0;l<h;++l){const h=t[e][l],p=t[e][(l+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new J(h,p);break;case"geodesic":m=new H(h,p,i)}t.intersectingSegments.has(l)?a.push(m):n.push(m),o.push(m)}return{all:o,nonIntersecting:n,intersecting:a}}_updatePathSegments(){const e=this.visible,t=this.viewData,i=this._createSegments("positionsRenderCoords"),r=t.path,o=!r.isValidPolygon,n=t.cursorPoint,a=this.view.renderCoordsHelper,h=a.spatialReference,l=t.mode;if(this._cursorSegment=null,r.numVertices>0&&o&&s(n)){if(a.toRenderCoords(n,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[r.numVertices-1],s=this._cursorPositionRenderSpace;let o=null;switch(l){case"euclidean":o=new J(e,s);break;case"geodesic":o=new H(e,s,h)}i.nonIntersecting.push(o),this._cursorSegment=o}}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=i.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,s=e.path,i=e.mode;if(s.numVertices>0&&e.validMeasurement&&"euclidean"===i){const i=[];for(let t=0;t<s.numVertices;++t){const s=P();G(s,e.positionsRenderCoords[t],this._origin);const r=P();G(r,e.positionsFittedRenderCoords[t],this._origin),i.push([s,r])}this._projectionLines.geometry=i,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const e=this.viewData,t=e.path;if(!t)return;const i=e.measurementData,r=e.mode,o=!t.isValidPolygon,a=this.visible,h=this._formatAreaLabel(this.messages,"geodesic"===r?i.geodesicArea:i.area,this.analysisViewData.unit);s(h)?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=h,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&a):this._areaLabel.visible=!1,this._set("areaLabel",n(h));const l=this._formatLengthLabel(this.messages,"geodesic"===r?i.geodesicPathLength:i.pathLength,this.analysisViewData.unit);if(s(l)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const i=this._pathSegments[e.pathLengthLabelSegmentIndex],r=s(this._cursorSegment)?this._cursorSegment:Ft;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:i,right:r},this._pathLengthLabel.text=l,this._pathLengthLabel.visible=o&&t.numVertices>0&&a}else this._pathLengthLabel.visible=!1;const p="geodesic"===r?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(s(p)){const e=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=s(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=n(e),this._cursorSegmentLengthLabel.visible=o&&0!==p.value&&a}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const m="geodesic"===e.mode,c=m?i.geodesicPathLength:i.perimeterLength,d=this._formatLengthLabel(this.messages,c,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",n(d)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=n(d),this._perimeterLengthLabel.visible=!0;let t=!0;for(let s=0;s<e.path.numVertices;++s){const i=(e.perimeterLengthLabelSegmentIndex+s)%e.path.numVertices,r=m?this._pathSegments[i]:this._perimeterSegments[i];if(t=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&a}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return $(e,this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return De(e.value,e.unit);case"imperial":return Ae(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const s=this._deriveLengthUnitFromAreaUnit(t);switch(s){case"metric":return Re(e.value,e.unit);case"imperial":return Ve(e.value,e.unit);default:return s}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,s){return e&&t&&Q(e,t,this._preferredAreaUnit(t,s))}_formatLengthLabel(e,t,s){return e&&t&&Q(e,t,this._preferredLengthUnit(t,s))}_updateMessageBundle(){this.loadingMessages=!0,jt("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};var It;e([a()],Et.prototype,"view",void 0),e([a()],Et.prototype,"messages",void 0),e([a()],Et.prototype,"analysis",void 0),e([a()],Et.prototype,"viewData",void 0),e([a()],Et.prototype,"analysisViewData",void 0),e([a({readOnly:!0})],Et.prototype,"areaLabel",void 0),e([a({readOnly:!0})],Et.prototype,"perimeterLengthLabel",void 0),e([a()],Et.prototype,"loadingMessages",void 0),e([a()],Et.prototype,"visible",null),Et=e([h("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],Et),function(e){e[e.Small=12]="Small",e[e.Large=16]="Large"}(It||(It={}));const Tt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},Ot={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Ft=new J(P(),P());let Wt=class extends(p(t)){constructor(e){super(e),this.type="area-measurement-view-3d",this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=m.Auto}initialize(){this.path=new kt({view:this.view,areaMeasurement:this.analysis}),this.analysisVisualization=new Et({view:this.view,analysis:this.analysis,analysisViewData:this}),this.analysisController=new St({view:this.view,analysis:this.analysis,analysisViewData:this})}destroy(){this.analysisController=r(this.analysisController),this.analysisVisualization=r(this.analysisVisualization),this.path.destroy()}get updating(){var e;return!(null==(e=this.analysisVisualization)||!e.loadingMessages)}get result(){if(o(this.measurementData))return{area:null,mode:null,perimeter:null};const e=this.measurementData;return"euclidean"===e.actualMeasurementMode?{area:e.area,perimeter:e.perimeterLength,mode:"euclidian"}:{area:e.geodesicArea,perimeter:e.pathLength,mode:"geodesic"}}get validMeasurement(){return this.path.isValidPolygon}get unit(){return i(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};e([a()],Wt.prototype,"type",void 0),e([a()],Wt.prototype,"analysis",void 0),e([a()],Wt.prototype,"updating",null),e([a()],Wt.prototype,"analysisVisualization",void 0),e([a()],Wt.prototype,"analysisController",void 0),e([a()],Wt.prototype,"result",null),e([a()],Wt.prototype,"measurementData",void 0),e([a()],Wt.prototype,"validMeasurement",null),e([a()],Wt.prototype,"path",void 0),e([a()],Wt.prototype,"lastDraggedVertex",void 0),e([a()],Wt.prototype,"cursorPoint",void 0),e([a()],Wt.prototype,"mode",void 0),e([a()],Wt.prototype,"unit",null),e([a(l)],Wt.prototype,"_defaultUnit",void 0),Wt=e([h("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],Wt);const qt=Wt;export{qt as default};
