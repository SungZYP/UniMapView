/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import{HandleOwnerMixin as s}from"../../../core/HandleOwner.js";import{init as r}from"../../../core/watchUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{i}from"../../../core/lang.js";import"../../../chunks/ensureType.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{g as p,c as a}from"../../../chunks/layerListUtils.js";import c from"../../../core/Collection.js";import u from"../../../views/interactive/snapping/FeatureSnappingLayerSource.js";import l from"../../LayerList/LayerListViewModel.js";import m from"../../LayerList/ListItem.js";import"../../../chunks/deprecate.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/object.js";import"../../../chunks/string.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/ArrayPool.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../core/Handles.js";import"../../../chunks/Evented.js";import"../../../chunks/shared.js";import"../../../core/reactiveUtils.js";import"../../../chunks/Identifiable.js";import"../../../core/accessorSupport/decorators/aliasOf.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../support/actions/ActionBase.js";import"../../../support/actions/ActionButton.js";import"../../../chunks/ActionSlider.js";import"../../../support/actions/ActionToggle.js";import"../../LayerList/ListItemPanel.js";import"../../Widget.js";import"../../../intl.js";import"../../../chunks/number.js";import"../../../chunks/jsonMap.js";import"../../../chunks/locale.js";import"../../../chunks/messages.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/assets.js";import"../../../chunks/domUtils.js";import"../../../chunks/Promise.js";import"../../../chunks/uuid.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/jsxWidgetSupport.js";import"../../../chunks/widgetThemeUtils.js";import"../widget.js";import"../../../chunks/accessibleHandler.js";import"../../../chunks/messageBundle.js";import"../../../chunks/vmEvent.js";import"../../../chunks/jsxFactory.js";const h=t=>d(t)||j(t),d=t=>{if(!("type"in t))return!1;switch(t.type){case"feature":case"geojson":case"csv":case"graphics":case"wfs":return!0;default:return!1}},j=t=>{const e=p(t);if(t.hasOwnProperty(e)&&i(t[e]))for(const s of t[e])if(h(s))return!0;return!1};var f;let g=f=class extends m{constructor(){super(...arguments),this.featureSource=null}get enabled(){return!!i(this.featureSource)&&this.featureSource.enabled}_initializeChildLayers(t){const e=t.filter(h);super._initializeChildLayers(e)}_makeChildren(t){return t.map((t=>a(t)?new f({layer:t,parent:this,view:this.view}):null)).reverse()}};t([o()],g.prototype,"children",void 0),t([o()],g.prototype,"enabled",null),t([o()],g.prototype,"featureSource",void 0),t([o()],g.prototype,"parent",void 0),g=f=t([n("esri.widgets.support.SnappingControls.SnappingListItem")],g);let y=class extends l{constructor(){super(...arguments),this.featureSnappingSources=new c}get operationalItemsFlat(){return this.operationalItems.flatten((t=>t.children))}_compileList(){const t=this.get("view.map.layers");if(!t)return;const e=t.filter(h);this._watchLayersListMode(e);const s=this._getViewableLayers(e);s&&s.length?(this._createNewItems(s),this._removeItems(s),this._sortItems(s),this._beforeCallListItemsCreated()):this._removeAllItems()}_createListItem(t){const{view:e}=this,s=k(this.featureSnappingSources,t),r=new g({layer:t,view:e,featureSource:s});for(const t of r.children)t.featureSource=k(this.featureSnappingSources,t.layer);return this._watchItemProperties(r),r}};t([o()],y.prototype,"featureSnappingSources",void 0),t([o()],y.prototype,"operationalItems",void 0),y=t([n("esri.widgets.support.SnappingControls.SnappingLayerListViewModel")],y);const k=(t,e)=>{if(!d(e))return null;let s=t.find((t=>t.layer===e));return s||(s=new u({layer:e,enabled:!1}),t.add(s)),s};let w=class extends(s(e)){constructor(t){super(t),this.layerListViewModel=new y,this.snappingOptions=null,this.view=null}initialize(){this.handles.add([r(this,"view",(t=>{this.layerListViewModel.view=t})),r(this,"snappingOptions.featureSources",(()=>{this.layerListViewModel.featureSnappingSources=this.snappingOptions.featureSources}))])}get state(){return this.get("snappingOptions")?"ready":"disabled"}updateEnabledFeatureSources(t){for(const e of this.snappingOptions.featureSources)a(e.layer)&&(e.enabled=t.includes(e.layer.id))}};t([o({constructOnly:!0})],w.prototype,"layerListViewModel",void 0),t([o({constructOnly:!0})],w.prototype,"snappingOptions",void 0),t([o()],w.prototype,"state",null),t([o({constructOnly:!0})],w.prototype,"view",void 0),w=t([n("esri.widgets.support.SnappingControls.SnappingControlsViewModel")],w);const S=w;export{S as default};
