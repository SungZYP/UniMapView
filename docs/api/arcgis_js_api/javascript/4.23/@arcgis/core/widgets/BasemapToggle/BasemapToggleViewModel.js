/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{t as e}from"../../chunks/compilerUtils.js";import{E as s}from"../../chunks/Evented.js";import{i as r}from"../../core/lang.js";import{watch as o,whenOnce as i,initial as a}from"../../core/reactiveUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import{cast as n}from"../../core/accessorSupport/decorators/cast.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{isLoaded as l,canProjectWithoutEngine as c,load as h}from"../../geometry/projection.js";import{e as u}from"../../geometry/SpatialReference.js";import{e as j}from"../../Basemap.js";import{e as g,d as k,f as d,g as f}from"../../chunks/basemapUtils.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import"../../chunks/mathUtils.js";import"../../chunks/common.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/Ellipsoid.js";import"../../chunks/mat4.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/JSONSupport.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../core/Collection.js";import"../../chunks/shared.js";import"../../chunks/collectionUtils.js";import"../../chunks/Loadable.js";import"../../chunks/Promise.js";import"../../chunks/loadAll.js";import"../../chunks/asyncUtils.js";import"../../portal/Portal.js";import"../../chunks/locale.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalItem.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../chunks/messages.js";import"../../chunks/writeUtils.js";let y=class extends s.EventedAccessor{constructor(t){super(t),this._basemapCache={},this._loadingProjectionEngine=!1,this.nextBasemap=g("hybrid",this._basemapCache),this.view=null,this.toggle=this.toggle.bind(this)}initialize(){o((()=>this.nextBasemap),(t=>{t&&!t.loaded&&t.load().catch((()=>{}))}),a)}destroy(){this.view=null,k(this._basemapCache),this._basemapCache=null}get _nextBasemapSpatialReferenceTask(){return d(this.view,this.nextBasemap)}get activeBasemap(){var t,e,s;return g(null!=(t=null==(e=this.view)||null==(s=e.map)?void 0:s.basemap)?t:"topo",this._basemapCache)}castNextBasemap(t){return g(t,this._basemapCache)}get state(){var t;return null!=(t=this.view)&&t.ready?this._loadingProjectionEngine?"loading":"ready":"disabled"}async toggle(){if("disabled"===this.state)return;const{activeBasemap:t,nextBasemap:e}=this,s=!("spatialReferenceLocked"in this.view)||this.view.spatialReferenceLocked;if(!s){if(await i((()=>!this._nextBasemapSpatialReferenceTask.updating)),e!==this.nextBasemap||t!==this.activeBasemap)return;const{spatialReference:s}=this._nextBasemapSpatialReferenceTask;if(!r(s)||u(this.view.spatialReference,s)||l()||c(this.view.spatialReference,s)||(this._loadingProjectionEngine=!0,await h(),this._loadingProjectionEngine=!1),e!==this.nextBasemap||t!==this.activeBasemap)return}this.view.map.basemap=e,s||!r(this._nextBasemapSpatialReferenceTask.spatialReference)||u(this.view.spatialReference,this._nextBasemapSpatialReferenceTask.spatialReference)||(this.view.spatialReference=this._nextBasemapSpatialReferenceTask.spatialReference),this.nextBasemap=t,this.emit("toggle",{previous:t,current:e})}static getThumbnailUrl(t){if(!t)return null;const{thumbnailUrl:s}=t;if(s)return s;const r=f(t);if(r)return j[r].thumbnailUrl;const o=t.baseLayers.find((t=>!!e(t)().get("portalItem.thumbnailUrl")));return o?e(o)().get("portalItem.thumbnailUrl"):null}};t([p()],y.prototype,"_loadingProjectionEngine",void 0),t([p({readOnly:!0})],y.prototype,"_nextBasemapSpatialReferenceTask",null),t([p({readOnly:!0})],y.prototype,"activeBasemap",null),t([p()],y.prototype,"nextBasemap",void 0),t([n("nextBasemap")],y.prototype,"castNextBasemap",null),t([p({readOnly:!0})],y.prototype,"state",null),t([p()],y.prototype,"view",void 0),t([p()],y.prototype,"toggle",null),y=t([m("esri.widgets.BasemapToggle.BasemapToggleViewModel")],y);const v=y;export{v as default};
