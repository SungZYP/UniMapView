/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import{HandleOwnerMixin as s}from"../../../core/HandleOwner.js";import{isAbortError as e}from"../../../core/promiseUtils.js";import{watch as o,whenOnce as i}from"../../../core/reactiveUtils.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/ensureType.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{f as p}from"../../../chunks/basemapUtils.js";import"../../../chunks/deprecate.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/object.js";import"../../../chunks/string.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/ArrayPool.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/Error.js";import"../../../core/Handles.js";import"../../../core/Collection.js";import"../../../chunks/Evented.js";import"../../../chunks/shared.js";import"../../../Basemap.js";import"../../../chunks/collectionUtils.js";import"../../../chunks/JSONSupport.js";import"../../../chunks/Loadable.js";import"../../../chunks/Promise.js";import"../../../chunks/loadAll.js";import"../../../chunks/asyncUtils.js";import"../../../core/urlUtils.js";import"../../../chunks/writer.js";import"../../../geometry/SpatialReference.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../request.js";import"../../../chunks/reader.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/Ellipsoid.js";import"../../../chunks/locale.js";import"../../../portal/PortalQueryParams.js";import"../../../chunks/jsonMap.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalItem.js";import"../../../chunks/assets.js";import"../../../portal/PortalItemResource.js";import"../../../portal/PortalRating.js";import"../../../chunks/messages.js";import"../../../chunks/writeUtils.js";let n=class extends(s(r)){constructor(t){super(t),this.compatibilityFunction=null,this.error=null,this.state="loading",this.view=null}initialize(){const t=()=>this.refresh();this.handles.add([o((()=>{var t;return null==(t=this.basemap)?void 0:t.loadStatus}),t),o((()=>this.compatibilityFunction),t),o((()=>{var t;return this.view&&"basemapTerrain"in this.view&&(null==(t=this.view.basemapTerrain)?void 0:t.tilingScheme)}),t),o((()=>{var t;return null==(t=this.view)?void 0:t.ready}),t),o((()=>{var t;return null==(t=this.view)?void 0:t.spatialReference}),t)]),this.refresh()}destroy(){this._cancelRefresh(),this.basemap=null,this.compatibilityFunction=null,this.view=null}get _spatialReferenceTask(){return p(this.view,this.basemap)}set basemap(t){const r=this._get("basemap");r&&r.cancelLoad(),t&&t.load().catch((()=>{})),this._set("basemap",t)}get spatialReference(){return this._spatialReferenceTask.spatialReference}refresh(){var t;this._cancelRefresh(),this._set("state","loading");const r=null==(t=this.basemap)?void 0:t.loadStatus;if("loaded"!==r&&"failed"!==r)return;if(!this.compatibilityFunction)return void("loaded"===r?(this._set("state","ready"),this._set("error",null)):(this._set("state","error"),this._set("error",this.basemap.loadError)));const s=new AbortController,{signal:o}=s;this.compatibilityFunction(this,{signal:o}).then((()=>i((()=>!this._spatialReferenceTask.updating),o))).then((()=>{this._set("state","ready"),this._set("error",null)})).catch((t=>{e(t)||(this._set("state","error"),this._set("error",t))})),this._refreshController=s}_cancelRefresh(){this._refreshController&&(this._refreshController.abort(),this._refreshController=null)}};t([a({readOnly:!0})],n.prototype,"_spatialReferenceTask",null),t([a()],n.prototype,"basemap",null),t([a()],n.prototype,"compatibilityFunction",void 0),t([a({readOnly:!0})],n.prototype,"error",void 0),t([a({readOnly:!0})],n.prototype,"spatialReference",null),t([a({readOnly:!0})],n.prototype,"state",void 0),t([a()],n.prototype,"view",void 0),n=t([l("esri.widgets.BasemapGallery.support.BasemapGalleryItem")],n);const c=n;export{c as default};
