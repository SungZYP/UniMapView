/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{geometryTypes as e}from"../../geometry.js";import o from"../../TimeExtent.js";import r from"../../core/Collection.js";import{a as s}from"../../chunks/JSONSupport.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{e as p}from"../../chunks/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{fromJSON as m}from"../../geometry/support/jsonUtils.js";import l from"../../geometry/Extent.js";import y from"../../geometry/SpatialReference.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/writer.js";import"../../geometry/Multipoint.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/timeUtils.js";import"../../chunks/Evented.js";import"../../chunks/shared.js";var a;!function(t){t.LAYER_OPTION_TOP="top",t.LAYER_OPTION_VISIBLE="visible",t.LAYER_OPTION_ALL="all"}(a||(a={}));let c=class extends s{constructor(t){super(t),this.dpi=96,this.dynamicLayerInfos=null,this.floors=null,this.gdbVersion=null,this.geometry=null,this.geometryPrecision=null,this.height=400,this.layerIds=null,this.layerOption=a.LAYER_OPTION_TOP,this.layerTimeOptions=null,this.mapExtent=null,this.maxAllowableOffset=null,this.returnFieldName=!0,this.returnGeometry=!1,this.returnM=!1,this.returnUnformattedValues=!0,this.returnZ=!1,this.spatialReference=null,this.sublayers=null,this.timeExtent=null,this.tolerance=null,this.width=400}};t([i({type:Number,json:{write:!0}})],c.prototype,"dpi",void 0),t([i({type:[Object],json:{read:{source:"dynamicLayers"},write:{target:"dynamicLayers"}}})],c.prototype,"dynamicLayerInfos",void 0),t([i()],c.prototype,"floors",void 0),t([i({type:String,json:{write:!0}})],c.prototype,"gdbVersion",void 0),t([i({types:e,json:{read:m,write:!0}})],c.prototype,"geometry",void 0),t([i({type:Number,json:{write:!0}})],c.prototype,"geometryPrecision",void 0),t([i({type:Number,json:{write:!0}})],c.prototype,"height",void 0),t([i({type:[Object],readOnly:!0,json:{write:!0}})],c.prototype,"layerDefs",void 0),t([i({type:[Number],json:{write:!0}})],c.prototype,"layerIds",void 0),t([i({type:String,json:{write:!0}})],c.prototype,"layerOption",void 0),t([i({type:[Object],json:{write:!0}})],c.prototype,"layerTimeOptions",void 0),t([i({type:l,json:{write:!0}})],c.prototype,"mapExtent",void 0),t([i({type:Number,json:{write:!0}})],c.prototype,"maxAllowableOffset",void 0),t([i({type:Boolean,json:{write:!0}})],c.prototype,"returnFieldName",void 0),t([i({type:Boolean,json:{write:!0}})],c.prototype,"returnGeometry",void 0),t([i({type:Boolean,json:{write:!0}})],c.prototype,"returnM",void 0),t([i({type:Boolean,json:{write:!0}})],c.prototype,"returnUnformattedValues",void 0),t([i({type:Boolean,json:{write:!0}})],c.prototype,"returnZ",void 0),t([i({type:y,json:{write:!0}})],c.prototype,"spatialReference",void 0),t([i({type:r})],c.prototype,"sublayers",void 0),t([i({type:o,json:{write:!0}})],c.prototype,"timeExtent",void 0),t([i({type:Number,json:{write:!0}})],c.prototype,"tolerance",void 0),t([i({type:Number,json:{write:!0}})],c.prototype,"width",void 0),c=t([n("esri.rest.support.IdentifyParameters")],c),c.from=p(c);const u=c;export{u as default};
