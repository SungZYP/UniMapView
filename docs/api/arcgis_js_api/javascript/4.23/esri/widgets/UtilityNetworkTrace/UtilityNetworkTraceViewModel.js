// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Collection ../../core/Error ../../core/Evented ../../core/HandleOwner ../../core/Logger ../../core/maybe ../../core/watchUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../geometry/Point ../../networks/support/utils ../../rest/networks/trace ../../rest/networks/support/TraceLocation ../../rest/networks/support/TraceParameters ./support/GeometryHandler ./support/GraphicHandler".split(" "),
function(n,q,y,z,m,A,B,C,D,r,M,N,O,E,F,u,G,v,H,I,J){const K=B.getLogger("esri.widgets.UtilityNetworkTrace.UtilityNetworkTraceViewModel");m=function(w){function t(a){a=w.call(this,a)||this;a._activeProgress=!1;a._clickHandler=null;a._flags=[];a._geometryHandler=null;a._graphicHandler=null;a._highlightHandler=[];a._traces=[];a._traceResults=[];a._unObject=null;a.defaultGraphicColor={color:[255,255,0,.6],haloOpacity:.9,fillOpacity:.2,hex:"#FFFF00"};a.flags=[];a.gdbVersion="sde.DEFAULT";a.selectedTraces=
[];a.selectOnComplete=!0;a.showGraphicsOnComplete=!0;a.showSelectionAttributes=!0;return a}n._inheritsLoose(t,w);var g=t.prototype;g.initialize=function(){this._geometryHandler=new I.GeometryHandler;this._graphicHandler=new J.GraphicHandler};g.destroy=function(){this.view=null};g.addFlagByHit=function(a,b){return new Promise((c,d)=>{this.view.popup.autoOpenEnabled=!1;this._clickHandler&&this._clickHandler.remove();this.emit("add-flag",{type:a});this._clickHandler=this.view.on("click",f=>{this.queryFlagByHitTest(f,
a,b).then(e=>{this.view.popup.autoOpenEnabled=!0;this._clickHandler.remove();this.emit("add-flag-complete",{type:a,symbol:b});c(e)}).catch(e=>{this.view.popup.autoOpenEnabled=!0;this._clickHandler.remove();this.emit("add-flag-error",{type:a,symbol:b});d(e)})})})};g.addFlagsOnLoad=function(){var a=this;return new Promise(function(){var b=n._asyncToGenerator(function*(c){const d=[];yield a.view.when();const f=D.whenFalse(a.view,"updating",n._asyncToGenerator(function*(){yield Promise.all(a.flags.map(function(){var e=
n._asyncToGenerator(function*(l){if(l.mapPoint){var h=new F({x:l.mapPoint.x,y:l.mapPoint.y,spatialReference:l.mapPoint.spatialReference.wkid});h={screenPoint:a.view.toScreen(h),mapPoint:h};(yield a.queryFlagByHitTest(h,l.type))||("barrier"===l.type?d.push("barrier"):d.push("starting-point"))}});return function(l){return e.apply(this,arguments)}}()));f.remove();c(d)}))});return function(c){return b.apply(this,arguments)}}())};g.addResultGraphicToView=function(){var a=n._asyncToGenerator(function*(b,
c){for(const f in b.results.aggregatedGeometry)if(-1<"line,multipoint,polygon".indexOf(f)&&null!==b.results.aggregatedGeometry[f]){b.results.aggregatedGeometry[f].spatialReference=this._unObject.spatialReference;b.graphicEnabled=!0;var d=yield this._geometryHandler.projectGeometry(b.results.aggregatedGeometry[f],this.view.spatialReference);const e={globalid:b.trace.globalId};null!==d&&(d=this._graphicHandler.makeGraphic(d,c.color,e,this.view.spatialReference),this.view.graphics.add(d))}});return function(b,
c){return a.apply(this,arguments)}}();g.addTerminal=function(a,b){const c=[...this._flags];c.forEach(d=>{d.globalId===b.globalId&&-1===b.selectedTerminals.indexOf(parseInt(a,10))&&d.selectedTerminals.push(parseInt(a,10))});this._flags=c};g.callTrace=function(){var a=this;return new Promise(function(){var b=n._asyncToGenerator(function*(c){const d=a._traces.filter(f=>f.selected);0<d.length&&(0<a._traceResults.length&&a._traceResults.forEach(f=>{a.removeResultGraphicFromView(f)}),a._traceResults=[],
a.removeSelection(),yield Promise.all(d.map(function(){var f=n._asyncToGenerator(function*(e,l){const h=new H({gdbVersion:a.gdbVersion,moment:null,traceType:e.traceType,traceLocations:a._flags,namedTraceConfigurationGlobalId:e.globalId,traceConfiguration:null,outSpatialReference:null,resultTypes:null});yield a.executeTrace(e,a._unObject.networkServiceUrl,h).then(k=>{if(k.hasOwnProperty("results")){k={...k};const L=[...k.results.elements];k.results.elements.length=0;const x=new Map;for(var p of L)x.has(p.globalId)||
(x.set(p.globalId,!0),k.results.elements.push(p));p=[...a._traceResults];p.splice(l,0,k);a._traceResults=p;null!==k.results&&(a.selectOnComplete&&a.mergeSelection(!0,k.trace),a.showGraphicsOnComplete&&a.addResultGraphicToView(k,k.graphicColor));a._activeProgress=!1}else a._activeProgress=!1,p=[...a._traceResults],p.splice(l,0,k),a._traceResults=p}).catch(k=>{a._activeProgress=!1;throw k;})});return function(e,l){return f.apply(this,arguments)}}())),c(!0))});return function(c){return b.apply(this,
arguments)}}())};g.changeResultGraphicColor=function(a,b){const c=[...this._traceResults];0<c.length&&c.forEach(d=>{d.trace.globalId===b.trace.globalId&&(d.graphicColor=a,d.graphicEnabled=!0)});this._traceResults=c;this.removeResultGraphicFromView(b);this.addResultGraphicToView(b,a)};g.changeFlagSymbol=function(a,b){0<this._flags.length&&this._flags.forEach(c=>{c.type===a&&b&&(c.mapGraphic.symbol=b)})};g.checkCanTrace=function(){const a={status:!0,issues:[]};let b=[];this._flags.some(c=>"starting-point"===
c.type)?(b=this._traces.filter(c=>c.selected),0>=b.length&&(a.status=!1,a.issues=["noTrace"])):(b=this._traces.filter(c=>!0===c.selected),0<b.length?(a.status=!1,a.issues=["noStart"]):(a.status=!1,a.issues=["noStart","noTrace"]));return a};g.checkSelectionExist=function(){let a=!1;this._highlightHandler.some(b=>{b&&(a=!0)});return a};g.clearResult=function(a){let b=this._traceResults;if(0<b.length){const c=b.filter(d=>d.trace.globalId===a.globalId);0<c.length&&this.removeResultGraphicFromView(c[0]);
b=b.filter(d=>d.trace.globalId!==a.globalId)}this._traceResults=b;0===b.length?(this.removeSelection(),this.emit("clear-selection",{resultSet:[]})):this.mergeSelection(!1,a)};g.executeTrace=function(a,b,c){const d=this._processFlags(c.traceLocations);c.traceLocations=d;return G.trace(b,c).then(f=>({trace:a,results:f,selectionEnabled:!1,graphicEnabled:!1,graphicColor:this.defaultGraphicColor,status:"success"})).catch(f=>({trace:a,results:null,selectionEnabled:!1,graphicEnabled:!1,graphicColor:this.defaultGraphicColor,
status:f.message}))};g.getValidSources=function(){let a=[];const b=this._unObject.dataElement.domainNetworks;for(const c of b)a=a.concat(c.junctionSources),a=a.concat(c.edgeSources);return a};g.loadUtilityNetwork=function(){var a=n._asyncToGenerator(function*(){var b;yield this.view.when();const c=this.view.map;if(null!=(b=c.utilityNetworks)&&b.length){b=c.utilityNetworks.getItemAt(0);yield b.load();this._unObject=b;try{yield c.loadAll(),this._populateOutfields()}catch(d){this._populateOutfields()}return b}return null});
return function(){return a.apply(this,arguments)}}();g.manageFilterBarrier=function(a,b){const c=[...this._flags];c.forEach(d=>{d.globalId===b.globalId&&"barrier"===b.type&&d.id===b.id&&(d.isFilterBarrier=a)});this._flags=c};g.mergeSelection=function(a,b){let c=[];const d=[...this._traceResults],f=b.globalId;d.forEach(e=>{f===e.trace.globalId&&(e.selectionEnabled=a);e.selectionEnabled&&null!==e.results.elements&&(c=c.concat(e.results.elements))});this.selectResults([...new Set(c)])};g.queryFeaturesById=
function(a){var b=this;return new Promise(function(){var c=n._asyncToGenerator(function*(d){const f=u.getObjectIdsFromElements(b._unObject,a);var e=b._getUniqueMapLayerViews(b.view);const l={layerUrl:f[0].layerUrl,objectIds:f[0].objectIds,outFields:["*"]};e=e.filter(h=>h.layer.parsedUrl.path===f[0].layerUrl);if(0<e.length)if(e=(yield Promise.all(e.map(function(){var h=n._asyncToGenerator(function*(k){const p=new y;p.add(k.layer);return(yield u.getFeaturesFromLayers({layers:p,layerInfos:[l],returnGeometry:!0,
outSpatialReference:b.view.spatialReference}))[0]});return function(k){return h.apply(this,arguments)}}()))).filter(h=>0<h.featureSet.features.length),0<e.length){let h=[];e.forEach(k=>{h=h.concat(k.featureSet.features)});e[0].featureSet.features.length=0;e[0].featureSet.features=e[0].featureSet.features.concat(h);d(e[0])}else d(null);else d(null)});return function(d){return c.apply(this,arguments)}}())};g.queryFlagByHitTest=function(a,b,c){return this._lookupFlagByHit(a).then(d=>{if(0<d.length){const f=
[...this._flags];d.forEach(e=>{e=e.graphic;const l=e.attributes.hasOwnProperty("GLOBALID")?e.attributes.GLOBALID:e.attributes.globalid;if(0>=f.filter(k=>k.globalId===l).length){var h=this._graphicHandler.getFlagGraphic(e.mapPoint,b,e,c);this.view.graphics.add(h);f.push({...e,type:b,globalId:e.attributes.globalid?e.attributes.globalid:e.attributes.GLOBALID,details:e,mapGraphic:h,id:f.length+1})}else null!==e.percentAlong&&(h=this._graphicHandler.getFlagGraphic(e.mapPoint,b,e,c),this.view.graphics.add(h),
f.push({...e,type:b,globalId:e.attributes.globalid?e.attributes.globalid:e.attributes.GLOBALID,details:e,mapGraphic:h,id:f.length+1}))});this._flags=f;return!0}return!1})};g.removeResultGraphicFromView=function(a){const b=this.view.graphics;a.graphicEnabled=!1;b.filter(c=>c.attributes[c.attributes.hasOwnProperty("GLOBALID")?"GLOBALID":"globalid"]===a.trace.globalId).forEach(c=>{this.view.graphics.remove(c)})};g.removeFlag=function(a){const b=this._flags.filter(c=>{if(c.id!==a.id)return c});this._removeGraphic(a);
this._flags=b};g.removeSelection=function(){this._highlightHandler.forEach(a=>{a&&a.remove()});this._highlightHandler=[]};g.removeTerminal=function(a,b){const c=[...this._flags];c.forEach(d=>{if(d.globalId===b.globalId&&-1<b.selectedTerminals.indexOf(parseInt(a,10))){const f=b.selectedTerminals.indexOf(parseInt(a,10));d.selectedTerminals.splice(f,1)}});this._flags=c};g.reset=function(){this._flags=[];this._traceResults=[];const a=[...this._traces];a.forEach(b=>{b.selected=!1});this._traces=a;this.view.graphics.removeAll();
this.removeSelection();this.emit("clear-selection",{resultSet:[]})};g.selectFeaturesById=function(a){const b=u.getObjectIdsFromElements(this._unObject,a);this._getUniqueMapLayerViews(this.view).forEach(c=>{c.layer.parsedUrl.path===b[0].layerUrl&&this._highlightHandler.push(c.highlight(b[0].objectIds))})};g.selectResults=function(a){if(0<a.length){this.removeSelection();a=this._groupResultsByNetworkSource(a);const b=[];for(const c in a)this.selectFeaturesById(a[c]),b.push(this.queryFeaturesById(a[c]));
Promise.all(b).then(c=>{this.emit("select-features",{resultSet:c})})}else this.removeSelection(),this.emit("clear-selection",{resultSet:[]})};g.selectTraces=function(a,b){const c=[...this._traces];c.forEach(d=>{b===d.globalId&&(d.selected=a)});this._traces=c};g.selectTracesOnLoad=function(){this._unObject.hasOwnProperty("sharedNamedTraceConfigurations")&&(this._traces=[...this._unObject.sharedNamedTraceConfigurations],this._traces.forEach(a=>{a.selected=!1;-1!==this.selectedTraces.indexOf(a.globalId)&&
(a.selected=!0)}))};g.zoomToAsset=function(a){this.view.goTo(a).catch(b=>{console.error(b)})};g._getUniqueMapLayerViews=function(a){const b=[];a.layerViews.filter(c=>"feature"===c.layer.type||"group"===c.layer.type).forEach(c=>{"group"===c.type?c.layerViews.forEach(d=>{b.push(d)}):b.find(d=>d.layer.layerId===c.layer.layerId)||b.push(c)});return b};g._processFlags=function(a){const b=[];a.forEach(c=>{if(null!==c.selectedTerminals&&0<c.selectedTerminals.length)c.selectedTerminals.forEach(d=>{d=new v({globalId:c.globalId,
percentAlong:c.percentAlong,terminalId:d,type:c.type,isFilterBarrier:c.isFilterBarrier});b.push(d)});else{const d=new v({globalId:c.globalId,percentAlong:c.percentAlong,terminalId:null,type:c.type,isFilterBarrier:c.isFilterBarrier});b.push(d)}});return b};g._getDisplayField=function(a){const b=a.layer;let c=b.displayField;var d="";for(const f in a.attributes){const e=f.toLowerCase();e===c.toLowerCase()&&(d=a.attributes[f],"assetgroup"===e||"assettype"===e?((d=a.attributes[b.typeIdField.toUpperCase()])||
(d=a.attributes[b.typeIdField.toLowerCase()]),c=b.typeIdField,d=this._checkSubtype(b,d)):d=this._checkDomain(b.fields,f,d))}return{field:c,value:d}};g._checkSubtype=function(a,b){let c=b;null!==a.types&&0<a.types.length&&(a=a.types.filter(d=>d.id===b),0<a.length&&(c=a[0].name));return c};g._checkDomain=function(a,b,c){let d=c;a=a.filter(f=>f.name.toLowerCase()===b.toLowerCase());0<a.length&&null!==a[0].domain&&(a=a[0].domain.codedValues.filter(f=>f.code===c),0<a.length&&(d=a[0].name));return d};g._groupBy=
function(a,b){return a.reduce(function(c,d){(c[d[b]]=c[d[b]]||[]).push(d);return c},{})};g._groupResultsByNetworkSource=function(a){return 0<a.length?a[0].hasOwnProperty("results")?this._groupBy(a[0].results.elements,"networkSourceId"):this._groupBy(a,"networkSourceId"):a.hasOwnProperty("results")?this._groupBy(a.results.elements,"networkSourceId"):[]};g._lookupFlagByHit=function(a){return this.view.hitTest(a.screenPoint,{exclude:this.view.graphics}).then(b=>{const c=[];if(0<b.results.length&&(b=
b.results[0],b.graphic&&C.isSome(b.graphic.geometry)))if("polyline"===b.graphic.geometry.type){var d=this._geometryHandler.getPercentageAlong(b.graphic.geometry,a.mapPoint,b.graphic.geometry.spatialReference),f=this._getDisplayField(b.graphic);b.graphic.terminalId=null;b.graphic.isFilterBarrier=!1;b.graphic.allTerminals=null;b.graphic.selectedTerminals=null;b.graphic.percentAlong=d;b.graphic.displayValue=f;b.graphic.mapPoint=b.mapPoint;c.push(b)}else"point"!==b.graphic.geometry.type&&"polygon"!==
b.graphic.geometry.type||null===this._unObject||(d=this._unObject.getTerminalConfiguration(b.graphic),f=this._getDisplayField(b.graphic),b.graphic.terminalId=d?d.terminals[0].id?d.terminals[0].id:null:1,b.graphic.isFilterBarrier=!1,b.graphic.allTerminals=d?d:null,b.graphic.selectedTerminals=[d?d.terminals[0].id?d.terminals[0].id:null:1],b.graphic.percentAlong=null,b.graphic.displayValue=f,b.graphic.mapPoint=b.mapPoint,c.push(b));return c})};g._populateOutfields=function(){var a=n._asyncToGenerator(function*(){const b=
this.view.map,c=this.getValidSources();b.layers.forEach(d=>{"group"===d.type?d.layers.forEach(f=>{c.some(e=>e.layerId===f.layerId)&&f.fields.some(e=>"assetgroup"===e.name.toLowerCase())&&(f.outFields=["assetgroup","assettype","globalid","objectid"])}):c.some(f=>f.layerId===d.layerId)&&d.fields.some(f=>"assetgroup"===f.name.toLowerCase())&&(d.outFields=["assetgroup","assettype","globalid","objectid"])})});return function(){return a.apply(this,arguments)}}();g._removeGraphic=function(a){this.view.graphics.remove(a.mapGraphic)};
n._createClass(t,[{key:"state",get:function(){var a;return null!=(a=this.view)&&a.ready?"ready":"loading"}},{key:"view",get:function(){return this._get("view")},set:function(a){a&&"2d"!==a.type&&K.error(new z("view:invalid-view","SceneView is not supported",{view:a}));this._set("view",a)}}]);return t}(A.HandleOwnerMixin(m.EventedAccessor));q.__decorate([r.property()],m.prototype,"defaultGraphicColor",void 0);q.__decorate([r.property()],m.prototype,"flags",void 0);q.__decorate([r.property()],m.prototype,
"gdbVersion",void 0);q.__decorate([r.property()],m.prototype,"selectedTraces",void 0);q.__decorate([r.property()],m.prototype,"selectOnComplete",void 0);q.__decorate([r.property()],m.prototype,"showGraphicsOnComplete",void 0);q.__decorate([r.property()],m.prototype,"showSelectionAttributes",void 0);q.__decorate([r.property({readOnly:!0})],m.prototype,"state",null);q.__decorate([r.property({value:null})],m.prototype,"view",null);return m=q.__decorate([E.subclass("esri.widgets.UtilityNetworkTrace.UtilityNetworkTraceViewModel")],
m)});