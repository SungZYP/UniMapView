// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/mathUtils ../../../../core/maybe ../../../../core/screenUtils ../../../../chunks/mat3 ../../../../chunks/mat3f64 ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../core/libs/gl-matrix-2/types/mat4 ../../../../geometry/support/aaBoundingRect ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/hud/HUD.glsl ../lib/geometryDataUtils ../lib/GLMaterialTexture ../lib/Material ../lib/RenderSlot ../lib/screenSizePerspectiveUtils ../lib/Util ../lib/VertexAttribute ./internal/bufferWriterUtils ./internal/MaterialUtil ./renderers/utils ../../../../chunks/HUDMaterial.glsl ../shaders/HUDMaterialTechnique".split(" "),
function(T,N,ha,L,ia,U,V,ja,W,ka,X,k,F,la,ma,na,B,Y,oa,pa,Z,I,M,qa,h,J,ra,sa,aa,O){function ta(r,p,f,a=ua){ka.copy(a,r.anchorPos);a[0]*=-p[0];a[1]*=-p[1];a[0]+=r.screenOffset[0]*f;a[1]+=r.screenOffset[1]*f;return a}function ba(r,p,f,a,b,d,c,g){p=p-b-(0<g[0]?a[0]*g[0]:0);let e=p+a[0]+2*b;f=f-b-(0<g[1]?a[1]*g[1]:0);b=f+a[1]+2*b;c.textureIsSignedDistanceField&&(c=c.distanceFieldBoundingBox,p+=a[0]*c[0],f+=a[1]*c[1],e-=a[0]*(1-c[2]),b-=a[1]*(1-c[3]),p-=d,e+=d,f-=d,b+=d);return r[0]>p&&r[0]<e&&r[1]>f&&
r[1]<b}let Ba=function(r){function p(a){a=r.call(this,a,va)||this;a.techniqueConfig=new O.HUDMaterialTechniqueConfiguration;return a}N._inheritsLoose(p,r);var f=p.prototype;f.getTechniqueConfig=function(a,b){this.techniqueConfig.output=a;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.verticalOffset=!!this.parameters.verticalOffset;this.techniqueConfig.screenSizePerspective=!!this.parameters.screenSizePerspective;this.techniqueConfig.screenCenterOffsetUnitsEnabled=
"screen"===this.parameters.centerOffsetUnits?Y.HUDSpace.Screen:Y.HUDSpace.World;this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset;this.techniqueConfig.isDraped=this.parameters.isDraped;this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest;this.techniqueConfig.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled;this.techniqueConfig.sdf=this.parameters.textureIsSignedDistanceField;this.techniqueConfig.vvSize=!!this.parameters.vvSizeEnabled;this.techniqueConfig.vvColor=
!!this.parameters.vvColorEnabled;a===B.ShaderOutput.Color&&(this.techniqueConfig.debugDrawLabelBorder=!!this.parameters.debugDrawLabelBorder);a===B.ShaderOutput.Highlight&&(this.techniqueConfig.binaryHighlightOcclusion=this.parameters.binaryHighlightOcclusion);this.techniqueConfig.depthEnabled=this.parameters.depthEnabled;this.techniqueConfig.transparencyPassType=b.transparencyPassType;this.techniqueConfig.multipassGeometryEnabled=b.multipassGeometryEnabled;this.techniqueConfig.multipassTerrainEnabled=
b.multipassTerrainEnabled;this.techniqueConfig.cullAboveGround=b.cullAboveGround;return this.techniqueConfig};f.intersect=function(a,b,d,c,g,e,q,m,l){L.isSome(l)?this._intersectDrapedHudGeometry(a,e,q,m,l):this._intersectHudGeometry(a,b,d,c,q,m)};f._intersectDrapedHudGeometry=function(a,b,d,c,g){const e=a.vertexAttributes.get(h.VertexAttribute.POSITION),q=a.vertexAttributes.get(h.VertexAttribute.SIZE),m=this.parameters,l=aa.calculateAnchorPosForRendering(m);let v=1;var w=1;L.isSome(c)&&(w=c(ca),v=
w[0],w=w[5]);v*=a.screenToWorldRatio;w*=a.screenToWorldRatio;c=2*a.screenToWorldRatio;for(let A=0;A<e.data.length/e.size;A++){var t=A*e.size;const C=e.data[t];t=e.data[t+1];const x=A*q.size;D[0]=q.data[x]*v;D[1]=q.data[x+1]*w;let n;m.textureIsSignedDistanceField&&(n=m.outlineSize*a.screenToWorldRatio/2);ba(b,C,t,D,c,n,m,l)&&d(g.dist,g.normal,-1,!0)}};f._intersectHudGeometry=function(a,b,d,c,g,e){if(c.options.selectionMode&&c.options.hud&&!sa.isInstanceHidden(b)){b=this.parameters;var q=1,m=1;U.fromMat4(P,
d);if(L.isSome(e)){m=e(ca);q=m[0];m=m[5];{e=P;var l=e[0],v=e[1],w=e[2],t=e[3],A=e[4],C=e[5],x=e[6],n=e[7],y=e[8],E=1/Math.sqrt(l*l+v*v+w*w);const H=1/Math.sqrt(t*t+A*A+C*C),Q=1/Math.sqrt(x*x+n*n+y*y);e[0]=l*E;e[1]=v*E;e[2]=w*E;e[3]=t*H;e[4]=A*H;e[5]=C*H;e[6]=x*Q;e[7]=n*Q;e[8]=y*Q}}e=a.vertexAttributes.get(h.VertexAttribute.POSITION);l=a.vertexAttributes.get(h.VertexAttribute.SIZE);v=a.vertexAttributes.get(h.VertexAttribute.NORMAL);a=a.vertexAttributes.get(h.VertexAttribute.AUXPOS1);qa.assert(3<=e.size);
w=c.point;t=c.camera;A=aa.calculateAnchorPosForRendering(b);q*=t.pixelRatio;m*=t.pixelRatio;C="screen"===this.parameters.centerOffsetUnits;for(x=0;x<e.data.length/e.size;x++)if(n=x*e.size,k.set(u,e.data[n],e.data[n+1],e.data[n+2]),k.transformMat4(u,u,d),n=x*l.size,D[0]=l.data[n]*q,D[1]=l.data[n+1]*m,k.transformMat4(u,u,t.viewMatrix),n=x*a.size,k.set(z,a.data[n+0],a.data[n+1],a.data[n+2]),C||(u[0]+=z[0],u[1]+=z[1],0!==z[2]&&(n=z[2],k.normalize(z,u),k.subtract(u,u,k.scale(z,z,n)))),n=x*v.size,k.set(K,
v.data[n],v.data[n+1],v.data[n+2]),this._normalAndViewAngle(K,P,t,R),this._applyVerticalOffsetTransformationView(u,R,t,S),t.applyProjection(u,G),-1<G[0]){n=Math.floor(G[0])+this.parameters.screenOffset[0];y=Math.floor(G[1])+this.parameters.screenOffset[1];C&&(n+=z[0],0!==z[1]&&(y+=M.applyScaleFactor(z[1],S.factorAlignment)));M.applyPrecomputedScaleFactor(D,S.factor,D);E=1*t.pixelRatio;let H;b.textureIsSignedDistanceField&&(H=b.outlineSize*t.pixelRatio/2);ba(w,n,y,D,E,H,b,A)&&(y=c.ray,k.transformMat4(da,
u,ja.invert(wa,t.viewMatrix)),G[0]=w[0],G[1]=w[1],t.unprojectFromRenderScreen(G,u)&&(n=F.create(),k.copy(n,y.direction),E=1/k.length(n),k.scale(n,n,E),y=k.distance(y.origin,u)*E,g(y,n,-1,!0,1,da)))}}};f.computeAttachmentOrigin=function(a,b){var d=a.vertexAttributes;if(!d)return!1;d=d.get(h.VertexAttribute.POSITION);a=a.indices.get(h.VertexAttribute.POSITION);return oa.computeAttachmentOriginPoints(d,a,b)};f.createBufferWriter=function(){return new xa(this)};f._normalAndViewAngle=function(a,b,d,c){la.isMat4(b)&&
(b=U.fromMat4(ya,b));k.transformMat3(c.normal,a,b);k.transformMat4(c.normal,c.normal,d.viewInverseTransposeMatrix);c.cosAngle=k.dot(ea,za);return c};f._updateScaleInfo=function(a,b,d){const c=this.parameters;c.screenSizePerspective?M.precomputeScaleFactor(d,b,c.screenSizePerspective,a.factor):(a.factor.scale=1,a.factor.factor=0,a.factor.minPixelSize=0,a.factor.paddingPixels=0);c.screenSizePerspectiveAlignment?M.precomputeScaleFactor(d,b,c.screenSizePerspectiveAlignment,a.factorAlignment):(a.factorAlignment.factor=
a.factor.factor,a.factorAlignment.scale=a.factor.scale,a.factorAlignment.minPixelSize=a.factor.minPixelSize,a.factorAlignment.paddingPixels=a.factor.paddingPixels)};f.applyShaderOffsetsView=function(a,b,d,c,g,e,q){b=this._normalAndViewAngle(b,d,g,R);this._applyVerticalGroundOffsetView(a,b,g,q);this._applyVerticalOffsetTransformationView(q,b,g,e);this._applyPolygonOffsetView(q,b,c[3],g,q);this._applyCenterOffsetView(q,c,q);return q};f.applyShaderOffsetsNDC=function(a,b,d,c,g){this._applyCenterOffsetNDC(a,
b,d,c);L.isSome(g)&&k.copy(g,c);this._applyPolygonOffsetNDC(c,b,d,c);return c};f._applyPolygonOffsetView=function(a,b,d,c,g){var e=c.aboveGround?1:-1;d=Math.sign(d);0===d&&(d=e);e*=d;if(0>=this.parameters.shaderPolygonOffset)return k.copy(g,a);b=ha.clamp(Math.abs(b.cosAngle),.01,1);c=1-Math.sqrt(1-b*b)/b/c.viewport[2];0<e?k.scale(g,a,c):k.scale(g,a,1/c);return g};f._applyVerticalGroundOffsetView=function(a,b,d,c){const g=k.length(a),e=d.aboveGround?1:-1;d=.5*d.computeRenderPixelSizeAtDist(g);b=k.scale(u,
b.normal,e*d);k.add(c,a,b);return c};f._applyVerticalOffsetTransformationView=function(a,b,d,c){const g=this.parameters;if(!g.verticalOffset||!g.verticalOffset.screenLength){if(g.screenSizePerspective||g.screenSizePerspectiveAlignment){var e=k.length(a);this._updateScaleInfo(c,e,b.cosAngle)}else c.factor.scale=1,c.factorAlignment.scale=1;return a}e=k.length(a);d=ra.verticalOffsetAtDistance(d,e,g.verticalOffset,b.cosAngle,g.screenSizePerspectiveAlignment||g.screenSizePerspective);this._updateScaleInfo(c,
e,b.cosAngle);k.scale(b.normal,b.normal,d);return k.add(a,a,b.normal)};f._applyCenterOffsetView=function(a,b,d){const c="screen"!==this.parameters.centerOffsetUnits;d!==a&&k.copy(d,a);c&&(d[0]+=b[0],d[1]+=b[1],b[2]&&(k.normalize(K,d),k.add(d,d,k.scale(K,K,b[2]))));return d};f._applyCenterOffsetNDC=function(a,b,d,c){const g="screen"!==this.parameters.centerOffsetUnits;c!==a&&k.copy(c,a);g||(c[0]+=b[0]/d.fullWidth*2,c[1]+=b[1]/d.fullHeight*2);return c};f._applyPolygonOffsetNDC=function(a,b,d,c){const g=
this.parameters.shaderPolygonOffset;a!==c&&k.copy(c,a);g&&(a=d.aboveGround?1:-1,c[2]-=(a*Math.sign(b[3])||a)*g);return c};f.requiresSlot=function(a){if(a===I.RenderSlot.DRAPED_MATERIAL)return!0;const {drawInSecondSlot:b,occlusionTest:d}=this.parameters;return a===(b?I.RenderSlot.LABEL_MATERIAL:I.RenderSlot.HUD_MATERIAL)||d&&a===I.RenderSlot.OCCLUSION_PIXELS};f.createGLMaterial=function(a){return a.output===B.ShaderOutput.Color||a.output===B.ShaderOutput.Alpha?new Aa(a):a.output===B.ShaderOutput.Highlight?
new fa(a):null};f.calculateRelativeScreenBounds=function(a,b,d=ma.create()){ta(this.parameters,a,b,d);d[2]=d[0]+a[0];d[3]=d[1]+a[1];return d};return p}(Z.Material),fa=function(r){function p(a){return r.call(this,{...a,...a.material.parameters})||this}N._inheritsLoose(p,r);var f=p.prototype;f.updateParameters=function(a){this.updateTexture(this._material.parameters.textureId);return this.selectProgram(a)};f.selectProgram=function(a){return this.ensureTechnique(O.HUDMaterialTechnique,a)};f.beginSlot=
function(a){return this.updateParameters(a)};f.bind=function(a,b){this.bindTextures(b.program);this.bindTextureScale(b.program);b.bindPass(this._material.parameters,a)};return p}(pa),Aa=function(r){function p(){return r.apply(this,arguments)||this}N._inheritsLoose(p,r);var f=p.prototype;f._isOcclusionSlot=function(a){return a.slot===I.RenderSlot.OCCLUSION_PIXELS&&this._material.parameters.occlusionTest&&(this._output===B.ShaderOutput.Color||this._output===B.ShaderOutput.Alpha)};f.selectProgram=function(a){return this.ensureTechnique(O.HUDMaterialTechnique,
a,this._isOcclusionSlot(a)?B.ShaderOutput.Occlusion:this._output)};f.bind=function(a,b){this._isOcclusionSlot(a)||(this.bindTextures(b.program),this.bindTextureScale(b.program));b.bindPass(this._material.parameters,a)};return p}(fa);const S={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},ua=X.create(),u=F.create(),K=F.create(),G=ia.createRenderScreenPointArray3(),ea=F.create(),da=F.create(),P=V.create(),ya=V.create(),wa=
W.create(),z=F.create(),R={normal:ea,cosAngle:0},ca=W.create(),D=[0,0],za=F.fromValues(0,0,1),va={texCoordScale:[1,1],occlusionTest:!0,binaryHighlightOcclusion:!0,drawInSecondSlot:!1,color:[1,1,1,1],outlineColor:[1,1,1,1],outlineSize:0,textureIsSignedDistanceField:!1,distanceFieldBoundingBox:null,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,
0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],screenOffset:[0,0],verticalOffset:null,screenSizePerspective:null,screenSizePerspectiveAlignment:null,slicePlaneEnabled:!1,anchorPos:X.fromValues(.5,.5),shaderPolygonOffset:1E-5,polygonOffset:!1,textureId:null,centerOffsetUnits:"world",depthEnabled:!0,pixelSnappingEnabled:!0,debugDrawLabelBorder:!1,isDraped:!1,...Z.DefaultMaterialParameters},Ca=na.newLayout().vec3f(h.VertexAttribute.POSITION).vec3f(h.VertexAttribute.NORMAL).vec2f(h.VertexAttribute.UV0).vec4u8(h.VertexAttribute.COLOR).vec2f(h.VertexAttribute.SIZE).vec4f(h.VertexAttribute.AUXPOS1).vec4f(h.VertexAttribute.AUXPOS2);
let xa=function(){function r(f){this.material=f;this.vertexBufferLayout=Ca}var p=r.prototype;p.allocate=function(f){return this.vertexBufferLayout.createBuffer(f)};p.elementCount=function(f){return 6*f.indices.get(h.VertexAttribute.POSITION).length};p.write=function(f,a,b,d){J.writePosition(a.indices.get(h.VertexAttribute.POSITION),a.vertexAttributes.get(h.VertexAttribute.POSITION).data,f.transformation,b.position,d,6);J.writeNormal(a.indices.get(h.VertexAttribute.NORMAL),a.vertexAttributes.get(h.VertexAttribute.NORMAL).data,
f.invTranspTransformation,b.normal,d,6);var c=a.vertexAttributes.get(h.VertexAttribute.UV0).data;if(null==c||4>c.length){c=this.material.parameters;var g=f=0;var e=c.texCoordScale[0];c=c.texCoordScale[1]}else f=c[0],g=c[1],e=c[2],c=c[3];e=Math.min(1.99999,e+1);c=Math.min(1.99999,c+1);var q=a.indices.get(h.VertexAttribute.POSITION).length,m=b.uv0,l=d;for(var v=0;v<q;++v)m.set(l,0,f),m.set(l,1,g),l+=1,m.set(l,0,e),m.set(l,1,g),l+=1,m.set(l,0,e),m.set(l,1,c),l+=1,m.set(l,0,e),m.set(l,1,c),l+=1,m.set(l,
0,f),m.set(l,1,c),l+=1,m.set(l,0,f),m.set(l,1,g),l+=1;J.writeColor(a.indices.get(h.VertexAttribute.COLOR),a.vertexAttributes.get(h.VertexAttribute.COLOR).data,4,b.color,d,6);f=a.indices.get(h.VertexAttribute.SIZE);g=a.vertexAttributes.get(h.VertexAttribute.SIZE).data;e=f.length;c=b.size;q=d;for(m=0;m<e;++m){l=g[2*f[m]];v=g[2*f[m]+1];for(let w=0;6>w;++w)c.set(q,0,l),c.set(q,1,v),q+=1}a.indices.get(h.VertexAttribute.AUXPOS1)&&a.vertexAttributes.get(h.VertexAttribute.AUXPOS1)&&J.writeBufferVec4(a.indices.get(h.VertexAttribute.AUXPOS1),
a.vertexAttributes.get(h.VertexAttribute.AUXPOS1).data,b.auxpos1,d,6);a.indices.get(h.VertexAttribute.AUXPOS2)&&a.vertexAttributes.get(h.VertexAttribute.AUXPOS2)&&J.writeBufferVec4(a.indices.get(h.VertexAttribute.AUXPOS2),a.vertexAttributes.get(h.VertexAttribute.AUXPOS2).data,b.auxpos2,d,6)};return r}();T.HUDMaterial=Ba;Object.defineProperty(T,"__esModule",{value:!0})});