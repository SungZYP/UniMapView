// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/screenUtils ../../../../../chunks/vec3f64 ../../../analysis/interfaces ../../manipulatorUtils ../../editingTools/dragEventPipeline3D ../support/viewUtils ../../visualElements/LaserlineVisualElement ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Intersector ../../../webgl-engine/lib/IntersectorInterfaces ../../../../interactive/ManipulatorCollection".split(" "),
function(m,u,d,h,v,n,p,q,w,l,x,y,z,r,A){const B={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,
projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let k=function(){function e(a){var b,f,g;this.vertexManipulators=[];this._analysisVisualization=this._analysisView=null;this._destroyed=!1;this._mode=p.MeasurementMode.Auto;this._listenerHandles=this._cursorManipulator=this._laserLine=this._lastDraggedVertex=this._cursorPoint=null;this._tempHandlePosition=n.create();this._analysis=a.analysis;this._analysisView=a.analysisView;
this._toolState=a.toolState;this._manipulators=null!=(b=a.manipulators)?b:new A.ManipulatorCollection;this._view=a.view;this._mode=null!=(f=a.mode)?f:p.MeasurementMode.Auto;this._cursorPoint=null!=(g=a.cursorPoint)?g:null;this._style=l.copyParameter(B,a.style);this._intersector=z.newIntersector(this._view.state.viewingMode);this._intersector.options.store=r.StoreResults.MIN;this._analysisVisualization=this._analysisView.analysisVisualization;b=q.createSphereManipulator(this._view,this._style.handleColor,
this._style.handleOpacity);b.available=!1;b.radius=this._style.handleRadius;b.interactive=!1;this._manipulators.add(b);this._cursorManipulator=b;this._laserLine=new x.LaserlineVisualElement({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}});this._analysisView.mode=
this._mode;this._analysisView.cursorPoint=this._cursorPoint;this._updateVisibility(a.visible||!0)}var c=e.prototype;c.destroy=function(){this._listenerHandles=d.destroyMaybe(this._listenerHandles);this._manipulators=d.destroyMaybe(this._manipulators);this._laserLine=d.destroyMaybe(this._laserLine);this._destroyed=!0};c.whenMessages=function(){var a=m._asyncToGenerator(function*(){yield h.whenOnce(()=>!this._analysisView.updating)});return function(){return a.apply(this,arguments)}}();c.show=function(){this._setVisibility(!0)};
c.hide=function(){this._setVisibility(!1)};c._setVisibility=function(a){this._destroyed||this._analysis.visible===a||this._updateVisibility(a)};c._updateVisibility=function(a){this._analysis.visible=a;(this._laserLine.visible=a)?(this._initializeListeners(),this._updateAll(this._analysisVisualization.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach(b=>{this._removeVertexManipulator(b.manipulator)}),this.vertexManipulators=[],this._view.cursor=null)};c.vertexHandleAt=function(a,
b){a=this._manipulators.intersect(a,b);return d.isSome(a)?a.manipulator.metadata:null};c.manipulatorToVertex=function(a){return a.metadata};c.pick=function(a){var b=this._view.spatialReference;a=v.screenPointObjectToArray(a.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const f=n.create();if(!a.getIntersectionPoint(f))return new e.PickResult;b=this._view.renderCoordsHelper.fromRenderCoords(f,b);return d.isNone(b)?
new e.PickResult:new e.PickResult(a.intersector===r.IntersectorType.TERRAIN?"surface":"feature",f,b)};c.overlappingHandles=function(a,b){return l.pointToPointScreenDistance(a,b,this._view)<=this._style.handleRadius};c.screenToMap3D=function(){return w.screenToMap3D(this._view)};c._updateAll=function(a){this._analysis.visible&&(this._updateVertexManipulators(a),this._updateLaserLine())};c._createVertexManipulator=function(){const a=q.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);
a.radius=this._style.handleRadius;return{id:this._manipulators.add(a),manipulator:a}};c._removeVertexManipulator=function(a){this._manipulators.remove(a)};c._updateVertexManipulators=function(a){const b=this._analysisView.path?this._analysisView.path.vertices:[],f=this.vertexManipulators;l.resizeArray(f,b.length,()=>this._createVertexManipulator(),g=>this._removeVertexManipulator(g.manipulator));f.forEach((g,t)=>{g.manipulator.metadata=b[t];g.manipulator.renderLocation=a.positionsRenderCoords[t]});
"drawing"===this._toolState.polygonState&&d.isSome(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1};c._getFocusPoint=function(){const a=this.lastDraggedVertex;switch(this._toolState.polygonState){case "drawing":return d.isSome(this.cursorPoint)?this.cursorPoint:d.isSome(a)?this._analysisView.path.getVertexPositionAsPoint(a):d.unwrap(this._analysisView.path.lastPoint);case "editing":return d.isSome(a)?this._analysisView.path.getVertexPositionAsPoint(a):
null;default:return this.cursorPoint}};c._updateLaserLine=function(){var a=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active;const b=this._getFocusPoint();a&&d.isSome(b)?(a=this._tempHandlePosition,this._view.renderCoordsHelper.toRenderCoords(b,a),this._laserLine.heightManifoldTarget=a):this._laserLine.heightManifoldTarget=null};c._initializeListeners=function(){this._listenerHandles=new u;this._listenerHandles.add([h.watch(()=>this._toolState.polygonState,
()=>this._updateLaserLine()),h.watch(()=>this._analysisVisualization.viewData,()=>this._updateAll(this._analysisVisualization.viewData),h.sync),h.watch(()=>({lastDraggedVertex:this._analysisView.lastDraggedVertex,cursorPoint:this._analysisView.cursorPoint}),()=>this._updateLaserLine()),h.watch(()=>this._toolState.active,()=>this._updateAll(this._analysisVisualization.viewData))])};c._destroyListeners=function(){this._listenerHandles=d.destroyMaybe(this._listenerHandles)};m._createClass(e,[{key:"destroyed",
get:function(){return this._destroyed}},{key:"analysisVisualization",get:function(){return this._analysisVisualization}},{key:"analysisView",get:function(){return this._analysisView}},{key:"requiresCursorPoint",get:function(){return("initial"===this._toolState.polygonState||"drawing"===this._toolState.polygonState)&&this._toolState.active}},{key:"visible",get:function(){return this._analysis.visible},set:function(a){a?this.show():this.hide()}},{key:"mode",get:function(){return this._mode},set:function(a){this._destroyed||
(this._mode=a,this._analysisView.mode=a)}},{key:"cursorPoint",get:function(){return this._cursorPoint},set:function(a){this._destroyed||(this._cursorPoint=a,this._analysisView.cursorPoint=a)}},{key:"lastDraggedVertex",get:function(){return this._lastDraggedVertex},set:function(a){this._destroyed||(this._lastDraggedVertex=a,this._analysisView.lastDraggedVertex=a)}},{key:"testData",get:function(){const a=this._laserLine.testData;return{labels:this._analysisVisualization.testData.labels,laserLineRenderer:d.isSome(a)?
{heightManifoldEnabled:a.heightManifoldEnabled,heightManifoldTarget:a.heightManifoldTarget,pointDistanceEnabled:a.pointDistanceEnabled,pointDistanceOrigin:a.pointDistanceOrigin,pointDistanceTarget:a.pointDistanceTarget,lineVerticalPlaneEnabled:a.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}}]);return e}();k._handleGeometry=y.createSphereGeometry(1,32,32);(function(e){e.PickRequest=
function(){};e.PickResult=function(c=null,a=null,b=null){this.type=c;this.scenePoint=a;this.mapPoint=b}})(k||(k={}));return k});