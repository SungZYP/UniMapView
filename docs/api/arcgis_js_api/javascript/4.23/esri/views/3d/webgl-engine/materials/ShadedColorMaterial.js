// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/buffer/BufferView ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutputOptions ../lib/basicInterfaces ../lib/GLMaterial ../lib/GLMaterials ../lib/Material ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./internal/bufferWriterUtils ./internal/MaterialUtil ../shaders/ShadedColorMaterialTechnique".split(" "),
function(v,w,l,p,x,F,G,n,H,I,J,y,m,K,d,z,A,q){let Q=function(g){function e(a){a=g.call(this,a,L)||this;a.supportsEdges=!0;a.techniqueConfig=new q.ShadedColorMaterialTechniqueConfiguration;a._vertexAttributeLocations=q.ShadedColorMaterialVertexAttrLocations;return a}w._inheritsLoose(e,g);var b=e.prototype;b.getTechniqueConfig=function(a,c){this.techniqueConfig.output=a;this.techniqueConfig.cullFace=this.parameters.cullFace;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.transparent=
this.parameters.transparent;this.techniqueConfig.writeDepth=this.parameters.writeDepth;this.techniqueConfig.screenSizeEnabled=this.parameters.screenSizeEnabled;this.techniqueConfig.shadingEnabled=this.parameters.shadingEnabled;this.techniqueConfig.transparencyPassType=c.transparencyPassType;this.techniqueConfig.multipassTerrainEnabled=c.multipassTerrainEnabled;this.techniqueConfig.cullAboveGround=c.cullAboveGround;return this.techniqueConfig};b.getPassParameters=function(){return this.parameters};
b.intersect=function(a,c,r,k,B,C,D){if(this.parameters.screenSizeEnabled){const t=a.vertexAttributes.get(d.VertexAttribute.OFFSET);A.intersectTriangleGeometry(a,c,k,B,C,{applyToVertex:(f,u,M,h)=>{h=l.set(E,t.data[3*h],t.data[3*h+1],t.data[3*h+2]);f=l.set(N,f,u,M);l.scale(h,h,this.parameters.screenSize*k.camera.computeRenderPixelSizeAt(h));l.add(f,f,h);return[f[0],f[1],f[2]]},applyToAabb:f=>{const u=x.center(f,E);return x.scale(f,this.parameters.screenSize*k.camera.computeRenderPixelSizeAt(u))}},D)}else A.intersectTriangleGeometry(a,
c,k,B,C,void 0,D)};b.requiresSlot=function(a,c){if(J.outputFromPass(c)===n.ShaderOutput.Highlight)return a===m.RenderSlot.OPAQUE_MATERIAL;c=m.RenderSlot.OPAQUE_MATERIAL;this.parameters.transparent&&(c=this.parameters.writeDepth?m.RenderSlot.TRANSPARENT_MATERIAL:m.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL);return a===c||a===m.RenderSlot.DRAPED_MATERIAL};b.createGLMaterial=function(a){return a.output===n.ShaderOutput.Color||a.output===n.ShaderOutput.Alpha||a.output===n.ShaderOutput.Highlight?
new O(a):null};b.createBufferWriter=function(){return new P(this.parameters.screenSizeEnabled)};return e}(y.Material),O=function(g){function e(){return g.apply(this,arguments)||this}w._inheritsLoose(e,g);var b=e.prototype;b.updateParameters=function(a){return this.ensureTechnique(q.ShadedColorMaterialTechnique,a)};b.beginSlot=function(a){return this.updateParameters(a)};b.bind=function(a,c){c.bindPass(this._material.getPassParameters(),a)};return e}(I);const L={color:[1,1,1,1],shadingTint:[0,0,0,
.25],shadingDirection:l.normalize(p.create(),[.5,-.5,-.5]),transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:H.CullFaceOptions.None,screenSizeEnabled:!1,screenSize:14,shadingEnabled:!0,...y.DefaultMaterialParameters};let P=function(){function g(b){this.screenSizeEnabled=b;b=G.newLayout().vec3f(d.VertexAttribute.POSITION).vec3f(d.VertexAttribute.NORMAL);this.screenSizeEnabled&&b.vec3f(d.VertexAttribute.OFFSET);this.vertexBufferLayout=b}var e=g.prototype;e.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};
e.elementCount=function(b){return b.indices.get(d.VertexAttribute.POSITION).length};e.write=function(b,a,c,r){z.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,c,r);if(this.screenSizeEnabled)if(a.vertexAttributes.has(d.VertexAttribute.OFFSET)){const k=a.vertexAttributes.get(d.VertexAttribute.OFFSET);a=a.indices.get(d.VertexAttribute.OFFSET);K.assert(3===k.size);if(c=c.getField(d.VertexAttribute.OFFSET,F.BufferViewVec3f))z.writePosition(a,k.data,b.invTranspTransformation,
c,r);else throw Error("unable to acquire view for "+d.VertexAttribute.OFFSET);}else throw Error(`${d.VertexAttribute.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);};return g}();const E=p.create(),N=p.create();v.ShadedColorMaterial=Q;Object.defineProperty(v,"__esModule",{value:!0})});