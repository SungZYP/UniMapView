// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/Collection ../../../core/Error ../../../core/HandleOwner ../../../core/Logger ../../../core/maybe ../../../core/promiseUtils ../../../core/scheduling ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/subclass".split(" "),function(p,u,m,g,y,z,A,B,h,n,C,q,D){const r=e=>Object.freeze({__proto__:null,default:e}),E=B.getLogger("esri.views.3d.analysis.AnalysisViewManager3D");
var l;(function(e){e[e.PENDING=0]="PENDING";e[e.CREATED=1]="CREATED"})(l||(l={}));var k;(function(e){e[e.ADDED=0]="ADDED";e[e.REMOVED=1]="REMOVED"})(k||(k={}));g=function(e){function t(a){a=e.call(this,a)||this;a._allAnalysisViews=new y;a._creatingViewCount=0;a._items=new Map;a._scheduledUpdateHandle=null;a._analysisModules={"area-measurement":{module:null},"direct-line-measurement":{module:null},"line-of-sight":{module:null},slice:{module:null}};return a}u._inheritsLoose(t,e);var f=t.prototype;f.destroy=
function(){this.detach()};f.attach=function(){this.handles.add(this._connectOwner(this.view),"analyses-owner-handles")};f.detach=function(){this.handles.remove("analyses-owner-handles");this._update();this._creatingViewCount=0};f.whenAnalysisView=function(a){const c=this._items.get(a);return h.isNone(c)||c.state.list===k.REMOVED?(a=new z("AnalysisViewManager:no-analysisview-for-analysis","The analysis has not been added to view.analyses",{analysis:a}),Promise.reject(a)):c.createAnalysisViewTask.promise};
f._connectOwner=function(a){return this._connectAnalysesCollection(a.analyses)};f._connectAnalysesCollection=function(a){for(const b of a)this._addAnalysis(b);const c=a.on("after-add",b=>this._addAnalysis(b.item)),d=a.on("after-remove",b=>this._removeAnalysis(b.item));return{remove:()=>{c.remove();d.remove();for(const b of a)this._removeAnalysis(b)}}};f._addAnalysis=function(a){const c=this._items.get(a);if(null==c){const d={state:{view:l.PENDING,list:k.ADDED},analysis:a,view:null,createAnalysisViewTask:null};
this._items.set(a,d);d.createAnalysisViewTask=n.createTask(b=>this._createAnalysisViewPromise(d,b))}else c.state.list=k.ADDED};f._removeAnalysis=function(a){a=this._items.get(a);null==a?E.error("Trying to remove analysis which was not added"):(a.state.list=k.REMOVED,this._scheduleUpdate())};f._scheduleUpdate=function(){h.isSome(this._scheduledUpdateHandle)||(this._scheduledUpdateHandle=C.schedule(()=>this._update()))};f._update=function(){this._scheduledUpdateHandle=h.removeMaybe(this._scheduledUpdateHandle);
this._items.forEach(a=>{if(a.state.list===k.REMOVED)switch(this._items.delete(a.analysis),a.state.view){case l.PENDING:a.createAnalysisViewTask=h.abortMaybe(a.createAnalysisViewTask);break;case l.CREATED:h.isSome(a.view)&&(this._allAnalysisViews.remove(a.view),a.view=h.destroyMaybe(a.view),a.createAnalysisViewTask=null)}})};f._createAnalysisViewPromise=function(){var a=u._asyncToGenerator(function*(c,d){var b=c.analysis;const x=b.type,v=this._analysisModules[x];this._creatingViewCount+=1;if(h.isNone(v.module))try{v.module=
yield this._loadAnalysisModule(x)}catch(w){throw--this._creatingViewCount,w;}if(n.isAborted(d))throw--this._creatingViewCount,n.createAbortError("AnalysisView creation aborted");b=new v.module.default({analysis:b,view:this.view});try{yield b.when()}catch(w){throw--this._creatingViewCount,w;}if(n.isAborted(d))throw--this._creatingViewCount,b.destroy(),n.createAbortError("AnalysisView creation aborted");c.view=b;c.state.view=l.CREATED;this._allAnalysisViews.add(b);--this._creatingViewCount;return b});
return function(c,d){return a.apply(this,arguments)}}();f._loadAnalysisModule=function(a){switch(a){case "area-measurement":return new Promise((c,d)=>p(["./AreaMeasurementAnalysisView3D"],b=>c(r(b)),d));case "direct-line-measurement":return new Promise((c,d)=>p(["./DirectLineMeasurementAnalysisView3D"],b=>c(r(b)),d));case "line-of-sight":return new Promise((c,d)=>p(["./LineOfSightAnalysisView3D"],b=>c(r(b)),d));case "slice":return new Promise((c,d)=>p(["./SliceAnalysisView3D"],b=>c(r(b)),d));default:return null}};
u._createClass(t,[{key:"updating",get:function(){return!this.view.ready||0!==this._creatingViewCount||this._allAnalysisViews.some(a=>a.updating)}},{key:"testInfo",get:function(){return{allAnalysisViews:this._allAnalysisViews}}}]);return t}(A.HandleOwnerMixin(g));m.__decorate([q.property()],g.prototype,"updating",null);m.__decorate([q.property({constructOnly:!0})],g.prototype,"view",void 0);m.__decorate([q.property()],g.prototype,"_allAnalysisViews",void 0);m.__decorate([q.property()],g.prototype,
"_creatingViewCount",void 0);return g=m.__decorate([D.subclass("esri.views.3d.analysis.AnalysisViewManager3D")],g)});