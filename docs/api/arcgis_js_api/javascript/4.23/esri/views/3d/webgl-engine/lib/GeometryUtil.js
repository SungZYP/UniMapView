// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../../../chunks/vec3 ../../../../chunks/vec3f32 ../../../../chunks/vec3f64 ../../../../geometry/support/plane ../../../../geometry/support/ray ./basicInterfaces ./BufferVectorMath ./Geometry ./geometryDataUtils ./Util ./VertexAttribute".split(" "),function(n,t,ca,S,da,T,ea,G,fa,Q,h){const N=ea.Vec3Compact;var U;(function(z){const D=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],H=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],J=[0,0,1,0,
1,1,0,1],b=new Uint16Array([0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5]),c=new Uint16Array(36);for(var a=0;6>a;a++)for(let e=0;6>e;e++)c[6*a+e]=a;const d=new Uint16Array(36);for(a=0;6>a;a++)d[6*a]=0,d[6*a+1]=1,d[6*a+2]=2,d[6*a+3]=2,d[6*a+4]=3,d[6*a+5]=0;z.createGeometry=function(e){Array.isArray(e)||(e=[e,e,e]);const g=Array(24);for(let f=0;8>f;f++)g[3*f]=D[f][0]*e[0],g[3*f+1]=D[f][1]*e[1],g[3*f+2]=D[f][2]*e[2];return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,
data:g,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:H}],[h.VertexAttribute.UV0,{size:2,data:J}]],[[h.VertexAttribute.POSITION,b],[h.VertexAttribute.NORMAL,c],[h.VertexAttribute.UV0,d]])}})(U||(U={}));var V;(function(z){const D=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],H=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],J=new Uint16Array([5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0]),b=new Uint16Array([0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7]);z.createGeometry=
function(c){Array.isArray(c)||(c=[c,c,c]);const a=Array(18);for(let d=0;6>d;d++)a[3*d]=D[d][0]*c[0],a[3*d+1]=D[d][1]*c[1],a[3*d+2]=D[d][2]*c[2];return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:a,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:H}]],[[h.VertexAttribute.POSITION,J],[h.VertexAttribute.NORMAL,b]])}})(V||(V={}));var W;(function(z){const D=t.fromValues(-.5,0,-.5),H=t.fromValues(.5,0,-.5),J=t.fromValues(0,0,.5),b=t.fromValues(0,.5,0),c=t.create(),a=t.create(),d=t.create(),
e=t.create(),g=t.create();n.subtract(c,D,b);n.subtract(a,D,H);n.cross(d,c,a);n.normalize(d,d);n.subtract(c,H,b);n.subtract(a,H,J);n.cross(e,c,a);n.normalize(e,e);n.subtract(c,J,b);n.subtract(a,J,D);n.cross(g,c,a);n.normalize(g,g);const f=[D,H,J,b],k=[0,-1,0,d[0],d[1],d[2],e[0],e[1],e[2],g[0],g[1],g[2]],m=[0,1,2,3,1,0,3,2,1,3,0,2],p=[0,0,0,1,1,1,2,2,2,3,3,3];z.createGeometry=function(q){Array.isArray(q)||(q=[q,q,q]);const r=Array(12);for(let l=0;4>l;l++)r[3*l]=f[l][0]*q[0],r[3*l+1]=f[l][1]*q[1],r[3*
l+2]=f[l][2]*q[2];return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:r,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:k}]],[[h.VertexAttribute.POSITION,new Uint16Array(m)],[h.VertexAttribute.NORMAL,new Uint16Array(p)]])}})(W||(W={}));var X;(function(z){function D(b,c,a,d,e){if(Math.abs(n.dot(c,b))>e)return!1;n.cross(a,b,c);n.normalize(a,a);n.cross(d,a,b);n.normalize(d,d);return!0}function H(b,c,a,d,e,g,f){return D(b,c,e,g,f)||D(b,a,e,g,f)||D(b,d,e,g,f)}z.createBoxGeometry=U.createGeometry;
z.createDiamondGeometry=V.createGeometry;z.createTetrahedronGeometry=W.createGeometry;z.createSphereGeometry=function(b,c,a,d={uv:!0}){var e=-Math.PI,g=2*Math.PI,f=-Math.PI/2,k=Math.PI;c=Math.max(3,Math.floor(c));const m=Math.max(2,Math.floor(a));var p=(c+1)*(m+1);a=new Float32Array(3*p);const q=new Float32Array(3*p);p=new Float32Array(2*p);const r=[];let l=0;for(var w=0;w<=m;w++){var B=[];const v=w/m,C=f+v*k,E=Math.cos(C);for(let u=0;u<=c;u++){const x=u/c;var A=e+x*g;const K=Math.cos(A)*E,F=Math.sin(C);
A=-Math.sin(A)*E;a[3*l]=K*b;a[3*l+1]=F*b;a[3*l+2]=A*b;q[3*l]=K;q[3*l+1]=F;q[3*l+2]=A;p[2*l]=x;p[2*l+1]=v;B.push(l);++l}r.push(B)}b=new Uint32Array(2*c*(m-1)*3);l=0;for(e=0;e<m;e++)for(g=0;g<c;g++)f=r[e][g],k=r[e][g+1],w=r[e+1][g+1],B=r[e+1][g],0===e?(b[l++]=f,b[l++]=w,b[l++]=B):e===m-1?(b[l++]=f,b[l++]=k,b[l++]=w):(b[l++]=f,b[l++]=k,b[l++]=w,b[l++]=w,b[l++]=B,b[l++]=f);c=[[h.VertexAttribute.POSITION,b],[h.VertexAttribute.NORMAL,b]];a=[[h.VertexAttribute.POSITION,{size:3,data:a,exclusive:!0}],[h.VertexAttribute.NORMAL,
{size:3,data:q,exclusive:!0}]];d.uv&&(a.push([h.VertexAttribute.UV0,{size:2,data:p,exclusive:!0}]),c.push([h.VertexAttribute.UV0,b]));d.offset&&(c[0][0]=h.VertexAttribute.OFFSET,a[0][0]=h.VertexAttribute.OFFSET,c.push([h.VertexAttribute.POSITION,new Uint32Array(b.length)]),a.push([h.VertexAttribute.POSITION,{size:3,data:Float64Array.from(d.offset),exclusive:!0}]));return new G.Geometry(a,c)};z.createPolySphereGeometry=function(b,c,a){function d(k,m){k>m&&([k,m]=[m,k]);const p=k.toString()+"."+m.toString();
if(f[p])return f[p];let q=e.length;e.length+=3;N.add(e,3*k,e,3*m,e,q);N.scale(e,q,b/N.length(e,q));q/=3;return f[p]=q}let e;a?(e=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],a=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1])):(a=b*(1+Math.sqrt(5))/2,e=[-b,a,0,b,a,0,-b,-a,0,b,-a,0,0,-b,a,0,b,a,0,-b,-a,0,b,-a,a,0,-b,a,0,b,-a,0,-b,-a,0,b],a=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]));
for(var g=0;g<e.length;g+=3)N.scale(e,g,b/N.length(e,g));let f={};for(g=0;g<c;g++){const k=a.length,m=new Uint32Array(4*k);for(let p=0;p<k;p+=3){const q=a[p],r=a[p+1],l=a[p+2],w=d(q,r),B=d(r,l),A=d(l,q),v=4*p;m[v]=q;m[v+1]=w;m[v+2]=A;m[v+3]=r;m[v+4]=B;m[v+5]=w;m[v+6]=l;m[v+7]=A;m[v+8]=B;m[v+9]=w;m[v+10]=B;m[v+11]=A}a=m;f={}}c=new Float32Array(e);for(g=0;g<c.length;g+=3)N.normalize(c,g);a=[[h.VertexAttribute.POSITION,a],[h.VertexAttribute.NORMAL,a]];c=[[h.VertexAttribute.POSITION,{size:3,data:new Float32Array(e),
exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:c,exclusive:!0}]];return new G.Geometry(c,a)};z.createPointGeometry=function(b,c,a,d,e,g,f){c=c?[c[0],c[1],c[2]]:[0,0,0];b=b?[b[0],b[1],b[2]]:[0,0,1];g=g||[0,0];a=[[h.VertexAttribute.POSITION,{size:3,data:c,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:b,exclusive:!0}],[h.VertexAttribute.UV0,{size:g.length,data:g}],[h.VertexAttribute.COLOR,{size:4,data:a?[255*a[0],255*a[1],255*a[2],3<a.length?255*a[3]:255]:[255,255,255,255],exclusive:!0}],
[h.VertexAttribute.SIZE,{size:2,data:null!=d&&2===d.length?d:[1,1]}]];null!=e&&(e=new Float32Array([e[0],e[1],e[2],e[3]]),a.push([h.VertexAttribute.AUXPOS1,{size:4,data:e}]));null!=f&&(f=new Float32Array([f[0],f[1],f[2],f[3]]),a.push([h.VertexAttribute.AUXPOS2,{size:4,data:f}]));return new G.Geometry(a,null,T.PrimitiveType.Point)};z.updatePointGeometry=function(b,c,a,d,e,g,f,k){if(null!=b){const {data:m}=k.getMutableAttribute(h.VertexAttribute.NORMAL);m[0]=b[0];m[1]=b[1];m[2]=b[2]}null!=c&&({data:b}=
k.getMutableAttribute(h.VertexAttribute.POSITION),b[0]=c[0],b[1]=c[1],b[2]=c[2]);null!=a&&({data:c}=k.getMutableAttribute(h.VertexAttribute.COLOR),c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3]);null!=d&&({data:a}=k.getMutableAttribute(h.VertexAttribute.SIZE),a[0]=d[0],a[1]=d[1]);null!=e&&({data:d}=k.getMutableAttribute(h.VertexAttribute.AUXPOS1),d[0]=e[0],d[1]=e[1],d[2]=e[2],d[3]=e[3]);null!=g&&({data:e}=k.getMutableAttribute(h.VertexAttribute.UV0),e[0]=g[0],e[1]=g[1]);null!=f&&({data:g}=k.getMutableAttribute(h.VertexAttribute.AUXPOS2),
g[0]=f[0],g[1]=f[1],g[2]=f[2],g[3]=f[3])};z.createPointArrayGeometry=function(b,c){const a=new Float32Array(3*b.length),d=new Float32Array(c?3*b.length:3),e=new Uint32Array(b.length),g=new Uint32Array(b.length);for(let f=0;f<b.length;f++)a[3*f]=b[f][0],a[3*f+1]=b[f][1],a[3*f+2]=b[f][2],c&&(d[3*f]=c[f][0],d[3*f+1]=c[f][1],d[3*f+2]=c[f][2]),e[f]=f,g[f]=0;c||(d[0]=0,d[1]=1,d[2]=0);return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:a,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:d,
exclusive:!0}],[h.VertexAttribute.UV0,{size:2,data:[0,0],exclusive:!0}]],[[h.VertexAttribute.POSITION,e],[h.VertexAttribute.NORMAL,c?e:g],[h.VertexAttribute.UV0,g]],T.PrimitiveType.Point)};z.createTriangleGeometry=function(){const b=new Uint16Array([0,1,2]),c=new Uint16Array([0,0,0]),a=new Uint16Array([0,0,0]);return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:[0,0,0,0,0,100,100,0,0],exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:[0,1,0],exclusive:!0}],[h.VertexAttribute.UV0,{size:2,
data:[0,0],exclusive:!0}]],[[h.VertexAttribute.POSITION,b],[h.VertexAttribute.NORMAL,c],[h.VertexAttribute.UV0,a]])};const J=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];z.createSquareGeometry=function(b=J){const c=Array(12);for(var a=0;4>a;a++)for(let d=0;3>d;d++)c[3*a+d]=b[a][d];b=new Uint32Array([0,1,2,2,3,0]);a=new Uint32Array([0,0,0,0,0,0]);return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:c,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:[0,0,1],exclusive:!0}],[h.VertexAttribute.UV0,
{size:2,data:[0,0,1,0,1,1,0,1],exclusive:!0}],[h.VertexAttribute.COLOR,{size:4,data:[255,255,255,255],exclusive:!0}]],[[h.VertexAttribute.POSITION,b],[h.VertexAttribute.NORMAL,a],[h.VertexAttribute.UV0,b],[h.VertexAttribute.COLOR,a]])};z.createConeGeometry=function(b,c,a,d,e=!0,g=!0){var f=0,k=t.fromValues(0,f,0),m=t.fromValues(0,f+b,0),p=t.fromValues(0,-1,0),q=t.fromValues(0,1,0);d&&(f=b,m=t.fromValues(0,0,0),k=t.fromValues(0,f,0),p=t.fromValues(0,1,0),q=t.fromValues(0,-1,0));k=[m,k];p=[p,q];q=a+
2;m=Math.sqrt(b*b+c*c);if(d)for(d=a-1;0<=d;d--){var r=2*Math.PI/a*d,l=t.fromValues(Math.cos(r)*c,f,Math.sin(r)*c);k.push(l);r=t.fromValues(b*Math.cos(r)/m,-c/m,b*Math.sin(r)/m);p.push(r)}else for(d=0;d<a;d++)r=2*Math.PI/a*d,l=t.fromValues(Math.cos(r)*c,f,Math.sin(r)*c),k.push(l),r=t.fromValues(b*Math.cos(r)/m,c/m,b*Math.sin(r)/m),p.push(r);b=new Uint32Array(6*(a+2));a=new Uint32Array(6*(a+2));f=c=0;if(e){for(e=3;e<k.length;e++)b[c++]=1,b[c++]=e-1,b[c++]=e,a[f++]=0,a[f++]=0,a[f++]=0;b[c++]=k.length-
1;b[c++]=2;b[c++]=1;a[f++]=0;a[f++]=0;a[f++]=0}if(g){for(g=3;g<k.length;g++)b[c++]=g,b[c++]=g-1,b[c++]=0,a[f++]=g,a[f++]=g-1,a[f++]=1;b[c++]=0;b[c++]=2;b[c++]=k.length-1;a[f++]=1;a[f++]=2;a[f++]=p.length-1}g=new Float32Array(3*q);for(e=0;e<q;e++)g[3*e]=k[e][0],g[3*e+1]=k[e][1],g[3*e+2]=k[e][2];k=new Float32Array(3*q);for(e=0;e<q;e++)k[3*e]=p[e][0],k[3*e+1]=p[e][1],k[3*e+2]=p[e][2];return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:g,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:k,
exclusive:!0}]],[[h.VertexAttribute.POSITION,b],[h.VertexAttribute.NORMAL,a]])};z.createCylinderGeometry=function(b,c,a,d,e,g){d=d?t.clone(d):t.fromValues(1,0,0);e=e?t.clone(e):t.fromValues(0,0,0);g=null==g?!0:g;var f=t.create();n.normalize(f,d);const k=t.create();n.scale(k,f,Math.abs(b));const m=t.create();n.scale(m,k,-.5);n.add(m,m,e);const p=t.fromValues(0,1,0);.2>Math.abs(1-n.dot(f,p))&&n.set(p,0,0,1);const q=t.create();n.cross(q,f,p);n.normalize(q,q);n.cross(p,q,f);b=2*a+(g?2:0);e=a+(g?2:0);
d=new Float32Array(3*b);const r=new Float32Array(3*e),l=new Float32Array(2*b),w=new Uint32Array(3*a*(g?4:2)),B=new Uint32Array(3*a*(g?4:2));g&&(d[3*(b-2)]=m[0],d[3*(b-2)+1]=m[1],d[3*(b-2)+2]=m[2],l[2*(b-2)]=0,l[2*(b-2)+1]=0,d[3*(b-1)]=d[3*(b-2)]+k[0],d[3*(b-1)+1]=d[3*(b-2)+1]+k[1],d[3*(b-1)+2]=d[3*(b-2)+2]+k[2],l[2*(b-1)]=1,l[2*(b-1)+1]=1,r[3*(e-2)]=-f[0],r[3*(e-2)+1]=-f[1],r[3*(e-2)+2]=-f[2],r[3*(e-1)]=f[0],r[3*(e-1)+1]=f[1],r[3*(e-1)+2]=f[2]);f=function(u,x,K){w[u]=x;B[u]=K};let A=0;const v=t.create(),
C=t.create();for(let u=0;u<a;u++){var E=2*Math.PI/a*u;n.scale(v,p,Math.sin(E));n.scale(C,q,Math.cos(E));n.add(v,v,C);r[3*u]=v[0];r[3*u+1]=v[1];r[3*u+2]=v[2];n.scale(v,v,c);n.add(v,v,m);d[3*u]=v[0];d[3*u+1]=v[1];d[3*u+2]=v[2];l[2*u]=u/a;l[2*u+1]=0;d[3*(u+a)]=d[3*u]+k[0];d[3*(u+a)+1]=d[3*u+1]+k[1];d[3*(u+a)+2]=d[3*u+2]+k[2];l[2*(u+a)]=u/a;l[2*u+1]=1;E=(u+1)%a;f(A++,u,u);f(A++,u+a,u);f(A++,E,E);f(A++,E,E);f(A++,u+a,u);f(A++,E+a,E)}if(g){for(c=0;c<a;c++)g=(c+1)%a,f(A++,b-2,e-2),f(A++,c,e-2),f(A++,g,e-
2);for(c=0;c<a;c++)g=(c+1)%a,f(A++,c+a,e-1),f(A++,b-1,e-1),f(A++,g+a,e-1)}return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:d,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:r,exclusive:!0}],[h.VertexAttribute.UV0,{size:2,data:l,exclusive:!0}]],[[h.VertexAttribute.POSITION,w],[h.VertexAttribute.NORMAL,B],[h.VertexAttribute.UV0,w]])};z.createTubeGeometry=function(b,c,a,d,e){a=a||10;d=null!=d?d:!0;Q.assert(1<b.length);const g=[],f=[];for(let k=0;k<a;k++){g.push([0,-k-1,-((k+1)%a)-
1]);const m=k/a*2*Math.PI;f.push([Math.cos(m)*c,Math.sin(m)*c])}return z.createPathExtrusionGeometry(f,b,[[0,0,0]],g,d,e)};z.createPathExtrusionGeometry=function(b,c,a,d,e,g=t.fromValues(0,0,0)){var f=b.length;const k=new Float32Array(c.length*f*3+(6*a.length||0)),m=new Float32Array(c.length*f*3+(a?6:0));var p=(c.length-1)*f*6+6*d.length;const q=new Uint32Array(p);p=new Uint32Array(p);let r=0;var l=0;let w=0,B=0;const A=t.create(),v=t.create(),C=t.create(),E=t.create(),u=t.create(),x=t.create(),K=
t.create(),F=ca.create(),R=t.create(),O=t.create(),Z=t.create(),Y=t.create(),ha=t.create(),aa=S.create();n.set(R,0,1,0);n.subtract(v,c[1],c[0]);n.normalize(v,v);e?(n.add(F,c[0],g),n.normalize(C,F)):n.set(C,0,0,1);H(v,C,R,R,u,C,.99619469809);n.copy(E,C);n.copy(Y,u);for(var y=0;y<a.length;y++)n.scale(x,u,a[y][0]),n.scale(F,C,a[y][2]),n.add(x,x,F),n.add(x,x,c[0]),k[r++]=x[0],k[r++]=x[1],k[r++]=x[2];m[l++]=-v[0];m[l++]=-v[1];m[l++]=-v[2];for(y=0;y<d.length;y++)q[w++]=0<d[y][0]?d[y][0]:-d[y][0]-1+a.length,
q[w++]=0<d[y][1]?d[y][1]:-d[y][1]-1+a.length,q[w++]=0<d[y][2]?d[y][2]:-d[y][2]-1+a.length,p[B++]=0,p[B++]=0,p[B++]=0;y=a.length;const ia=a.length-1;for(let I=0;I<c.length;I++){let ba=!1;0<I&&(n.copy(A,v),I<c.length-1?(n.subtract(v,c[I+1],c[I]),n.normalize(v,v)):ba=!0,n.add(O,A,v),n.normalize(O,O),n.add(Z,c[I-1],E),S.fromPositionAndNormal(c[I],O,aa),S.intersectRay(aa,da.wrap(Z,A),F)?(n.subtract(F,F,c[I]),n.normalize(C,F),n.cross(u,O,C),n.normalize(u,u)):H(O,E,Y,R,u,C,.99619469809),n.copy(E,C),n.copy(Y,
u));e&&(n.add(F,c[I],g),n.normalize(ha,F));for(let L=0;L<f;L++)if(n.scale(x,u,b[L][0]),n.scale(F,C,b[L][1]),n.add(x,x,F),n.normalize(K,x),m[l++]=K[0],m[l++]=K[1],m[l++]=K[2],n.add(x,x,c[I]),k[r++]=x[0],k[r++]=x[1],k[r++]=x[2],!ba){var M=(L+1)%f;q[w++]=y+L;q[w++]=y+f+L;q[w++]=y+M;q[w++]=y+M;q[w++]=y+f+L;q[w++]=y+f+M;for(M=0;6>M;M++)p[B++]=q[w-6+M]-ia}y+=f}b=c[c.length-1];for(c=0;c<a.length;c++)n.scale(x,u,a[c][0]),n.scale(F,C,a[c][1]),n.add(x,x,F),n.add(x,x,b),k[r++]=x[0],k[r++]=x[1],k[r++]=x[2];a=
l/3;m[l++]=v[0];m[l++]=v[1];m[l++]=v[2];f=y-f;for(l=0;l<d.length;l++)q[w++]=0<=d[l][0]?y+d[l][0]:-d[l][0]-1+f,q[w++]=0<=d[l][2]?y+d[l][2]:-d[l][2]-1+f,q[w++]=0<=d[l][1]?y+d[l][1]:-d[l][1]-1+f,p[B++]=a,p[B++]=a,p[B++]=a;return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:k,exclusive:!0}],[h.VertexAttribute.NORMAL,{size:3,data:m,exclusive:!0}]],[[h.VertexAttribute.POSITION,q],[h.VertexAttribute.NORMAL,p]])};z.createPolylineGeometry=function(b,c,a){Q.assert(1<b.length,"createPolylineGeometry(): polyline needs at least 2 points");
Q.assert(3===b[0].length,"createPolylineGeometry(): malformed vertex");Q.assert(null==c||c.length===b.length,"createPolylineGeometry: need same number of points and normals");Q.assert(null==c||3===c[0].length,"createPolylineGeometry(): malformed normal");var d=new Float64Array(3*b.length);const e=new Uint32Array(2*(b.length-1));var g=0,f=0;for(var k=0;k<b.length;k++){for(var m=0;3>m;m++)d[g++]=b[k][m];0<k&&(e[f++]=k-1,e[f++]=k)}g=[];f=[];g.push([h.VertexAttribute.POSITION,e]);f.push([h.VertexAttribute.POSITION,
{size:3,data:d,exclusive:!0}]);if(c){d=new Float32Array(3*c.length);k=0;for(m=0;m<b.length;m++)for(let p=0;3>p;p++)d[k++]=c[m][p];g.push([h.VertexAttribute.NORMAL,e]);f.push([h.VertexAttribute.NORMAL,{size:3,data:d,exclusive:!0}])}a&&(f.push([h.VertexAttribute.COLOR,{size:4,data:a}]),g.push([h.VertexAttribute.COLOR,fa.generateDefaultIndexArray(a.length/4)]));return new G.Geometry(f,g,T.PrimitiveType.Line)};z.createExtrudedTriangle=function(b,c,a,d,e=0){const g=Array(18);b=[[-c,e,d/2],[a,e,d/2],[0,
b+e,d/2],[-c,e,-d/2],[a,e,-d/2],[0,b+e,-d/2]];c=new Uint16Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]);for(a=0;6>a;a++)g[3*a]=b[a][0],g[3*a+1]=b[a][1],g[3*a+2]=b[a][2];return new G.Geometry([[h.VertexAttribute.POSITION,{size:3,data:g,exclusive:!0}]],[[h.VertexAttribute.POSITION,c]])};z.transformInPlace=function(b,c){b=b.getMutableAttribute(h.VertexAttribute.POSITION).data;for(let a=0;a<b.length;a+=3)n.set(P,b[a],b[a+1],b[a+2]),n.transformMat4(P,P,c),b[a]=P[0],b[a+1]=P[1],b[a+2]=P[2]};
z.cgToGIS=function(b,c=b){var a=b.vertexAttributes;b=a.get(h.VertexAttribute.POSITION).data;if(a=a.get(h.VertexAttribute.NORMAL).data){var d=c.getMutableAttribute(h.VertexAttribute.NORMAL).data;for(var e=0;e<a.length;e+=3){const g=a[e+1];d[e+1]=-a[e+2];d[e+2]=g}}if(b)for(a=c.getMutableAttribute(h.VertexAttribute.POSITION).data,d=0;d<b.length;d+=3)e=b[d+1],a[d+1]=-b[d+2],a[d+2]=e;return c};z.makeOrthoBasisDirUp=D;z.makeOrthoBasisDirUpFallback=H})(X||(X={}));const P=t.create();return X});