// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../chunks/TextureOnly.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ./DefaultVertexAttributeLocations ./Program ../../../webgl/enums ../../../webgl/renderState".split(" "),function(m,h,k,n,e,p,f,l,q,r,g,c){f=function(b){function a(){return b.apply(this,arguments)||this}k._inheritsLoose(a,b);var d=
a.prototype;d.initializeProgram=function(t){const u=a.shader.get().build();return new r.Program(t.rctx,u,q.Default3D)};d.initializePipeline=function(){return this.configuration.hasAlpha?c.makePipelineState({blending:c.separateBlendingParams(g.BlendFactor.SRC_ALPHA,g.BlendFactor.ONE,g.BlendFactor.ONE_MINUS_SRC_ALPHA,g.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:c.defaultColorWriteParams}):c.makePipelineState({colorWrite:c.defaultColorWriteParams})};return a}(f.ShaderTechnique);f.shader=new p.ReloadableShaderModule(e.TextureOnlyShader,
()=>new Promise((b,a)=>m(["../core/shaderLibrary/util/TextureOnly.glsl"],b,a)));e=function(b){function a(){var d=b.apply(this,arguments)||this;d.hasAlpha=!1;return d}k._inheritsLoose(a,b);return a}(l.ShaderTechniqueConfiguration);n.__decorate([l.parameter()],e.prototype,"hasAlpha",void 0);h.TextureTechnique=f;h.TextureTechniqueConfiguration=e;Object.defineProperty(h,"__esModule",{value:!0})});