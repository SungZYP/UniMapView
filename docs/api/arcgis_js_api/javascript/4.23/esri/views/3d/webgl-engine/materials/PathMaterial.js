// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/mathUtils ../../../../core/maybe ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/buffer/BufferView ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/shading/Normals.glsl ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/PathGeometry ../lib/RenderPass ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./PathTechnique ./VisualVariableMaterialParameters ./internal/bufferWriterUtils ./internal/MaterialUtil".split(" "),
function(w,x,y,z,F,G,H,k,r,I,J,A,K,t,u,L,h,v,M,B,N){let R=function(l){function g(a){a=l.call(this,a,O)||this;a.supportsEdges=!0;a._vertexAttributeLocations=v.pathVertexAttributeLocations;a.techniqueConfig=new v.PathTechniqueConfiguration;a.vertexBufferLayout=g.getVertexBufferLayout(a.parameters);return a}x._inheritsLoose(g,l);var b=g.prototype;b.getTechniqueConfig=function(a,c){this.techniqueConfig.output=a;this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled;this.techniqueConfig.vvColor=this.parameters.vvColorEnabled;
this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.transparent=this.parameters.transparent;this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees;if(a===k.ShaderOutput.Color||a===k.ShaderOutput.Alpha)this.techniqueConfig.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?r.NormalsDoubleSidedMode.View:this.parameters.doubleSided&&"winding-order"===
this.parameters.doubleSidedType?r.NormalsDoubleSidedMode.WindingOrder:r.NormalsDoubleSidedMode.None,this.techniqueConfig.receiveShadows=this.parameters.receiveShadows,this.techniqueConfig.receiveSSAO=c.ssaoEnabled?this.parameters.receiveSSAO:!1;this.techniqueConfig.transparencyPassType=c.transparencyPassType;this.techniqueConfig.multipassTerrainEnabled=c.multipassTerrainEnabled;this.techniqueConfig.cullAboveGround=c.cullAboveGround;return this.techniqueConfig};b.getPassParameters=function(){return this.parameters};
b.isVisibleInPass=function(a){return a===t.RenderPass.MATERIAL_DEPTH_SHADOWMAP_ALL||a===t.RenderPass.MATERIAL_DEPTH_SHADOWMAP_DEFAULT||a===t.RenderPass.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT?this.parameters.castShadows:!0};b.isVisible=function(){const a=this.parameters;return l.prototype.isVisible.call(this)?0<a.opacity:!1};b.intersect=function(a,c,e,m,f,n,q){if(K.isPathGeometry(a)){c=a.path;e=[this.parameters.size[0],this.parameters.size[1]];if(this.parameters.vvSizeEnabled){var d=this.parameters.vvSizeOffset,
p=this.parameters.vvSizeFactor;const C=this.parameters.vvSizeMinSize,D=this.parameters.vvSizeMaxSize,E=c.sizeAttributeValue;e[0]*=y.clamp(d[0]+E*p[0],C[0],D[0]);e[1]*=y.clamp(d[2]+E*p[2],C[2],D[2])}d=Math.max(e[0],e[1]);a=a.boundingInfo;z.isNone(a)?this._intersectTriangles(c,e,f,n,q):(a=F.fromValues(a.bbMin[0]-d,a.bbMin[1]-d,a.bbMin[2]-d,a.bbMax[0]+d,a.bbMax[1]+d,a.bbMax[2]+d),d=[n[0]-f[0],n[1]-f[1],n[2]-f[2]],p=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]),N.intersectAabbInvDir(a,f,[p/d[0],p/d[1],p/d[2]],
m.tolerance)&&this._intersectTriangles(c,e,f,n,q))}};b._intersectTriangles=function(a,c,e,m,f){a.baked.size&&a.baked.size[0]===c[0]&&a.baked.size[1]===c[1]||a.baked.bake(c);a.baked.intersect(e,m,f)};b.computeAttachmentOrigin=function(a,c){a=a.vertexAttributes;if(!a)return null;a=a.get(h.VertexAttribute.POSITION);return I.computeAttachmentOriginLines(a,null,!1,c)};b.createBufferWriter=function(){return new P(this.vertexBufferLayout)};b.requiresSlot=function(a){return a===(this.parameters.transparent?
u.RenderSlot.TRANSPARENT_MATERIAL:u.RenderSlot.OPAQUE_MATERIAL)||a===u.RenderSlot.DRAPED_MATERIAL};b.createGLMaterial=function(a){return a.output===k.ShaderOutput.Color||a.output===k.ShaderOutput.Alpha||a.output===k.ShaderOutput.Depth||a.output===k.ShaderOutput.Normal||a.output===k.ShaderOutput.Highlight||a.output===k.ShaderOutput.Shadow&&this.parameters.castShadows?new Q(a):null};g.getVertexBufferLayout=function(a){let c=H.newLayout().vec3f(h.VertexAttribute.POSITION).vec4f(h.VertexAttribute.PROFILERIGHT).vec4f(h.VertexAttribute.PROFILEUP).vec4f(h.VertexAttribute.PROFILEVERTEXANDNORMAL);
if(a.vvColorEnabled||a.vvSizeEnabled||a.vvOpacityEnabled)c=c.vec4f(h.VertexAttribute.FEATUREVALUE);return c};return g}(A.Material),Q=function(l){function g(){return l.apply(this,arguments)||this}x._inheritsLoose(g,l);var b=g.prototype;b.updateParameters=function(a){return this.ensureTechnique(v.PathTechnique,a)};b._updateOccludeeState=function(a){a.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:a.hasOccludees})};b._updateShadowState=function(a){(z.isNone(this.technique)||
a.shadowMappingEnabled!==this.technique.configuration.receiveShadows)&&this._material.setParameters({receiveShadows:a.shadowMappingEnabled})};b.beginSlot=function(a){if(this._output===k.ShaderOutput.Color||this._output===k.ShaderOutput.Alpha)this._updateShadowState(a),this._updateOccludeeState(a);return this.updateParameters(a)};b.bind=function(a,c){c.bindPass(this._material.getPassParameters(),a)};return g}(J);const O={size:[1,1,1],ambient:[.2,.2,.2],diffuse:[.8,.8,.8],specular:[0,0,0],opacity:1,
doubleSided:!1,doubleSidedType:"normal",receiveSSAO:!0,receiveShadows:!1,castShadows:!0,slicePlaneEnabled:!1,transparent:!1,sceneHasOcludees:!1,...M.VisualVariableDefaultMaterialParameters,...A.DefaultMaterialParameters};let P=function(){function l(b){this.vertexBufferLayout=b}var g=l.prototype;g.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};g.elementCount=function(b){return b.indices.get(h.VertexAttribute.POSITION).length};g.write=function(b,a,c,e){const m=f=>{if(a.vertexAttributes.has(f)){const n=
a.vertexAttributes.get(f),q=a.indices.get(f);L.assert(4===n.size);const d=c.getField(f,G.BufferViewVec4f);if(d)B.writeBufferVec4(q,n.data,d,e);else throw Error("unable to acquire view for "+f);}};m(h.VertexAttribute.PROFILERIGHT);m(h.VertexAttribute.PROFILEUP);m(h.VertexAttribute.PROFILEVERTEXANDNORMAL);this.vertexBufferLayout.hasField(h.VertexAttribute.FEATUREVALUE)&&m(h.VertexAttribute.FEATUREVALUE);B.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,c,
e)};return l}();w.PathMaterial=R;Object.defineProperty(w,"__esModule",{value:!0})});