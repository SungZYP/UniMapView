// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../intl ../../../../../core/Accessor ../../../../../core/has ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityFormatUtils ../../../../../core/quantityUtils ../../../../../core/reactiveUtils ../../../../../core/unitUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../support/viewUtils ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../webgl-engine/lib/Material ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(l,E,m,Y,J,Z,K,L,f,F,M,B,u,n,aa,ba,N,O,P,G,q,Q,C,v,R,w,x,S,T,U){l.AreaMeasurementVisualization=function(p){function D(a){a=p.call(this,a)||this;a._handles=new K;a._params={...V};a._path=null;a._intersectedPath=null;a._perimeter=null;a._intersectedPerimeter=null;a._projectionLines=null;a._measurementArea=null;a._areaLabel=null;a._pathLengthLabel=null;a._cursorSegmentLengthLabel=null;a._perimeterLengthLabel=null;a._pathSegments=[];a._perimeterSegments=[];a._cursorSegment=null;a._origin=q.create();
a._originTransform=P.create();a._cursorPositionRenderSpace=q.create();a.messages=null;a.viewData=W;a.areaLabel=null;a.perimeterLengthLabel=null;a.loadingMessages=!0;return a}E._inheritsLoose(D,p);var g=D.prototype;g.initialize=function(){var a=this;const b=this.view,c=this._params;this._path=new v.LineVisualElement({view:b,attached:!0,width:c.pathLineWidth,color:c.pathLineColor,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPath=new v.LineVisualElement({view:b,
attached:!0,width:c.pathLineWidth,color:c.intersectingLineColor,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent});this._perimeter=new v.LineVisualElement({view:b,attached:!0,width:c.perimeterLineWidth,color:c.perimeterLineColor,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPerimeter=new v.LineVisualElement({view:b,attached:!0,width:c.perimeterLineWidth,color:c.intersectingLineColor,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent});
this._projectionLines=new v.LineVisualElement({view:b,attached:!0,width:c.projectionLineWidth,color:c.projectionLineColor,stipplePattern:S.createStipplePatternSimple(c.projectionLineStippleSize),polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent});this._measurementArea=new R.MeasurementAreaVisualElement({view:b,attached:!0,color1:c.areaColor1,color2:c.areaColor2});this._areaLabel=new C.LabelVisualElement({view:this.view,attached:!0,fontSize:r.Large});this._pathLengthLabel=
new C.LabelVisualElement({view:b,attached:!0,fontSize:r.Small});this._cursorSegmentLengthLabel=new C.LabelVisualElement({view:b,attached:!0,fontSize:r.Small});this._perimeterLengthLabel=new C.LabelVisualElement({view:b,attached:!0,fontSize:r.Small});const d=this.analysisViewData;this._handles.add([B.watch(()=>[d.mode,this.visible,d.unit,d.measurementData,d.cursorPoint],()=>this._update(),B.syncAndInitial),B.watch(()=>{var e;return null==(e=b.state)?void 0:e.camera},()=>this._updateLabels(),B.syncAndInitial),
T.onLocaleChange(E._asyncToGenerator(function*(){return a._updateMessageBundle()}))]);this._updateMessageBundle()};g.destroy=function(){this._measurementArea=f.destroyMaybe(this._measurementArea);this._path=f.destroyMaybe(this._path);this._intersectedPath=f.destroyMaybe(this._intersectedPath);this._perimeter=f.destroyMaybe(this._perimeter);this._intersectedPerimeter=f.destroyMaybe(this._intersectedPerimeter);this._areaLabel=f.destroyMaybe(this._areaLabel);this._pathLengthLabel=f.destroyMaybe(this._pathLengthLabel);
this._cursorSegmentLengthLabel=f.destroyMaybe(this._cursorSegmentLengthLabel);this._perimeterLengthLabel=f.destroyMaybe(this._perimeterLengthLabel);this._projectionLines=f.destroyMaybe(this._projectionLines);this._handles=f.destroyMaybe(this._handles);this.set("view",null)};g._update=function(){if(!this.destroyed&&this.view.ready&&this.view.renderCoordsHelper){var a=this.analysisViewData,b=a.measurementData;f.isNone(b)||(this._updateViewData(b,a.path,a.cursorPoint),this._updateOrigin(),this._updatePathSegments(),
this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}};g._updateViewData=function(a,b,c){const d=b.isValidPolygon,e="geodesic"===a.actualMeasurementMode;var k=e?a.geodesicArea:a.area;let h=1;k&&(k=this._toPreferredAreaUnit(k,this.analysisViewData.unit),h=L.nextHighestPowerOfTen(Math.sqrt(k.value)/Math.sqrt(300)),h*=Math.sqrt(u.convertUnit(1,k.unit,"square-meters")),h/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:d,
path:b,pathVersion:b.version,cursorPoint:c,measurementData:a,mode:a.actualMeasurementMode,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:e?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:e?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:e?a.geodesicAreaCentroidRenderCoords:
a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:d?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:h})};g._updateOrigin=function(){Q.midpoint(this.viewData.positionsRenderCoords,this._origin);O.fromTranslation(this._originTransform,this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform};g._createSegments=function(a){const b=this.viewData,c=b.path,d=this.view.renderCoordsHelper.spatialReference,e=b.mode,k=[],
h=[],t=[],y=b.validMeasurement?c.numVertices:c.numVertices-1;for(let z=0;z<y;++z){const H=b[a][z],I=b[a][(z+1)%c.numVertices];let A=null;switch(e){case "euclidean":A=new w.EuclideanSegment(H,I);break;case "geodesic":A=new w.GeodesicSegment(H,I,d)}b.intersectingSegments.has(z)?t.push(A):h.push(A);k.push(A)}return{all:k,nonIntersecting:h,intersecting:t}};g._updatePathSegments=function(){const a=this.visible;var b=this.viewData;const c=this._createSegments("positionsRenderCoords");var d=b.path,e=!d.isValidPolygon;
const k=b.cursorPoint,h=this.view.renderCoordsHelper,t=h.spatialReference,y=b.mode;this._cursorSegment=null;if(0<d.numVertices&&e&&f.isSome(k)&&h.toRenderCoords(k,this._cursorPositionRenderSpace)){b=b.positionsRenderCoords[d.numVertices-1];d=this._cursorPositionRenderSpace;e=null;switch(y){case "euclidean":e=new w.EuclideanSegment(b,d);break;case "geodesic":e=new w.GeodesicSegment(b,d,t)}c.nonIntersecting.push(e);this._cursorSegment=e}this._path.setGeometryFromSegments(c.nonIntersecting,this._origin);
this._path.visible=a;this._intersectedPath.setGeometryFromSegments(c.intersecting,this._origin);this._intersectedPath.visible=a;this._pathSegments=c.all};g._updatePerimeterSegments=function(){const a=this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPerimeter.visible=
a;this._perimeterSegments=b.all};g._updateArea=function(){const a=this.viewData;switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}};g._updateAreaEuclidean=function(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=[a.checkerSize,a.checkerSize],
this._measurementArea.visible=b):this._measurementArea.visible=!1};g._updateAreaGeodesic=function(){this._measurementArea.visible=!1};g._updateProjectionLines=function(){const a=this.viewData,b=this.visible,c=a.path;var d=a.mode;if(0<c.numVertices&&a.validMeasurement&&"euclidean"===d){d=[];for(let e=0;e<c.numVertices;++e){const k=q.create();G.subtract(k,a.positionsRenderCoords[e],this._origin);const h=q.create();G.subtract(h,a.positionsFittedRenderCoords[e],this._origin);d.push([k,h])}this._projectionLines.geometry=
d;this._projectionLines.visible=b}else this._projectionLines.geometry=null,this._projectionLines.visible=!1};g._updateLabels=function(){if(!this.destroyed){var a=this.viewData,b=a.path;if(b){var c=a.measurementData,d=a.mode,e=!b.isValidPolygon,k=this.visible,h=this._formatAreaLabel(this.messages,"geodesic"===d?c.geodesicArea:c.area,this.analysisViewData.unit);f.isSome(h)?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=h,this._areaLabel.visible=a.validMeasurement&&
0===a.intersectingSegments.size&&k):this._areaLabel.visible=!1;this._set("areaLabel",f.unwrap(h));h=this._formatLengthLabel(this.messages,"geodesic"===d?c.geodesicPathLength:c.pathLength,this.analysisViewData.unit);if(f.isSome(h)&&0<=a.pathLengthLabelSegmentIndex&&a.pathLengthLabelSegmentIndex<this._pathSegments.length){const t=this._pathSegments[a.pathLengthLabelSegmentIndex],y=f.isSome(this._cursorSegment)?this._cursorSegment:X;this._pathLengthLabel.distance=this._params.labelDistance;this._pathLengthLabel.geometry=
{type:"corner",left:t,right:y};this._pathLengthLabel.text=h;this._pathLengthLabel.visible=e&&0<b.numVertices&&k}else this._pathLengthLabel.visible=!1;b="geodesic"===d?a.measurementData.geodesicCursorSegmentLength:a.measurementData.cursorSegmentLength;f.isSome(b)?(d=this._formatLengthLabel(this.messages,b,this.analysisViewData.unit),this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=f.isSome(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,
sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=f.unwrap(d),this._cursorSegmentLengthLabel.visible=e&&0!==b.value&&k):this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1);this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);e="geodesic"===a.mode;c=this._formatLengthLabel(this.messages,e?c.geodesicPathLength:c.perimeterLength,
this.analysisViewData.unit);this._set("perimeterLengthLabel",f.unwrap(c));if(a.validMeasurement&&0===a.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance;this._perimeterLengthLabel.anchor="top";this._perimeterLengthLabel.text=f.unwrap(c);b=this._perimeterLengthLabel.visible=!0;for(c=0;c<a.path.numVertices;++c)if(b=(a.perimeterLengthLabelSegmentIndex+c)%a.path.numVertices,d=e?this._pathSegments[b]:this._perimeterSegments[b],b=!0,this._perimeterLengthLabel.geometry=
{type:"segment",segment:d,sampleLocation:"center"},this._perimeterLengthLabel.overlaps(this._areaLabel))b=!1;else break;this._perimeterLengthLabel.visible=b&&k}else this._perimeterLengthLabel.visible=!1}}};g._toPreferredAreaUnit=function(a,b){return M.toUnit(a,this._preferredAreaUnit(a,b))};g._preferredAreaUnit=function(a,b){switch(b){case "metric":return u.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return u.preferredImperialAreaUnit(a.value,a.unit);default:return b}};g._preferredLengthUnit=
function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return u.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return u.preferredImperialLengthUnit(a.value,a.unit);default:return b}};g._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";
case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};g._formatAreaLabel=function(a,b,c){return a&&b&&F.formatDecimal(a,b,this._preferredAreaUnit(b,c))};g._formatLengthLabel=function(a,b,c){return a&&b&&F.formatDecimal(a,b,this._preferredLengthUnit(b,
c))};g._updateMessageBundle=function(){this.loadingMessages=!0;U.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})};E._createClass(D,[{key:"visible",get:function(){return this.analysisViewData.visible}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}}]);return D}(J);m.__decorate([n.property()],
l.AreaMeasurementVisualization.prototype,"view",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"messages",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"analysis",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"viewData",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"analysisViewData",void 0);m.__decorate([n.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"areaLabel",
void 0);m.__decorate([n.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"perimeterLengthLabel",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"loadingMessages",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"visible",null);l.AreaMeasurementVisualization=m.__decorate([N.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],l.AreaMeasurementVisualization);var r;(function(p){p[p.Small=12]=
"Small";p[p.Large=16]="Large"})(r||(r={}));const V={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,
projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},W={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},
X=new w.EuclideanSegment(q.create(),q.create());Object.defineProperty(l,"__esModule",{value:!0})});