// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/mathUtils ../../../../../core/screenUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/axisAngle ../../../../../geometry/support/plane ../../../camera/constraintUtils ../../../camera/constraintUtils/common ../../../input/util ../InteractiveController ../momentum/PanPlanarMomentumController ../momentum/RotationMomentumController ../momentum/ZoomPlanarMomentumController ../../utils/navigationUtils ../../../webgl-engine/lib/Camera ../../../../navigation/PanPlanarMomentumEstimator ../../../../navigation/RotationMomentumEstimator ../../../../navigation/ZoomMomentumEstimator".split(" "),
function(p,u,v,A,q,B,N,O,P,C,f,h,D,k,m,n,w,E,F,G,H,g,I,J,K,L){const x=h.fromValues(0,0,1);var M=16/180*Math.PI;p.PinchAndPanController=function(y){function r(a){a=y.call(this,a)||this;a.view=null;a.rotationValueSmooth=new w.ExponentialFalloff(.05);a.scalingValueSmooth=new w.ExponentialFalloff(.05);a.planeHorizontal=k.create();a.planeVertical=k.create();a.rotationMomentumEstimator=new K.RotationMomentumEstimator;a.panMomentumEstimator=new J.PanPlanarMomentumEstimator(300,12,.9);a.zoomMomentumEstimator=
new L.ZoomMomentumEstimator;a.beginCenter=h.create();a.tmpPoints=[];a.beginCenterScreen=q.createScreenPointArray();a.tmpCentroid3d=h.create();a.tmpCentroid2d=q.createScreenPointArray();a.tmp2d=q.createScreenPointArray();a.constraintOptions={selection:n.ConstraintTypes.ALL,interactionType:n.InteractionType.NONE,interactionFactor:0,interactionStartCamera:new I.default,interactionDirection:null,tiltMode:n.TiltMode.TUMBLE};return a}u._inheritsLoose(r,y);var t=r.prototype;t.begin=function(a){if(this.active){var c=
this.view.navigation.momentumEnabled;this.zoomMomentumEstimator.enabled=c;this.rotationMomentumEstimator.enabled=c;this.panMomentumEstimator.enabled=c;this.beginRadius=a.radius;this.pointerCount=a.pointers.size;this.beginAngle=a.angle;this.rotationValueSmooth.reset();this.scalingValueSmooth.reset();q.screenPointObjectToArray(a.center,this.beginCenterScreen);k.fromNormalAndOffset(x,0,this.planeHorizontal);c=h.create();this.intersectionHelper.intersectScreenFreePointFallback(this.beginCenterScreen,
c);var b=h.create();f.negate(b,this.startCamera.viewForward);var d=h.create();f.copy(d,x);var e=f.dot(b,d);this.panMode=A.asinClamped(0>e?-e:e)>=M?g.NavigationMode.Horizontal:g.NavigationMode.Vertical;k.setOffsetFromPoint(this.planeHorizontal,this.planeHorizontal,c);this.startCamera.aboveGround||k.negate(this.planeHorizontal,this.planeHorizontal);if(this.panMode===g.NavigationMode.Vertical){f.scale(d,d,e);f.subtract(this.planeVertical,b,d);f.normalize(this.planeVertical,this.planeVertical);k.setOffsetFromPoint(this.planeVertical,
this.planeVertical,c);b=h.create();d=h.create();e=h.create();f.subtract(b,c,this.currentCamera.eye);f.normalize(b,b);c=5*Math.max(Math.abs(this.view.camera.position.z),50);const l=this.view._stage.renderView.getMinimalDepthForArea(this.view.getVoxelWasmPerSceneView(),this.beginCenterScreen[0],this.beginCenterScreen[1],this.view.state.camera,80);f.copy(e,f.add(d,this.currentCamera.eye,f.scale(d,b,l?Math.min(l,c):c)));this.planeVertical[3]=-f.dot(this.planeVertical,e);this.computePlanePoints(a.pointers,
this.planeVertical,this.startCamera,this.tmpPoints)}else this.computePlanePoints(a.pointers,this.planeHorizontal,this.startCamera,this.tmpPoints);g.centroid(this.tmpPoints,this.beginCenter);this.constraintOptions.interactionStartCamera.copyFrom(this.startCamera)}};t.update=function(a){if(this.active){this.currentCamera.copyFrom(this.startCamera);var c=1<a.pointers.size,b=this.panMode===g.NavigationMode.Horizontal?this.planeHorizontal:this.planeVertical,d=this.beginCenter;if(c){var e=this.beginRadius/
a.radius;this.scalingValueSmooth.gain=.001875*Math.min(Math.max(a.radius,40),120);this.scalingValueSmooth.update(e);g.applyZoomToPoint(this.currentCamera,d,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance);this.zoomMomentumEstimator.add(this.scalingValueSmooth.value,.001*a.timestamp);this.constraintOptions.interactionType=n.InteractionType.ZOOM;this.constraintOptions.interactionFactor=m.pixelDistanceToInteractionFactor(Math.abs(a.radius-this.beginRadius));m.applyAll(this.view,
this.currentCamera,this.constraintOptions)}this.computePlanePoints(a.pointers,b,this.currentCamera,this.tmpPoints);g.centroid(this.tmpPoints,this.tmpCentroid3d);q.screenPointObjectToArray(a.center,this.tmpCentroid2d);g.applyPanPlanar(this.currentCamera,d,this.tmpCentroid3d);this.panMomentumEstimator.add(this.tmpCentroid2d,this.tmpCentroid3d,.001*a.timestamp);this.constraintOptions.interactionType=n.InteractionType.PAN;this.constraintOptions.interactionFactor=m.pixelDistanceToInteractionFactor(this.beginCenterScreen,
this.tmpCentroid2d);m.applyAll(this.view,this.currentCamera,this.constraintOptions);c&&(c=this.planeHorizontal,b=this.rotationValueSmooth.value,e=g.normalizeRotationDelta(a.angle-b),b+=e,this.rotationValueSmooth.gain=.00125*Math.min(Math.max(a.radius,40),120),this.rotationValueSmooth.update(b),b=this.rotationValueSmooth.value-this.beginAngle,this.rotationMomentumEstimator.add(b,.001*a.timestamp),g.applyRotation(this.currentCamera,d,D.wrapAxisAngle(c,b)),this.constraintOptions.interactionType=n.InteractionType.TUMBLE,
this.constraintOptions.interactionFactor=m.pixelDistanceToInteractionFactor(Math.abs(a.radius*b)),m.applyAll(this.view,this.currentCamera,this.constraintOptions))}};t.end=function(a){a.pointers.size===this.pointerCount&&this.update(a);this.finishController();return(a=this.zoomMomentumEstimator.evaluateMomentum())?new H.ZoomPlanarMomentumController({view:this.view,momentum:a,zoomCenter:this.beginCenter}):(a=this.rotationMomentumEstimator.evaluateMomentum())?new G.RotationMomentumController({view:this.view,
momentum:a,center:this.beginCenter,axis:k.normal(this.planeHorizontal)}):(a=this.panMomentumEstimator.evaluateMomentum())?new F.PanPlanarMomentumController({view:this.view,momentum:a}):null};t.computePlanePoints=function(a,c,b,d){d.length=a.size;const e=this.tmp2d;let l=0;a.forEach(z=>{e[0]=z.x;e[1]=z.y;void 0===d[l]&&(d[l]=h.create());g.intersectPlaneFromScreenPointAtEye(c,b,e,d[l]);l+=1});return d};u._createClass(r,[{key:"intersectionHelper",get:function(){return this.view.sceneIntersectionHelper}}]);
return r}(E.InteractiveController);v.__decorate([B.property({constructOnly:!0})],p.PinchAndPanController.prototype,"view",void 0);p.PinchAndPanController=v.__decorate([C.subclass("esri.views.3d.state.controllers.local.PinchAndPanController")],p.PinchAndPanController);Object.defineProperty(p,"__esModule",{value:!0})});