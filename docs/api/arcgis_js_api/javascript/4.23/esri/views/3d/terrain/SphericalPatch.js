// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/mathUtils ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projection ../../../geometry/projectionEllipsoid ../../../geometry/support/frustum ../../../geometry/support/plane ./interfaces ./PatchGeometryFactory ./Tile".split(" "),function(f,x,u,g,v,n,y,q,z,m,A,r){r=function(k){function t(b,a,d){var c=k.call(this)||this;c.obb=Array(8);c.isWebMercator=!1;for(let e=0;8>e;e++)c.obb[e]=v.create();void 0!==b&&c.init(b,
a,d);return c}x._inheritsLoose(t,k);var l=t.prototype;l.init=function(b,a,d){k.prototype.init.call(this,b,a,d);this.isWebMercator=d.tilingScheme.spatialReference.isWebMercator;a=this.ellipsoid.radius;d=this.extentInRadians[0];const c=this.extentInRadians[1],e=this.extentInRadians[2],h=this.extentInRadians[3];b=b[0];const B=u.lerp(c,h,.5),C=u.lerp(d,e,.5);this._edgeLen=(e-d)*Math.cos(0===b?0:Math.min(Math.abs(c),Math.abs(h)))*a;this._edgeLen2=this._edgeLen*this._edgeLen;this._curvatureHeight=a-Math.sqrt(a*
a-this._edgeLen2/4);n.lonLatToSphericalPCPF(this.centerAtSeaLevel,C,B,this.ellipsoid.radius,0);a=v.fromArray(this.centerAtSeaLevel);g.normalize(a,a);this.up=a;this._updateOBB();this.updateRadiusAndCenter()};l.updateRadiusAndCenter=function(){if(0===this.lij[0])g.set(this._center[f.CenterPosition.MIDDLE],0,0,0),g.set(this._center[f.CenterPosition.TOP],0,0,0),g.set(this._center[f.CenterPosition.BOTTOM],0,0,0),this.ellipsoid||(this.ellipsoid=y.getReferenceEllipsoid(this.surface.spatialReference)),this._center[f.CenterPosition.MIDDLE][3]=
this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const b=Math.max(g.squaredDistance(this._center[f.CenterPosition.MIDDLE],this.obb[0]),g.squaredDistance(this._center[f.CenterPosition.MIDDLE],this.obb[1]));this._center[f.CenterPosition.MIDDLE][3]=Math.sqrt(b)}};l._isVisible=function(b){if(!q.intersectsSphere(b,this._center[f.CenterPosition.MIDDLE]))return!1;if(10>this.lij[0])return!0;const a=this.obb;for(let e=0;e<q.NumPlanes.NUM;e++){var d=e===q.PlaneIndex.NEAR,c=b[e];d&&(p[0]=
c[0],p[1]=c[1],p[2]=c[2],p[3]=c[3]-this.surface.view.state.camera.near);d=d?p:c;for(c=0;8>c;c++){const h=a[c];if(0>d[0]*h[0]+d[1]*h[1]+d[2]*h[2]+d[3])break}if(8===c)return!1}return!0};l.computeElevationBounds=function(){k.prototype.computeElevationBounds.call(this);this._updateOBB()};l.createGeometry=function(b,a){const d=this._getPatchType(this.lij[1],this.lij[0]);A.createSphericalGlobePatch(b,this.extent,a,this.renderData,this.extentInRadians,this.isWebMercator,this.ellipsoid,d);this.setMemoryDirty()};
l._updateOBB=function(){const b=this.extentInRadians,a=this.obb;for(let d=0;2>d;d++){const c=this.elevationBounds[d];let e=4*d;n.lonLatToSphericalPCPF(a[e++],b[0],b[1],this.ellipsoid.radius,c);n.lonLatToSphericalPCPF(a[e++],b[0],b[3],this.ellipsoid.radius,c);n.lonLatToSphericalPCPF(a[e++],b[2],b[3],this.ellipsoid.radius,c);n.lonLatToSphericalPCPF(a[e++],b[2],b[1],this.ellipsoid.radius,c)}if(this.isWebMercator)switch(this._getPatchType(this.lij[1],this.lij[0])){case m.PatchType.HAS_NORTH_POLE:g.set(a[1],
0,0,this.ellipsoid.radius);g.set(a[2],0,0,this.ellipsoid.radius);g.set(a[5],0,0,this.ellipsoid.radius);g.set(a[6],0,0,this.ellipsoid.radius);break;case m.PatchType.HAS_SOUTH_POLE:g.set(a[0],0,0,-this.ellipsoid.radius),g.set(a[3],0,0,-this.ellipsoid.radius),g.set(a[4],0,0,-this.ellipsoid.radius),g.set(a[7],0,0,-this.ellipsoid.radius)}};l._getPatchType=function(b,a){return b===(1<<a)-1?0===b?m.PatchType.HAS_BOTH_POLES:m.PatchType.HAS_SOUTH_POLE:0===b?m.PatchType.HAS_NORTH_POLE:m.PatchType.REGULAR};
l.intersectsRay=function(b,a,d,c,e){c=this._center[f.CenterPosition.MIDDLE];d=c[3]+d+.2*this.ellipsoid.radius*Math.abs(e*(this.extentInRadians[3]-this.extentInRadians[1]));var h=c[0]-b[0];e=c[1]-b[1];b=c[2]-b[2];c=(h*a[0]+e*a[1]+b*a[2])/(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);h=a[0]*c-h;e=a[1]*c-e;a=a[2]*c-b;return h*h+e*e+a*a<d*d};l.getDefaultVerticesPerRowOnLevel=function(){return this.level<w.length?w[this.level]+1:2};return t}(r.Tile);const w=[128,64,32,16,16,8,8,4],p=z.create();f.CenterPosition=void 0;
(function(k){k[k.TOP=0]="TOP";k[k.MIDDLE=1]="MIDDLE";k[k.BOTTOM=2]="BOTTOM"})(f.CenterPosition||(f.CenterPosition={}));f.SphericalPatch=r;Object.defineProperty(f,"__esModule",{value:!0})});