// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderLibrary/ShaderOutputOptions ../lib/basicInterfaces ../lib/GLMaterial ../lib/GLMaterials ../lib/Material ../lib/OrderIndependentTransparency ../lib/RenderSlot ./internal/DefaultBufferWriter ./internal/MaterialUtil ../shaders/ColorMaterialTechnique".split(" "),function(h,k,d,p,q,r,l,t,f,m,u,n){let B=function(g){function e(a){a=g.call(this,a,v)||this;a.supportsEdges=!0;a.techniqueConfig=new n.ColorMaterialTechniqueConfiguration;
return a}k._inheritsLoose(e,g);var b=e.prototype;b.getTechniqueConfig=function(a,c){this.techniqueConfig.output=a;this.techniqueConfig.cullFace=this.parameters.cullFace;this.techniqueConfig.vertexColors=this.parameters.vertexColors;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.transparent=this.parameters.transparent;this.techniqueConfig.polygonOffset=this.parameters.polygonOffset;this.techniqueConfig.writeDepth=this.parameters.writeDepth;this.techniqueConfig.sceneHasOcludees=
this.parameters.sceneHasOcludees;this.techniqueConfig.transparencyPassType=c.transparencyPassType;this.techniqueConfig.enableOffset=c.camera.relativeElevation<t.OITPolygonOffsetLimit;this.techniqueConfig.multipassTerrainEnabled=c.multipassTerrainEnabled;this.techniqueConfig.cullAboveGround=c.cullAboveGround;return this.techniqueConfig};b.getPassParameters=function(){return this.parameters};b.intersect=function(a,c,C,w,x,y,z){u.intersectTriangleGeometry(a,c,w,x,y,void 0,z)};b.requiresSlot=function(a,
c){return a===f.RenderSlot.DRAPED_MATERIAL?!0:r.outputFromPass(c)===d.ShaderOutput.Highlight?a===f.RenderSlot.OPAQUE_MATERIAL:a===(this.parameters.transparent?this.parameters.writeDepth?f.RenderSlot.TRANSPARENT_MATERIAL:f.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:f.RenderSlot.OPAQUE_MATERIAL)};b.createGLMaterial=function(a){return a.output===d.ShaderOutput.Color||a.output===d.ShaderOutput.Alpha||a.output===d.ShaderOutput.Highlight||a.output===d.ShaderOutput.Depth&&this.parameters.writeLinearDepth?
new A(a):null};b.createBufferWriter=function(){return new m.DefaultBufferWriter(m.PositionColorLayout)};return e}(l.Material),A=function(g){function e(){return g.apply(this,arguments)||this}k._inheritsLoose(e,g);var b=e.prototype;b.updateParameters=function(a){return this.ensureTechnique(n.ColorMaterialTechnique,a)};b._updateOccludeeState=function(a){a.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:a.hasOccludees})};b.beginSlot=function(a){this._output!==
d.ShaderOutput.Color&&this._output!==d.ShaderOutput.Alpha||this._updateOccludeeState(a);return this.updateParameters(a)};b.bind=function(a,c){c.bindPass(this._material.getPassParameters(),a)};return e}(q);const v={color:[1,1,1,1],transparent:!1,writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:p.CullFaceOptions.None,sceneHasOcludees:!1,...l.DefaultMaterialParameters};h.ColorMaterial=B;Object.defineProperty(h,"__esModule",{value:!0})});