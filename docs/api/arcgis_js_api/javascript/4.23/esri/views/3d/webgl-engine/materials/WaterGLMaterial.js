// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderLibrary/ShaderOutputOptions ../lib/basicInterfaces ../lib/GLMaterial ./WaterTechnique".split(" "),function(g,l,d,h,e,m){e=function(k){function f(){return k.apply(this,arguments)||this}l._inheritsLoose(f,k);var b=f.prototype;b.updateParameters=function(a){return this.ensureTechnique(m.WaterTechnique,a)};b.setElapsedTimeUniform=function(a){a.setUniform1f("timeElapsed",.001*this._material.animation.time*this._material.parameters.animationSpeed)};
b._updateShadowState=function(a){a.shadowMappingEnabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:a.shadowMappingEnabled})};b._updateSSRState=function(a){a.ssrEnabled!==this._material.parameters.ssrEnabled&&this._material.setParameters({ssrEnabled:a.ssrEnabled})};b.ensureResources=function(a){const c=this._techniqueRep.constructionContext.waterTextureRepository;c.ready||c.updating||c.loadTextures(a);return c.ready?h.ResourceState.LOADED:h.ResourceState.LOADING};
b.beginSlot=function(a){this._output===d.ShaderOutput.Color&&(this._updateShadowState(a),this._updateSSRState(a));return this.updateParameters(a)};b.bind=function(a,c){c.bindPass(this._material.parameters,a);this._output!==d.ShaderOutput.Normal&&this._output!==d.ShaderOutput.Color||this.setElapsedTimeUniform(c.program)};return f}(e);g.WaterGLMaterial=e;Object.defineProperty(g,"__esModule",{value:!0})});