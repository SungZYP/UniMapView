// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../chunks/vec4 ../../../../chunks/vec4f32 ../../../../chunks/vec4f64 ../../support/debugFlags ./DefaultVertexAttributeLocations ./DefaultVertexBufferLayouts ./glUtil3D ../../../../chunks/HighlightComposition.glsl ../shaders/HighlightTechnique ../../../webgl/BufferObject ../../../webgl/enums ../../../webgl/FramebufferObject ../../../webgl/Util ../../../webgl/VertexArrayObject".split(" "),function(y,r,z,u,A,x,B,C,D,
q,n,E,k,v,t,F){return function(){function w(a,f){this._techniqueRep=a;this._rctx=f;this.viewportToRestore=A.create();this.defaultOptions={color:u.fromValues(1,0,1,1),haloColor:u.fromValues(1,0,1,1),haloOpacity:1,fillOpacity:.2,haloOpacityOccluded:.25,fillOpacityOccluded:.05,shadowColor:u.fromValues(1,0,1,1),shadowOpacity:.15,occludedShadowOpacity:.075};this._grid={coverageMipmap:null,vao:null,verticalCellCount:0,horizontalCellCount:0,cellPixelSize:0,mipmapLevels:0,viewportWidth:0,viewportHeight:0}}
var p=w.prototype;p._assertResources=function(){if(!this.quadVAO){this.quadVAO=D.createQuadVAO(this._rctx);var a={colorTarget:k.TargetType.TEXTURE,depthStencilTarget:k.DepthStencilTargetType.NONE,width:0,height:0},f={target:k.TextureType.TEXTURE_2D,pixelFormat:k.PixelFormat.RGBA,dataType:k.PixelType.UNSIGNED_BYTE,samplingMode:k.TextureSamplingMode.LINEAR,wrapMode:k.TextureWrapMode.CLAMP_TO_EDGE,width:0,height:0};this.blur0Fbo=new v.FramebufferObject(this._rctx,a,f);this.blur1Fbo=new v.FramebufferObject(this._rctx,
a,f);a=new n.HighlightCompositionTechniqueConfiguration;a.highlightStage=q.HighlightCompositionPass.Blur;a.gridOptimization=!1;this.blurTechnique=this._techniqueRep.acquire(n.HighlightCompositionTechnique,a);a.highlightStage=q.HighlightCompositionPass.Blur;a.gridOptimization=!0;this.blurGridTechnique=this._techniqueRep.acquire(n.HighlightCompositionTechnique,a);a.highlightStage=q.HighlightCompositionPass.Apply;a.gridOptimization=!1;this.applyTechnique=this._techniqueRep.acquire(n.HighlightCompositionTechnique,
a);a.highlightStage=q.HighlightCompositionPass.Apply;a.gridOptimization=!0;this.applyGridTechnique=this._techniqueRep.acquire(n.HighlightCompositionTechnique,a);a.highlightStage=q.HighlightCompositionPass.Downsample;a.gridOptimization=!1;this.downsampleTechnique=this._techniqueRep.acquire(n.HighlightCompositionTechnique,a)}};p.dispose=function(){if(this._grid.coverageMipmap)for(let a=1;a<this._grid.coverageMipmap.length;a++)this._grid.coverageMipmap[a].dispose();this._grid.vao&&this._grid.vao.dispose(!0);
this.quadVAO&&(this.quadVAO.dispose(!0),this.quadVAO=null);this.blur0Fbo=r.disposeMaybe(this.blur0Fbo);this.blur1Fbo=r.disposeMaybe(this.blur1Fbo)};p.setDefaultOptions=function(a){this.defaultOptions=a};p.render=function(a,f,m){var b=a.pixelRatio;const d=x.HIGHLIGHTS_GRID_OPTIMIZATION_ENABLED,c=this._rctx;this._assertResources();z.copy(this.viewportToRestore,a.fullViewport);var e=Math.ceil(a.fullWidth/b);b=Math.ceil(a.fullHeight/b);this.blur0Fbo.resize(e,b);this.blur1Fbo.resize(e,b);c.bindVAO(this.quadVAO);
a=null;const g=d?this.blurGridTechnique:this.blurTechnique,h=c.useTechnique(g);d?(this._gridUpdateResources(f,32),this._gridComputeMipmap(),a=this._grid.vao,h.bindTexture(this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture,"coverageTex")):a=this.quadVAO;c.bindVAO(a);c.bindFramebuffer(this.blur0Fbo);c.setViewport(0,0,e,b);c.setClearColor(0,0,0,0);c.clear(k.ClearBufferBit.COLOR_BUFFER_BIT);h.bindTexture(f.colorTexture,"tex");h.setUniform2f("blurSize",1/e,0);c.drawArrays(g.primitiveType,
0,t.vertexCount(a,"geometry"));c.bindFramebuffer(this.blur1Fbo);c.clear(k.ClearBufferBit.COLOR_BUFFER_BIT);h.bindTexture(this.blur0Fbo.colorTexture,"tex");h.setUniform2f("blurSize",0,1/b);c.drawArrays(g.primitiveType,0,t.vertexCount(a,"geometry"));c.bindFramebuffer(m);c.setViewport(this.viewportToRestore[0],this.viewportToRestore[1],this.viewportToRestore[2],this.viewportToRestore[3]);m=d?this.applyGridTechnique:this.applyTechnique;e=c.useTechnique(m);e.bindTexture(this.blur1Fbo.colorTexture,"tex");
e.bindTexture(f.colorTexture,"origin");d&&e.bindTexture(this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture,"coverageTex");m.bindApplyPass(this.defaultOptions);c.drawArrays(m.primitiveType,0,t.vertexCount(a,"geometry"));c.bindVAO(null)};p._gridUpdateResources=function(a,f){const m=this._rctx,b=this._grid;var d=!1;null===b.coverageMipmap&&(b.coverageMipmap=[a],d=!0);if(b.viewportWidth!==a.width||b.viewportHeight!==a.height)d=!0,b.viewportWidth=a.width,b.viewportHeight=a.height;b.coverageMipmap[0]=
a;b.cellPixelSize!==f&&(b.cellPixelSize=f,d=!0);if(d){for(f=1;f<b.coverageMipmap.length;f++)b.coverageMipmap[f].dispose();b.mipmapLevels=Math.ceil(Math.log(b.cellPixelSize)*Math.LOG2E);b.coverageMipmap.length=b.mipmapLevels+1;for(f=0;f<b.mipmapLevels;f++)d=b.coverageMipmap[f],b.coverageMipmap[f+1]=new v.FramebufferObject(m,{colorTarget:k.TargetType.TEXTURE,depthStencilTarget:k.DepthStencilTargetType.NONE,width:Math.ceil(d.width/2),height:Math.ceil(d.height/2)},{target:k.TextureType.TEXTURE_2D,pixelFormat:k.PixelFormat.RGB,
dataType:k.PixelType.UNSIGNED_SHORT_5_6_5,samplingMode:k.TextureSamplingMode.LINEAR,wrapMode:k.TextureWrapMode.CLAMP_TO_EDGE,width:Math.ceil(d.width/2),height:Math.ceil(d.height/2)})}d=Math.ceil(a.height/b.cellPixelSize);var c=Math.ceil(a.width/b.cellPixelSize);if(!b.vao||b.verticalCellCount!==d||b.horizontalCellCount!==c){b.verticalCellCount=d;b.horizontalCellCount=c;a=d+1;f=c+1;d=1/d;c=1/c;const e=new Float32Array(24*a*f);let g=0;for(let h=0;h<a;h++)for(let l=0;l<f;l++)e[g+0]=(l-.5)*c*2-1,e[g+1]=
(h-.5)*d*2-1,e[g+2]=l*c,e[g+3]=h*d,e[g+4]=(l+.5)*c*2-1,e[g+5]=(h-.5)*d*2-1,e[g+6]=l*c,e[g+7]=h*d,e[g+8]=(l-.5)*c*2-1,e[g+9]=(h+.5)*d*2-1,e[g+10]=l*c,e[g+11]=h*d,e[g+12]=(l-.5)*c*2-1,e[g+13]=(h+.5)*d*2-1,e[g+14]=l*c,e[g+15]=h*d,e[g+16]=(l+.5)*c*2-1,e[g+17]=(h-.5)*d*2-1,e[g+18]=l*c,e[g+19]=h*d,e[g+20]=(l+.5)*c*2-1,e[g+21]=(h+.5)*d*2-1,e[g+22]=l*c,e[g+23]=h*d,g+=24;b.vao&&b.vao.dispose(!0);b.vao=new F.VertexArrayObject(m,B.Default3D,{geometry:C.Pos2Tex},{geometry:E.BufferObject.createVertex(m,k.Usage.STATIC_DRAW,
e)})}};p._gridComputeMipmap=function(){const a=this._rctx,f=this._grid,m=a.useTechnique(this.downsampleTechnique);a.bindVAO(this.quadVAO);for(let b=0;b<f.mipmapLevels;b++){a.bindFramebuffer(f.coverageMipmap[b+1]);m.bindTexture(f.coverageMipmap[b].colorTexture,"tex");const d=f.coverageMipmap[b+1].width,c=f.coverageMipmap[b+1].height;m.setUniform2f("invFramebufferDim",1/d,1/c);a.setViewport(0,0,d,c);a.drawArrays(k.PrimitiveType.TRIANGLE_STRIP,0,t.vertexCount(this.quadVAO,"geometry"))}};y._createClass(w,
[{key:"profilingCallback",get:function(){return x.HIGHLIGHTS_PROFILE_TO_CONSOLE?a=>console.log(a):null}},{key:"gpuMemoryUsage",get:function(){let a=(r.isSome(this.blur0Fbo)?this.blur0Fbo.gpuMemoryUsage:0)+(r.isSome(this.blur1Fbo)?this.blur1Fbo.gpuMemoryUsage:0);if(this._grid.coverageMipmap)for(const f of this._grid.coverageMipmap)a+=f.gpuMemoryUsage;return a}},{key:"test",get:function(){return{coverage:this._grid.coverageMipmap,blur:[this.blur0Fbo,this.blur1Fbo]}}}]);return w}()});