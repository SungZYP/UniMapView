// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/Slice.glsl ../core/shaderLibrary/output/OutputHighlight.glsl ../core/shaderLibrary/shading/MultipassTerrainTest.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/OrderIndependentTransparency ../lib/Program ../lib/StencilUtils ../lib/VertexAttribute ../materials/PatternStyle ../../../../chunks/Pattern.glsl ../../../webgl/renderState".split(" "),
function(z,p,x,g,m,A,B,C,u,d,q,e,l,n,D,v,r,E,F,t){q=function(k){function h(){return k.apply(this,arguments)||this}x._inheritsLoose(h,k);var a=h.prototype;a.initializeProgram=function(f){var b=h.shader.get();const c=this.configuration;b=b.build({output:c.output,attributeColor:c.vertexColors,slicePlaneEnabled:c.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,style:c.style,patternSpacing:c.patternSpacing,lineWidth:c.lineWidth,draped:c.draped,oitEnabled:c.transparencyPassType===
l.TransparencyPassType.Color,multipassTerrainEnabled:c.multipassTerrainEnabled,cullAboveGround:c.cullAboveGround});return new D.Program(f.rctx,b,y)};a.bindPass=function(f,b){u.bindProjectionMatrix(this.program,b.camera.projectionMatrix);this.program.setUniform4fv("uColor",f.color);this.configuration.draped?(this.program.setUniform1f("worldToScreenRatio",1/b.screenToPCSRatio),this.program.setUniform1f("texelSize",1/b.camera.pixelRatio)):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/b.camera.perScreenPixelRatio);
this.configuration.output===m.ShaderOutput.Highlight&&B.bindOutputHighlight(this.program,b);(this.configuration.output===m.ShaderOutput.Depth||b.multipassTerrainEnabled)&&this.program.setUniform2fv("nearFar",b.camera.nearFar);b.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",b.inverseViewport),C.bindMultipassTerrainTexture(this.program,b))};a.bindDraw=function(f){u.bindView(this.program,f);u.bindCameraPosition(this.program,f.origin,f.camera.viewInverseTransposeMatrix);A.bindSliceUniformsWithOrigin(this.program,
this.configuration,f);this.program.rebindTextures()};a._setPipelineState=function(f,b){const c=this.configuration,w=f===l.TransparencyPassType.NONE,G=f===l.TransparencyPassType.FrontFace;return t.makePipelineState({blending:c.output===m.ShaderOutput.Color||c.output===m.ShaderOutput.Alpha?w?n.blendingDefault:n.oitBlending(f):null,culling:t.cullingParams(c.cullFace),depthTest:{func:n.oitDepthTest(f)},depthWrite:w?c.writeDepth&&t.defaultDepthWriteParams:n.oitDepthWrite(f),colorWrite:t.defaultColorWriteParams,
stencilWrite:c.sceneHasOcludees?v.stencilWriteMaskOn:null,stencilTest:c.sceneHasOcludees?b?v.stencilToolMaskBaseParams:v.stencilBaseAllZerosParams:null,polygonOffset:w||G?c.polygonOffset&&H:n.getOITPolygonOffset(c.enableOffset)})};a.initializePipeline=function(){this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0);return this._setPipelineState(this.configuration.transparencyPassType,!1)};a.getPipelineState=function(f,b){return b?this._occludeePipelineState:
k.prototype.getPipelineState.call(this,f,b)};return h}(q.ShaderTechnique);q.shader=new d.ReloadableShaderModule(F.PatternShader,()=>new Promise((k,h)=>z(["./Pattern.glsl"],k,h)));const H={factor:1,units:1};d=function(k){function h(){var a=k.apply(this,arguments)||this;a.output=m.ShaderOutput.Color;a.cullFace=l.CullFaceOptions.None;a.slicePlaneEnabled=!1;a.vertexColors=!1;a.polygonOffset=!1;a.writeDepth=!0;a.sceneHasOcludees=!1;a.enableOffset=!0;a.transparencyPassType=l.TransparencyPassType.NONE;a.multipassTerrainEnabled=
!1;a.cullAboveGround=!1;return a}x._inheritsLoose(h,k);return h}(e.ShaderTechniqueConfiguration);g.__decorate([e.parameter({count:m.ShaderOutput.COUNT})],d.prototype,"output",void 0);g.__decorate([e.parameter({count:l.CullFaceOptions.COUNT})],d.prototype,"cullFace",void 0);g.__decorate([e.parameter()],d.prototype,"slicePlaneEnabled",void 0);g.__decorate([e.parameter()],d.prototype,"vertexColors",void 0);g.__decorate([e.parameter()],d.prototype,"polygonOffset",void 0);g.__decorate([e.parameter()],
d.prototype,"writeDepth",void 0);g.__decorate([e.parameter()],d.prototype,"sceneHasOcludees",void 0);g.__decorate([e.parameter({count:E.Style.COUNT})],d.prototype,"style",void 0);g.__decorate([e.parameter()],d.prototype,"patternSpacing",void 0);g.__decorate([e.parameter()],d.prototype,"lineWidth",void 0);g.__decorate([e.parameter()],d.prototype,"enableOffset",void 0);g.__decorate([e.parameter()],d.prototype,"draped",void 0);g.__decorate([e.parameter({count:l.TransparencyPassType.COUNT})],d.prototype,
"transparencyPassType",void 0);g.__decorate([e.parameter()],d.prototype,"multipassTerrainEnabled",void 0);g.__decorate([e.parameter()],d.prototype,"cullAboveGround",void 0);const y=new Map([[r.VertexAttribute.POSITION,0],[r.VertexAttribute.COLOR,3],[r.VertexAttribute.UVMAPSPACE,4],[r.VertexAttribute.BOUNDINGRECT,5]]);p.PatternTechnique=q;p.PatternTechniqueConfiguration=d;p.patternVertexAttributeLocations=y;Object.defineProperty(p,"__esModule",{value:!0})});