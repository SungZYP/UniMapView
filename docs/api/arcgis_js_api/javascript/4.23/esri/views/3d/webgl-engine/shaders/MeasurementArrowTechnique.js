// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/DefaultVertexAttributeLocations ../lib/OrderIndependentTransparency ../lib/Program ../../../../chunks/MeasurementArrow.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(u,k,
l,m,q,f,g,h,n,v,r,w,x,t,p){g=function(d){function b(a,e,y){return d.call(this,a,e,y)||this}l._inheritsLoose(b,d);var c=b.prototype;c.initializeProgram=function(a){const e=b.shader.get().build();return new w.Program(a.rctx,e,v.Default3D)};c.bindPass=function(a,e){q.bindProjectionMatrix(this.program,e.camera.projectionMatrix);this.program.setUniform1f("width",a.width);this.program.setUniform1f("outlineSize",a.outlineSize);this.program.setUniform4fv("outlineColor",a.outlineColor);this.program.setUniform1f("stripeLength",
a.stripeLength);this.program.setUniform4fv("stripeEvenColor",a.stripeEvenColor);this.program.setUniform4fv("stripeOddColor",a.stripeOddColor)};c.bindDraw=function(a){q.bindView(this.program,a);this.program.rebindTextures()};c._setPipelineState=function(a){const e=a===n.TransparencyPassType.NONE;return p.makePipelineState({blending:this.configuration.transparent?e?r.blendingDefault:r.oitBlending(a):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:t.CompareFunction.LESS},
depthWrite:p.defaultDepthWriteParams,colorWrite:p.defaultColorWriteParams})};c.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};l._createClass(b,[{key:"primitiveType",get:function(){return t.PrimitiveType.TRIANGLE_STRIP}}]);return b}(g.ShaderTechnique);g.shader=new f.ReloadableShaderModule(x.MeasurementArrowShader,()=>new Promise((d,b)=>u(["./MeasurementArrow.glsl"],d,b)));f=function(d){function b(){var c=d.apply(this,arguments)||this;c.polygonOffsetEnabled=
!1;c.transparent=!1;c.transparencyPassType=n.TransparencyPassType.NONE;return c}l._inheritsLoose(b,d);return b}(h.ShaderTechniqueConfiguration);m.__decorate([h.parameter()],f.prototype,"polygonOffsetEnabled",void 0);m.__decorate([h.parameter()],f.prototype,"transparent",void 0);m.__decorate([h.parameter({count:n.TransparencyPassType.COUNT})],f.prototype,"transparencyPassType",void 0);k.MeasurementArrowTechnique=g;k.MeasurementArrowTechniqueConfiguration=f;Object.defineProperty(k,"__esModule",{value:!0})});