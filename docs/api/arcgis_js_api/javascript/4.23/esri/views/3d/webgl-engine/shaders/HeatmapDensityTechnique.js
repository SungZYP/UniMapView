// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/maybe ../../../../renderers/support/heatmapUtils ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ../lib/Program ../../../../chunks/HeatmapDensity.glsl ../../../webgl/enums ../../../webgl/renderState ../../../webgl/Texture".split(" "),
function(y,k,v,w,z,A,x,l,n,r,B,C,m,d,t,D){k.RadiusMode=void 0;(function(e){e[e.Screen=0]="Screen";e[e.World=1]="World"})(k.RadiusMode||(k.RadiusMode={}));n=function(e){function h(a,b,c){b=e.call(this,a,b,c)||this;b._kernelBlurRadius=1;const {R32F:f,textureFloatLinear:p}=a.rctx.capabilities.textureFloat;c=null!=f;b._kernelTextureChannels=c?1:4;b._floatInterpolationDisabled=!p;b._kernel=new D.Texture(a.rctx,{target:d.TextureType.TEXTURE_2D,pixelFormat:c?d.PixelFormat.RED:d.PixelFormat.RGBA,internalFormat:c?
d.SizedPixelFormat.R32F:d.PixelFormat.RGBA,dataType:d.PixelType.FLOAT,samplingMode:d.TextureSamplingMode.NEAREST,wrapMode:d.TextureWrapMode.CLAMP_TO_EDGE,width:1,height:1});return b}v._inheritsLoose(h,e);var g=h.prototype;g.initializeProgram=function(a){const b=h.shader.get().build({isAttributeDriven:this.configuration.isAttributeDriven,mode:this.configuration.mode});return new C.Program(a.rctx,b,B.Default3D)};g.initializePipeline=function(){return t.makePipelineState({blending:t.simpleBlendingParams(d.BlendFactor.ONE,
d.BlendFactor.ONE,d.BlendOperation.ADD),colorWrite:t.defaultColorWriteParams,depthTest:null,depthWrite:null})};g.bindPass=function(a,b){const {camera:c}=b,{mode:f}=this.configuration;x.bindProjectionMatrix(this.program,c.projectionMatrix);switch(f){case m.HeatmapMode.KernelDensity:this._bindKernelDensityPass(a,b);break;case m.HeatmapMode.GaussianBlur:this._bindGaussianBlurPass(a,b)}};g.bindDraw=function(a){x.bindView(this.program,a)};g._bindKernelDensityPass=function({searchRadius:a,resolutionForScale:b},
{camera:c,screenToWorldRatio:f}){0!==b&&(a/=f/b);this.program.setUniform1f("radius",a*c.pixelRatio/c.fullViewport[2])};g._bindGaussianBlurPass=function({searchRadius:a,resolutionForScale:b},{camera:c,screenToWorldRatio:f}){a=Math.round(a);f=3*(0===b?a:a*b/f);0===b||this._floatInterpolationDisabled?this._kernel.setSamplingMode(d.TextureSamplingMode.NEAREST):this._kernel.setSamplingMode(d.TextureSamplingMode.LINEAR);this._kernelBlurRadius!==a&&this._recomputeKernel(a);this.program.setUniform1f("radius",
2*f*c.pixelRatio/c.fullViewport[2]);this.program.bindTexture(this._kernel,"kernel")};g._recomputeKernel=function(a){const b=A.createKernel(a),c=Math.ceil(b.length/2),f=this._kernelTextureChannels,p=new Float32Array(c*f);for(let q=0;q<c;++q){const E=b[c-1-q];for(let u=0;u<f;++u)p[q*f+u]=E}this._kernel.resize(c,1);this._kernel.setData(p);this._kernelBlurRadius=a};g.destroy=function(){this._kernel=z.disposeMaybe(this._kernel);e.prototype.destroy.call(this)};return h}(n.ShaderTechnique);n.shader=new l.ReloadableShaderModule(m.HeatmapDensityShader,
()=>new Promise((e,h)=>y(["./HeatmapDensity.glsl"],e,h)));l=function(e){function h(){var g=e.apply(this,arguments)||this;g.isAttributeDriven=!1;g.mode=m.HeatmapMode.GaussianBlur;return g}v._inheritsLoose(h,e);return h}(r.ShaderTechniqueConfiguration);w.__decorate([r.parameter()],l.prototype,"isAttributeDriven",void 0);w.__decorate([r.parameter()],l.prototype,"mode",void 0);Object.defineProperty(k,"HeatmapMode",{enumerable:!0,get:()=>m.HeatmapMode});k.HeatmapDensityTechnique=n;k.HeatmapDensityTechniqueConfiguration=
l;Object.defineProperty(k,"__esModule",{value:!0})});