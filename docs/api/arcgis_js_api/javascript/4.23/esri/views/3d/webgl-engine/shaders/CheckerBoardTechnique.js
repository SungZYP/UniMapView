// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/shading/MultipassTerrainTest.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/DefaultVertexAttributeLocations ../lib/OrderIndependentTransparency ../lib/Program ../../../../chunks/CheckerBoard.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),
function(v,q,t,k,w,u,d,m,f,l,x,r,y,z,n,p){m=function(g){function e(){return g.apply(this,arguments)||this}t._inheritsLoose(e,g);var a=e.prototype;a.initializeProgram=function(b){var c=e.shader.get();const h=this.configuration;c=c.build({oitEnabled:h.transparencyPassType===l.TransparencyPassType.Color,multipassTerrainEnabled:h.multipassTerrainEnabled,cullAboveGround:h.cullAboveGround});return new y.Program(b.rctx,c,x.Default3D)};a.bindPass=function(b,c){u.bindProjectionMatrix(this.program,c.camera.projectionMatrix);
this.program.setUniform2fv("size",b.size);this.program.setUniform4fv("color1",b.color1);this.program.setUniform4fv("color2",b.color2);c.multipassTerrainEnabled&&(this.program.setUniform2fv("nearFar",c.camera.nearFar),this.program.setUniform2fv("inverseViewport",c.inverseViewport),w.bindMultipassTerrainTexture(this.program,c))};a.bindDraw=function(b){u.bindView(this.program,b)};a._setPipelineState=function(b){const c=this.configuration,h=b===l.TransparencyPassType.NONE,A=b===l.TransparencyPassType.FrontFace;
return p.makePipelineState({blending:c.transparent?h?B:r.oitBlending(b):null,depthTest:{func:r.oitDepthTest(b)},depthWrite:h?c.writeDepth&&p.defaultDepthWriteParams:r.oitDepthWrite(b),colorWrite:p.defaultColorWriteParams,polygonOffset:h||A?c.polygonOffset&&C:{factor:-1,units:-25}})};a.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};return e}(m.ShaderTechnique);m.shader=new d.ReloadableShaderModule(z.CheckerBoardShader,()=>new Promise((g,e)=>v(["./CheckerBoard.glsl"],
g,e)));const C={factor:0,units:-25},B=p.separateBlendingParams(n.BlendFactor.SRC_ALPHA,n.BlendFactor.ONE,n.BlendFactor.ONE_MINUS_SRC_ALPHA,n.BlendFactor.ONE_MINUS_SRC_ALPHA);d=function(g){function e(){var a=g.apply(this,arguments)||this;a.transparent=!1;a.writeDepth=!0;a.polygonOffset=!1;a.transparencyPassType=l.TransparencyPassType.NONE;a.multipassTerrainEnabled=!1;a.cullAboveGround=!1;return a}t._inheritsLoose(e,g);return e}(f.ShaderTechniqueConfiguration);k.__decorate([f.parameter()],d.prototype,
"transparent",void 0);k.__decorate([f.parameter()],d.prototype,"writeDepth",void 0);k.__decorate([f.parameter()],d.prototype,"polygonOffset",void 0);k.__decorate([f.parameter({count:l.TransparencyPassType.COUNT})],d.prototype,"transparencyPassType",void 0);k.__decorate([f.parameter()],d.prototype,"multipassTerrainEnabled",void 0);k.__decorate([f.parameter()],d.prototype,"cullAboveGround",void 0);q.CheckerBoardTechnique=m;q.CheckerBoardTechniqueConfiguration=d;Object.defineProperty(q,"__esModule",
{value:!0})});