// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/Handles ../../../core/mathUtils ../../../core/maybe ../../../core/watchUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../ViewingMode ../camera/constraintUtils ../camera/intersectionUtils ../camera/constraintUtils/common ./NearFarHeuristic ./SurfaceCollisionConstraint".split(" "),
function(d,r,g,t,u,k,l,v,m,B,C,D,w,n,x,y,e,z,A){d.ConstraintsManager=function(p){function h(a){var b=p.call(this,a)||this;b._handles=new u;b.nearFarHeuristic=z.createNearFarHeuristic(a.view.state.viewingMode,a.view.basemapTerrain,a.view.renderCoordsHelper.spatialReference);return b}r._inheritsLoose(h,p);var c=h.prototype;c.initialize=function(){this._handles.add([this.view.watch(["constraints.clipDistance.near","constraints.clipDistance.far"],()=>this._clipDistanceNearFarChanged()),this.view.watch("constraints.clipDistance.mode",
()=>this._updateNearFar()),this.view.state.events.on("before-camera-change",a=>this._updateCameraNearFar(a.camera)),this.view.watch("renderDataExtent",()=>this._updateNearFar(),!0),this.view.watch(["constraints.altitude.min","constraints.altitude.max"],()=>this._updateAltitude(),!0),this.view.watch("constraints.tilt.max",()=>this._updateTiltMax(),!0),this.view.watch("constraints.tilt.mode",()=>this._updateTilt(),!0),this.view.watch("state.camera",()=>this._updateTiltAutoMax(),!0),this.view.watch(["map.ground.navigationConstraint.type",
"constraints.collision.enabled"],()=>this._updateCollision(),!0)]);this.view.state.isLocal&&this._handles.add(v.init(this.view,"renderDataExtent",a=>this._updateLocalSurfaceDistance(a)));this._updateNearFar();this.view.state.viewingMode!==n.ViewingMode.Local&&this._updateAltitude();this._updateTilt();this._updateCollision();this._set("surfaceCollisionConstraint",new A.default({view:this.view}))};c.destroy=function(){this._handles=l.destroyMaybe(this._handles);this.surfaceCollisionConstraint&&(this.surfaceCollisionConstraint.destroy(),
this._set("surfaceCollisionConstraint",null))};c._clipDistanceNearFarChanged=function(){var a;const b=null==(a=this.view.constraints)?void 0:a.clipDistance;b&&"auto"!==b.mode&&this.view.state.updateCamera(f=>{this._updateCameraNearFarManual(f,b);return!0})};c._updateNearFar=function(){this.view.state.updateCamera(a=>{this._updateCameraNearFar(a);return!0})};c._updateCameraNearFar=function(a){const b=this.view.constraints&&this.view.constraints.clipDistance;"manual"===(b?b.mode:"auto")?this._updateCameraNearFarManual(a,
b):this._updateCameraNearFarAuto(a,b)};c._updateCameraNearFarAuto=function(a,b){this.nearFarHeuristic.compute(a.eye,a.center,this.view.renderDataExtent,y.surfaceElevationBelowRenderLocation(this.view,a.eye),a);b&&b.autoUpdate(a.near,a.far)};c._updateCameraNearFarManual=function(a,b){b&&(a.near=b.near,a.far=b.far)};c._updateCollision=function(){var a,b,f;const q=null==(a=this.view.map)?void 0:null==(b=a.ground)?void 0:null==(f=b.navigationConstraint)?void 0:f.type;a=q?"stay-above"===q:!0;b=this.view.state.constraints.collision;
a!==b.enabled&&((b.enabled=a)&&this._reapplyConstraints(e.ConstraintTypes.COLLISION),(a=this.view.constraints&&this.view.constraints.tilt)&&"auto"!==a.mode||this._updateTiltAuto())};c._updateAltitude=function(){const a=this.view.constraints&&this.view.constraints.altitude;this.view.state.constraints.altitude=a&&this.view.state.viewingMode!==n.ViewingMode.Local?{min:a.min,max:a.max}:null;this._reapplyConstraints()};c._updateTiltMax=function(){const a=this.view.constraints&&this.view.constraints.tilt;
a&&"auto"!==a.mode&&(this._updateTiltManual(a),this._reapplyConstraints())};c._updateTilt=function(){const a=this.view.constraints&&this.view.constraints.tilt;"manual"===(a?a.mode:"auto")?this._updateTiltManual(a):this._updateTiltAuto();this._reapplyConstraints()};c._updateTiltManual=function(a){const b=this.view.state.constraints;b.tilt=b.createConstantMaxTilt(k.deg2rad(a.max))};c._updateTiltAuto=function(){const a=this.view.state.constraints;a.tilt=a.createDefaultTilt();this._updateTiltAutoMax()};
c._updateTiltAutoMax=function(){const a=this.view.constraints&&this.view.constraints.tilt;if(a&&"auto"===a.mode){var b=this.view.state.constraints;b.tilt&&(b=b.tilt(this.view.state.camera.distance).max,a.autoUpdate(k.rad2deg(b)))}};c._updateLocalSurfaceDistance=function(a){if(!l.isNone(a)){var b=Math.max(a.width,a.height);0>=b||(a.hasZ&&(b=Math.max(b,a.zmax-a.zmin)),a=this.view.state,b=3*b/Math.atan(a.camera.fov/2),b!==a.constraints.distance&&(a.constraints.distance=b))}};c._reapplyConstraints=function(a=
e.ConstraintTypes.ALL){this.view.state.updateCamera(b=>x.applyAll(this.view,b,{selection:a,interactionType:e.InteractionType.NONE,interactionFactor:null,interactionStartCamera:null,interactionDirection:null,tiltMode:e.TiltMode.TUMBLE}))};return h}(t);g.__decorate([m.property({constructOnly:!0})],d.ConstraintsManager.prototype,"view",void 0);g.__decorate([m.property({readOnly:!0})],d.ConstraintsManager.prototype,"surfaceCollisionConstraint",void 0);d.ConstraintsManager=g.__decorate([w.subclass("esri.views.3d.state.ConstraintsManager")],
d.ConstraintsManager);d.default=d.ConstraintsManager;Object.defineProperty(d,"__esModule",{value:!0})});