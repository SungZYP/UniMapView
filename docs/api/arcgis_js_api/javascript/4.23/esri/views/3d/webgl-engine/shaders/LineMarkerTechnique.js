// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../chunks/mat4 ../../../../geometry/support/vectorStacks ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/Slice.glsl ../core/shaderLibrary/output/OutputHighlight.glsl ../core/shaderLibrary/shading/MultipassTerrainTest.glsl ../core/shaderLibrary/shading/VisualVariables.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/OrderIndependentTransparency ../lib/Program ../lib/RenderSlot ../lib/StencilUtils ../lib/VertexAttribute ../../../../chunks/LineMarker.glsl ../../../webgl/renderState".split(" "),
function(A,r,v,g,B,C,q,D,E,F,G,w,e,t,f,u,p,H,x,h,l,I,m){const y=new Map([[l.VertexAttribute.POSITION,0],[l.VertexAttribute.UV0,2],[l.VertexAttribute.AUXPOS1,3],[l.VertexAttribute.SIZE,6],[l.VertexAttribute.SIZEFEATUREATTRIBUTE,6],[l.VertexAttribute.COLOR,5],[l.VertexAttribute.COLORFEATUREATTRIBUTE,5],[l.VertexAttribute.OPACITYFEATUREATTRIBUTE,7]]);t=function(n){function k(a,c,d){return n.call(this,a,c,d)||this}v._inheritsLoose(k,n);var b=k.prototype;b.initializeProgram=function(a){var c=k.shader.get();
const d=this.configuration;c=c.build({oitEnabled:d.transparencyPassType===u.TransparencyPassType.Color,output:d.output,slicePlaneEnabled:d.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:d.draped,vvColor:d.vvColor,vvSize:d.vvSize,vvInstancingEnabled:!0,vvOpacity:d.vvOpacity,multipassTerrainEnabled:d.multipassTerrainEnabled,cullAboveGround:d.cullAboveGround});return new H.Program(a.rctx,c,y)};b.bindPass=function(a,c){w.bindProjectionMatrix(this.program,c.camera.projectionMatrix);
this.configuration.output===q.ShaderOutput.Highlight&&E.bindOutputHighlight(this.program,c);c.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",c.inverseViewport),F.bindMultipassTerrainTexture(this.program,c));this.program.setUniform1f("intrinsicWidth",a.width);this.program.setUniform4fv("intrinsicColor",a.color);this.program.setUniform2fv("nearFar",c.camera.nearFar);this.program.setUniform1f("pixelRatio",c.camera.pixelRatio);this.program.setUniform2f("screenSize",c.camera.fullViewport[2],
c.camera.fullViewport[3]);G.bindVisualVariablesUniformsWithOpacity(this.program,a)};b.bindDraw=function(a){w.bindView(this.program,a);D.bindSliceUniforms(this.program,this.configuration,a.slicePlane,{origin:a.origin,view:a.camera.viewMatrix});this.program.setUniformMatrix4fv("inverseProjectionMatrix",B.invert(C.sm4d.get(),a.camera.projectionMatrix));this.program.rebindTextures()};b._makePipelineState=function(a,c){const d=this.configuration,z=a===u.TransparencyPassType.NONE;return m.makePipelineState({blending:d.output===
q.ShaderOutput.Color||d.output===q.ShaderOutput.Alpha?z?p.blendingDefault:p.oitBlending(a):null,depthTest:{func:p.oitDepthTest(a)},depthWrite:z?d.writeDepth&&m.defaultDepthWriteParams:p.oitDepthWrite(a),colorWrite:m.defaultColorWriteParams,stencilWrite:d.sceneHasOcludees?h.stencilWriteMaskOn:null,stencilTest:d.sceneHasOcludees?c?h.stencilToolMaskBaseParams:h.stencilBaseAllZerosParams:null,polygonOffset:{factor:0,units:-10}})};b.initializePipeline=function(){this.configuration.occluder&&(this._occluderPipelineTransparent=
m.makePipelineState({blending:p.blendingDefault,depthTest:h.depthCompareAlways,depthWrite:null,colorWrite:m.defaultColorWriteParams,stencilWrite:null,stencilTest:h.stencilToolTransparentOccluderParams}),this._occluderPipelineOpaque=m.makePipelineState({blending:p.blendingDefault,depthTest:h.depthCompareAlways,depthWrite:null,colorWrite:m.defaultColorWriteParams,stencilWrite:h.stencilWriteMaskOff,stencilTest:h.stencilToolMaskOccluderParams}),this._occluderPipelineMaskWrite=m.makePipelineState({blending:null,
depthTest:h.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:h.stencilWriteMaskOn,stencilTest:h.stencilToolMaskBaseParams}));this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0);return this._makePipelineState(this.configuration.transparencyPassType,!1)};b.getPipelineState=function(a,c){return c?this._occludeePipelineState:this.configuration.occluder?a===x.RenderSlot.TRANSPARENT_OCCLUDER_MATERIAL?this._occluderPipelineTransparent:a===x.RenderSlot.OCCLUDER_MATERIAL?
this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:n.prototype.getPipelineState.call(this,a,c)};return k}(t.ShaderTechnique);t.shader=new e.ReloadableShaderModule(I.LineMarkerShader,()=>new Promise((n,k)=>A(["./LineMarker.glsl"],n,k)));e=function(n){function k(){var b=n.apply(this,arguments)||this;b.output=q.ShaderOutput.Color;b.occluder=!1;b.slicePlaneEnabled=!1;b.transparent=!1;b.writeDepth=!1;b.draped=!1;b.vvSize=!1;b.vvColor=!1;b.vvOpacity=!1;b.sceneHasOcludees=!1;b.transparencyPassType=
u.TransparencyPassType.NONE;b.multipassTerrainEnabled=!1;b.cullAboveGround=!1;return b}v._inheritsLoose(k,n);return k}(f.ShaderTechniqueConfiguration);g.__decorate([f.parameter({count:q.ShaderOutput.COUNT})],e.prototype,"output",void 0);g.__decorate([f.parameter()],e.prototype,"occluder",void 0);g.__decorate([f.parameter()],e.prototype,"slicePlaneEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"transparent",void 0);g.__decorate([f.parameter()],e.prototype,"writeDepth",void 0);g.__decorate([f.parameter()],
e.prototype,"draped",void 0);g.__decorate([f.parameter()],e.prototype,"vvSize",void 0);g.__decorate([f.parameter()],e.prototype,"vvColor",void 0);g.__decorate([f.parameter()],e.prototype,"vvOpacity",void 0);g.__decorate([f.parameter()],e.prototype,"sceneHasOcludees",void 0);g.__decorate([f.parameter({count:u.TransparencyPassType.COUNT})],e.prototype,"transparencyPassType",void 0);g.__decorate([f.parameter()],e.prototype,"multipassTerrainEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"cullAboveGround",
void 0);r.LineMarkerTechnique=t;r.LineMarkerTechniqueConfiguration=e;r.markerVertexAttributeLocations=y;Object.defineProperty(r,"__esModule",{value:!0})});