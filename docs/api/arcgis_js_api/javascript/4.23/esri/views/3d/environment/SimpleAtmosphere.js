// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../core/Logger ../../../core/mathUtils ../../../core/maybe ../../../core/promiseUtils ../../../core/watchUtils ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/vec2 ../../../chunks/vec2f64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ../../../geometry/support/spatialReferenceUtils ../../../support/requestImageUtils ./atmosphereUtils ../../../chunks/SimpleAtmosphere.glsl ./SimpleAtmosphereTechnique ./resources/MarsAtmosphereTexture ./resources/SimpleAtmosphereTexture ../support/mathUtils ../support/buffer/glUtil ../support/buffer/InterleavedLayout ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/glUtil3D ../webgl-engine/lib/Util ../webgl-engine/lib/VertexAttribute ../../webgl/BufferObject ../../webgl/enums ../../webgl/Texture ../../webgl/Util ../../webgl/VertexArrayObject".split(" "),
function(x,t,y,m,u,G,H,I,J,K,h,p,L,M,N,z,A,r,O,P,Q,R,S,T,U,B,V,W,n,X,C,Y){function D(l,k,b,c,a){const g=h.length(l),d=c*Math.sqrt(g*g-c*c)/g,e=a.silCircleV1,f=a.silCircleV2;h.scale(a.silCircleCenter,l,Math.sqrt(c*c-d*d)/g);h.cross(e,l,k);1>h.squaredLength(e)&&h.cross(e,l,b);h.scale(e,e,d/h.length(e));h.cross(f,e,l);h.scale(f,f,d/h.length(f));return d}const Z=t.getLogger("esri.views.3d.environment.SimpleAtmosphere"),E=-z.innerAtmosphereDepth,aa=Q.makePiecewiseLinearFunction([[50,.1015625],[500,.21875],
[5E3,.51171875],[5E4,.4140625]]);t=function(){function l(b){this.view=b;this.type="simple";this._renderData={texV:K.create(),silCircleCenter:p.create(),silCircleV1:p.create(),silCircleV2:p.create(),altitudeFade:0,innerScale:0,undergroundFadeAlpha:0};this._texture=null;this._fadeVaoCount=0;this._readyResolver=u.createResolver();this._readyController=new AbortController;this.texV1=1;this.canRender=!0;this.isOnMars=M.isMars(b.spatialReference);b=L.getReferenceEllipsoid(b.spatialReference);this.planetRadius=
b.radius;this.outerRimWidth=b.outerAtmosphereRimWidth;this.innerRimFactor=(this.planetRadius+E)/this.planetRadius;this.middleRimFactor=(this.planetRadius+0)/this.planetRadius;this.outerRimFactor=(this.planetRadius+this.outerRimWidth)/this.planetRadius;this.texV0=0/this.outerRimWidth;this.texVScale=this.texV1-this.texV0}var k=l.prototype;k.destroy=function(){this._readyResolver.reject();this._cameraChangeHandle=m.removeMaybe(this._cameraChangeHandle);this._texture=m.disposeMaybe(this._texture);this._fadeVao=
m.disposeMaybe(this._fadeVao);this._vao=m.disposeMaybe(this._vao);this._readyController=m.abortMaybe(this._readyController)};k.when=function(){return this._readyResolver.promise};k.initializeRenderContext=function(){var b=x._asyncToGenerator(function*(c){this._shaderTechniqueRepository=c.shaderTechniqueRepository;const a=c.renderContext.rctx;this._cameraChangeHandle=G.init(this.view,"state.camera",()=>c.requestRender(),!0);this._vao=this._createRibbon(a);this._vaoCount=C.vertexCount(this._vao,"geometry");
this._fadeVao=U.createQuadVAO(a);this._fadeVaoCount=C.vertexCount(this._fadeVao,"geometry");const g=this.isOnMars?O:P,d=this._readyController.signal;try{const e=yield N.requestImage(g,{signal:d});u.throwIfAborted(d);this._texture=new X.Texture(a,{pixelFormat:n.PixelFormat.RGBA,dataType:n.PixelType.UNSIGNED_BYTE,wrapMode:n.TextureWrapMode.CLAMP_TO_EDGE,samplingMode:n.TextureSamplingMode.LINEAR,flipped:!0},e);c.requestRender();this._readyController=null;this._readyResolver.resolve()}catch(e){u.isAbortError(e)||
Z.error("Unable to initialize simple atmosphere: image request failed",e),this._readyResolver.reject(e)}});return function(c){return b.apply(this,arguments)}}();k.render=function(b){this._update(b.camera);const c=b.rctx;if(1>this._renderData.undergroundFadeAlpha){var a=c.useTechnique(this.coneTechnique);a.setUniformMatrix4fv("proj",b.camera.projectionMatrix);a.setUniformMatrix4fv("view",b.camera.viewMatrix);a.setUniform3fv("silCircleCenter",this._renderData.silCircleCenter);a.setUniform3fv("silCircleV1",
this._renderData.silCircleV1);a.setUniform3fv("silCircleV2",this._renderData.silCircleV2);a.setUniform2fv("texV",this._renderData.texV);a.bindTexture(this._texture,"tex");b.scenelightingData.setLightDirectionUniform(a);a.setUniform1f("altitudeFade",this._renderData.altitudeFade);a.setUniform1f("innerScale",this._renderData.innerScale);c.bindVAO(this._vao);c.drawArrays(n.PrimitiveType.TRIANGLES,0,this._vaoCount)}0<this._renderData.undergroundFadeAlpha&&(a=c.useTechnique(this.undergroundTechnique),
a.setUniform1f("undergroundFadeAlpha",this._renderData.undergroundFadeAlpha),b.scenelightingData.setLightDirectionUniform(a),a.setUniform3fv("cameraPosition",b.camera.eye),c.bindVAO(this._fadeVao),c.drawArrays(n.PrimitiveType.TRIANGLE_STRIP,0,this._fadeVaoCount))};k.renderHaze=function(){return!1};k._update=function(b){var c=p.create();const a=this.planetRadius;var g=h.length(b.eye);const d=g-a;this._renderData.undergroundFadeAlpha=0>d?Math.min(-d/5E3,1):0;var e=a+E,f=a+Math.max(50,d);this._renderData.innerScale=
f*f/(Math.sqrt(f*f-a*a)*Math.sqrt(f*f-e*e)+a*e)-1;this._renderData.altitudeFade=z.computeInnerAltitudeFade(d);h.scale(c,b.eye,(a+50)/g);D(c,b.center,b.up,a,this._renderData);c=this._computeScreenRimWidth(b,c,b.up,this._renderData);g=aa(d);e=this.texV0+.001953125*this.texVScale;f=this.texV0+c*g*this.texVScale;50<d&&(D(b.eye,b.center,b.up,a,this._renderData),b=this._computeScreenRimWidth(b,b.eye,b.up,this._renderData),b=y.clamp((b-1.5)/(c-1.5),0,1),e=this.texV0+.001953125*b*this.texVScale,f=this.texV0+
y.lerp(this.texV1,c*g,b)*this.texVScale);J.set(this._renderData.texV,e,f)};k._createRibbon=function(b){const c=new Float32Array(1155),a=new Uint32Array(1920);c[0]=0;c[1]=0;c[2]=-1;for(var g=0;128>g;g++){var d=9*g+3;c[d+0]=g;c[d+1]=this.innerRimFactor;c[d+2]=-1;c[d+3]=g;c[d+4]=this.middleRimFactor;c[d+5]=0;c[d+6]=g;c[d+7]=this.outerRimFactor;c[d+8]=1;d=3*g+1;var e=127===g?1:d+3,f=15*g;a[f+0]=d;a[f+1]=d+1;a[f+2]=e+1;a[f+3]=e+1;a[f+4]=e;a[f+5]=d;a[f+6]=d+1;a[f+7]=d+2;a[f+8]=e+2;a[f+9]=e+2;a[f+10]=e+
1;a[f+11]=d+1;a[f+12]=d;a[f+13]=e;a[f+14]=0}g=F.createBuffer(a.length);d=g.position;for(e=0;e<a.length;++e)f=3*a[e],d.set(e,0,c[f]),d.set(e,1,c[f+1]),d.set(e,2,c[f+2]);return new Y.VertexArrayObject(b,T.Default3D,{geometry:R.glLayout(F)},{geometry:W.BufferObject.createVertex(b,n.Usage.STATIC_DRAW,g.buffer)})};k._computeScreenRimWidth=function(b,c,a,g){h.add(q,g.silCircleCenter,g.silCircleV2);h.scale(v,q,this.outerRimFactor);H.lookAt(w,c,q,a);B.project(q,w,b.projectionMatrix,b.viewport);B.project(v,
w,b.projectionMatrix,b.viewport);return h.distance(q,v)/b.height};x._createClass(l,[{key:"coneTechnique",get:function(){if(m.isNone(this._coneTechnique)){const b=new r.SimpleAtmosphereTechniqueConfiguration;b.geometry=A.SimpleAtmosphereGeometry.Cone;this._coneTechnique=this._shaderTechniqueRepository.acquire(r.SimpleAtmosphereTechnique,b)}return this._coneTechnique}},{key:"undergroundTechnique",get:function(){if(m.isNone(this._undergroundTechnique)){const b=new r.SimpleAtmosphereTechniqueConfiguration;
b.geometry=A.SimpleAtmosphereGeometry.Underground;this._undergroundTechnique=this._shaderTechniqueRepository.acquire(r.SimpleAtmosphereTechnique,b)}return this._undergroundTechnique}}]);return l}();const w=I.create(),q=p.create(),v=p.create(),F=S.newLayout().vec3f(V.VertexAttribute.POSITION);return t});