// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/maybe ../../../../chunks/mat4 ../../../../geometry/support/vectorStacks ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/Slice.glsl ../core/shaderLibrary/output/OutputHighlight.glsl ../core/shaderLibrary/shading/MultipassTerrainTest.glsl ../core/shaderLibrary/shading/VisualVariables.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/OrderIndependentTransparency ../lib/Program ../lib/RenderSlot ../lib/StencilUtils ../lib/VertexAttribute ../../../../chunks/RibbonLine.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),
function(F,u,w,g,x,G,H,q,I,J,K,L,y,e,v,f,t,p,M,B,h,k,z,C,n){const D=new Map([[k.VertexAttribute.POSITION,0],[k.VertexAttribute.SUBDIVISIONFACTOR,1],[k.VertexAttribute.UV0,2],[k.VertexAttribute.AUXPOS1,3],[k.VertexAttribute.AUXPOS2,4],[k.VertexAttribute.SIZE,6],[k.VertexAttribute.SIZEFEATUREATTRIBUTE,6],[k.VertexAttribute.COLOR,5],[k.VertexAttribute.COLORFEATUREATTRIBUTE,5],[k.VertexAttribute.OPACITYFEATUREATTRIBUTE,7]]);v=function(m){function l(a,d,b){d=m.call(this,a,d,b)||this;d.stippleTextureRepository=
a.stippleTextureRepository;return d}w._inheritsLoose(l,m);var c=l.prototype;c.initializeProgram=function(a){var d=l.shader.get();const b=this.configuration;d=d.build({oitEnabled:b.transparencyPassType===t.TransparencyPassType.Color,output:b.output,slicePlaneEnabled:b.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:b.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:b.stippleOffColorEnabled,stippleRequiresClamp:!0,stippleScaleWithLineWidth:b.stippleScaleWithLineWidth,
stipplePreferContinuous:b.stipplePreferContinuous,capType:b.capType,roundJoins:b.roundJoins,vvColor:b.vvColor,vvSize:b.vvSize,vvInstancingEnabled:!0,vvOpacity:b.vvOpacity,falloffEnabled:b.falloffEnabled,innerColorEnabled:b.innerColorEnabled,multipassTerrainEnabled:b.multipassTerrainEnabled,cullAboveGround:b.cullAboveGround,wireframe:b.wireframe});return new M.Program(a.rctx,d,D)};c.destroy=function(){m.prototype.destroy.call(this);this.stippleTextureRepository.release(this.stipplePattern);this.stippleTextureBind=
this.stipplePattern=null};c.bindPass=function(a,d){y.bindProjectionMatrix(this.program,d.camera.projectionMatrix);this.configuration.output===q.ShaderOutput.Highlight&&J.bindOutputHighlight(this.program,d);d.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",d.inverseViewport),K.bindMultipassTerrainTexture(this.program,d));this.program.setUniform1f("intrinsicWidth",a.width);this.program.setUniform4fv("intrinsicColor",a.color);this.program.setUniform1f("miterLimit","miter"!==a.join?
0:a.miterLimit);this.program.setUniform2fv("nearFar",d.camera.nearFar);this.program.setUniform1f("pixelRatio",d.camera.pixelRatio);this.program.setUniform2f("screenSize",d.camera.fullViewport[2],d.camera.fullViewport[3]);L.bindVisualVariablesUniformsWithOpacity(this.program,a);if(this.stipplePattern!==a.stipplePattern){var b=a.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,b);this.stipplePattern=b}if(this.stippleEnabled){const {pixelSize:r,sdfNormalizer:A,
pixels:N}=x.isSome(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",A);this.program.setUniform1f("stipplePatternTextureSize",N);this.program.setUniform1f("stipplePatternPixelSize",r);this.program.setUniform1f("stipplePatternPixelSizeInv",1/r);this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/d.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",
1/d.camera.perScreenPixelRatio);this.configuration.stippleOffColorEnabled&&(b=x.unwrap(a.stippleOffColor),this.program.setUniform4f("stippleOffColor",b[0],b[1],b[2],3<b.length?b[3]:1))}this.configuration.falloffEnabled&&this.program.setUniform1f("falloff",a.falloff);this.configuration.innerColorEnabled&&(this.program.setUniform4fv("innerColor",x.unwrapOr(a.innerColor,a.color)),this.program.setUniform1f("innerWidth",a.innerWidth*d.camera.pixelRatio))};c.bindDraw=function(a){y.bindView(this.program,
a);this.stippleEnabled&&!this.configuration.draped&&y.bindCameraPosition(this.program,a.origin,a.camera.viewInverseTransposeMatrix);I.bindSliceUniforms(this.program,this.configuration,a.slicePlane,{origin:a.origin,view:a.camera.viewMatrix});this.program.setUniformMatrix4fv("inverseProjectionMatrix",G.invert(H.sm4d.get(),a.camera.projectionMatrix));this.program.rebindTextures()};c._makePipelineState=function(a,d){const b=this.configuration,r=a===t.TransparencyPassType.NONE,A=a===t.TransparencyPassType.FrontFace;
return n.makePipelineState({blending:b.output===q.ShaderOutput.Color||b.output===q.ShaderOutput.Alpha?r?p.blendingDefault:p.oitBlending(a):null,depthTest:{func:p.oitDepthTest(a)},depthWrite:r?b.writeDepth&&n.defaultDepthWriteParams:p.oitDepthWrite(a),colorWrite:n.defaultColorWriteParams,stencilWrite:b.sceneHasOcludees?h.stencilWriteMaskOn:null,stencilTest:b.sceneHasOcludees?d?h.stencilToolMaskBaseParams:h.stencilBaseAllZerosParams:null,polygonOffset:r||A?b.polygonOffset&&E:p.OITPolygonOffset})};c.initializePipeline=
function(){const a=this.configuration,d=a.polygonOffset&&E;a.occluder&&(this._occluderPipelineTransparent=n.makePipelineState({blending:p.blendingDefault,polygonOffset:d,depthTest:h.depthCompareAlways,depthWrite:null,colorWrite:n.defaultColorWriteParams,stencilWrite:null,stencilTest:h.stencilToolTransparentOccluderParams}),this._occluderPipelineOpaque=n.makePipelineState({blending:p.blendingDefault,polygonOffset:d,depthTest:h.depthCompareAlways,depthWrite:null,colorWrite:n.defaultColorWriteParams,
stencilWrite:h.stencilWriteMaskOff,stencilTest:h.stencilToolMaskOccluderParams}),this._occluderPipelineMaskWrite=n.makePipelineState({blending:null,polygonOffset:d,depthTest:h.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:h.stencilWriteMaskOn,stencilTest:h.stencilToolMaskBaseParams}));this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0);return this._makePipelineState(this.configuration.transparencyPassType,!1)};c.getPipelineState=function(a,
d){return d?this._occludeePipelineState:this.configuration.occluder?a===B.RenderSlot.TRANSPARENT_OCCLUDER_MATERIAL?this._occluderPipelineTransparent:a===B.RenderSlot.OCCLUDER_MATERIAL?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:m.prototype.getPipelineState.call(this,a,d)};w._createClass(l,[{key:"stippleEnabled",get:function(){return this.configuration.stippleEnabled&&this.configuration.output!==q.ShaderOutput.Highlight}},{key:"primitiveType",get:function(){return this.configuration.wireframe?
C.PrimitiveType.LINES:C.PrimitiveType.TRIANGLE_STRIP}}]);return l}(v.ShaderTechnique);v.shader=new e.ReloadableShaderModule(z.RibbonLineShader,()=>new Promise((m,l)=>F(["./RibbonLine.glsl"],m,l)));const E={factor:0,units:-4};e=function(m){function l(){var c=m.apply(this,arguments)||this;c.output=q.ShaderOutput.Color;c.occluder=!1;c.slicePlaneEnabled=!1;c.transparent=!1;c.polygonOffset=!1;c.writeDepth=!1;c.draped=!1;c.stippleEnabled=!1;c.stippleOffColorEnabled=!1;c.stippleScaleWithLineWidth=!1;c.stipplePreferContinuous=
!0;c.capType=z.CapType.BUTT;c.roundJoins=!1;c.vvSize=!1;c.vvColor=!1;c.vvOpacity=!1;c.falloffEnabled=!1;c.innerColorEnabled=!1;c.sceneHasOcludees=!1;c.transparencyPassType=t.TransparencyPassType.NONE;c.multipassTerrainEnabled=!1;c.cullAboveGround=!1;c.wireframe=!1;return c}w._inheritsLoose(l,m);return l}(f.ShaderTechniqueConfiguration);g.__decorate([f.parameter({count:q.ShaderOutput.COUNT})],e.prototype,"output",void 0);g.__decorate([f.parameter()],e.prototype,"occluder",void 0);g.__decorate([f.parameter()],
e.prototype,"slicePlaneEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"transparent",void 0);g.__decorate([f.parameter()],e.prototype,"polygonOffset",void 0);g.__decorate([f.parameter()],e.prototype,"writeDepth",void 0);g.__decorate([f.parameter()],e.prototype,"draped",void 0);g.__decorate([f.parameter()],e.prototype,"stippleEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"stippleOffColorEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"stippleScaleWithLineWidth",void 0);
g.__decorate([f.parameter()],e.prototype,"stipplePreferContinuous",void 0);g.__decorate([f.parameter({count:z.CapType.COUNT})],e.prototype,"capType",void 0);g.__decorate([f.parameter()],e.prototype,"roundJoins",void 0);g.__decorate([f.parameter()],e.prototype,"vvSize",void 0);g.__decorate([f.parameter()],e.prototype,"vvColor",void 0);g.__decorate([f.parameter()],e.prototype,"vvOpacity",void 0);g.__decorate([f.parameter()],e.prototype,"falloffEnabled",void 0);g.__decorate([f.parameter()],e.prototype,
"innerColorEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"sceneHasOcludees",void 0);g.__decorate([f.parameter({count:t.TransparencyPassType.COUNT})],e.prototype,"transparencyPassType",void 0);g.__decorate([f.parameter()],e.prototype,"multipassTerrainEnabled",void 0);g.__decorate([f.parameter()],e.prototype,"cullAboveGround",void 0);g.__decorate([f.parameter()],e.prototype,"wireframe",void 0);u.RibbonLineTechnique=v;u.RibbonLineTechniqueConfiguration=e;u.ribbonVertexAttributeLocations=
D;Object.defineProperty(u,"__esModule",{value:!0})});