// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/promiseUtils","./FlowGLResources","./flowRendererUtils"],function(f,g,l,m,n){return function(){function d(b,a,c,e){this._loadImagery=b;this._createStreamlinesMesh=a;this._timeExtent=e;this._rendererSettings=n.createFlowRendererSettings(c)}var h=d.prototype;h.areResourcesCompatible=function(b){let a;(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=(a=b._loadImagery===this._loadImagery)&&b._createStreamlinesMesh===
this._createStreamlinesMesh)&&b._rendererSettings.verticesPerLine===this._rendererSettings.verticesPerLine)&&b._rendererSettings.segmentLength===this._rendererSettings.segmentLength)&&b._rendererSettings.lineSpacing===this._rendererSettings.lineSpacing)&&b._rendererSettings.density===this._rendererSettings.density)&&b._rendererSettings.smoothing===this._rendererSettings.smoothing)&&b._rendererSettings.velocityScale===this._rendererSettings.velocityScale)&&b._rendererSettings.minWeightThreshold===
this._rendererSettings.minWeightThreshold)&&b._rendererSettings.minSpeedThreshold===this._rendererSettings.minSpeedThreshold)&&b._rendererSettings.mergeLines===this._rendererSettings.mergeLines)&&b._rendererSettings.velocityScale===this._rendererSettings.velocityScale)&&b._rendererSettings.interpolate===this._rendererSettings.interpolate)&&b._rendererSettings.lineColor.kind===this._rendererSettings.lineColor.kind)&&b._rendererSettings.lineOpacity.kind===this._rendererSettings.lineOpacity.kind)&&b._rendererSettings.lineRenderWidth.kind===
this._rendererSettings.lineRenderWidth.kind)&&this._rendererSettings.mergeLines&&(a=b._rendererSettings.lineCollisionWidth===this._rendererSettings.lineCollisionWidth);a&&b._timeExtent!==this._timeExtent&&(a=g.isSome(b._timeExtent)&&g.isSome(this._timeExtent)?b._timeExtent.equals(this._timeExtent):!1);return a};h.loadResources=function(){var b=f._asyncToGenerator(function*(a,c){const {extent:e,size:k}=a;l.throwIfAborted(c);a=yield this._loadImagery(e,k[0],k[1],this._timeExtent,c);const {vertexData:p,
indexData:q}=yield this._createStreamlinesMesh(this._rendererSettings,a,c);return new m(p,q,{lineColor:this._rendererSettings.lineColor,lineOpacity:this._rendererSettings.lineOpacity,lineRenderWidth:this._rendererSettings.lineRenderWidth})});return function(a,c){return b.apply(this,arguments)}}();f._createClass(d,[{key:"animated",get:function(){return 0<this._rendererSettings.lineSpeed}},{key:"renderSettings",get:function(){return this._rendererSettings}}]);return d}()});