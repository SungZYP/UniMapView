// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/has ../../../../../core/maybe ../../../../../chunks/rbush ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/OptimizedGeometry ../../../../../layers/graphics/data/StreamFeatureManager ../../../../../layers/graphics/sources/connections/createConnection ./DataTileSource ../support/FeatureSetReaderJSON ../support/UpdateToken".split(" "),function(r,m,t,k,w,p,u,x,y,z,A,B){function C(f,
d){const c=f.weakClone();if(k.isSome(f.geometry)){const a=p.quantizeX(d,f.geometry.coords[0]);f=p.quantizeY(d,f.geometry.coords[1]);c.geometry=new u([],[a,f])}return c}function D(f){switch(f){case "esriGeometryPoint":return C;default:return(d,c)=>{const a=d.weakClone(),b=new u;d=p.quantizeOptimizedGeometry(b,d.geometry,!1,!1,f,c,!1,!1);a.geometry=d;return a}}}function E(f){switch(f){case "esriGeometryPoint":return d=>k.isSome(d.geometry)?{minX:d.geometry.coords[0],minY:d.geometry.coords[1],maxX:d.geometry.coords[0],
maxY:d.geometry.coords[1]}:{minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity};default:return d=>{let c=Infinity,a=Infinity,b=-Infinity,e=-Infinity;k.isSome(d.geometry)&&d.geometry.forEachVertex((g,l)=>{c=Math.min(c,g);a=Math.min(a,l);b=Math.max(b,g);e=Math.max(e,l)});return{minX:c,minY:a,maxX:b,maxY:e}}}}let F=function(){function f(c,a){this.onUpdate=c;this._geometryType=a;this._objectIdToFeature=new Map}var d=f.prototype;d.add=function(c){this._objectIdToFeature.set(c.objectId,c);this._index=
null};d.get=function(c){return this._objectIdToFeature.has(c)?this._objectIdToFeature.get(c):null};d.forEach=function(c){this._objectIdToFeature.forEach(c)};d.search=function(c){if(!this._index){{var a=this._features;const b=w.rbush(9,E(this._geometryType));b.load(a);a=b}this._index=a}return this._index.search({minX:c.bounds[0],minY:c.bounds[1],maxX:c.bounds[2],maxY:c.bounds[3]})};d.removeById=function(c){const a=this._objectIdToFeature.get(c);return a?(this._objectIdToFeature.delete(c),this._index=
null,a):null};d.update=function(c,a){this.onUpdate(c,a)};m._createClass(f,[{key:"_features",get:function(){const c=[];this._objectIdToFeature.forEach(a=>c.push(a));return c}},{key:"size",get:function(){return this._objectIdToFeature.size}}]);return f}();t=function(f){function d(a){var b=f.call(this,a)||this;b.type="geoevent";b._dataReceiveEventEnabled=!1;b._level=0;b._updateInfo={websocket:0,client:0};var {outSR:e}=a;const {geometryType:g,objectIdField:l,timeInfo:G,purgeOptions:H,source:I,spatialReference:J,
serviceFilter:K,maxReconnectionAttempts:L,maxReconnectionInterval:M,updateInterval:N,enableDataReceived:O,customParameters:P}=a.serviceInfo,v=new F(b._onUpdate.bind(m._assertThisInitialized(b)),g),Q=new x.StreamFeatureManager(v,l,G,H);e=y.createConnection(I,J,e,g,K,L,M,P);b._store=v;b._manager=Q;b._connection=e;b._quantize=D(g);b._dataReceiveEventEnabled=O;b._handles=[b._connection.on("feature",h=>b._onFeature(h)),b._connection.watch("connectionStatus",h=>b.events.emit("connectionStatus",h)),b._connection.watch("errorString",
h=>b.events.emit("errorString",h))];b._initUpdateInterval=()=>{let h=performance.now();b._updateIntervalId=setInterval(()=>{var q=performance.now(),n=q-h;2500<n&&(h=q,q=Math.round(b._updateInfo.client/(n/1E3)),n=Math.round(b._updateInfo.websocket/(n/1E3)),b._updateInfo.client=0,b._updateInfo.websocket=0,b.events.emit("updateRate",{client:q,websocket:n}));a.canAcceptRequest()&&b._manager.checkForUpdates()},N)};b._initUpdateInterval();return b}m._inheritsLoose(d,f);var c=d.prototype;c.destroy=function(){f.prototype.destroy.call(this);
this._clearUpdateInterval();this._handles.forEach(a=>a.remove());this._connection.destroy()};c._fetchDataTile=function(){};c.pauseStream=function(){this._clearUpdateInterval()};c.resumeStream=function(){this._initUpdateInterval()};c.enableEvent=function(a,b){"data-received"===a&&(this._dataReceiveEventEnabled=b)};c.subscribe=function(a){f.prototype.subscribe.call(this,a);const b=this._subscriptions.get(a.id);this._level=a.level;const e=this._getTileFeatures(a);this._onMessage({type:"append",id:a.key.id,
addOrUpdate:e,end:!0});b.didSend=!0};c.unsubscribe=function(a){f.prototype.unsubscribe.call(this,a)};c.readers=function*(a){a=this._subscriptions.get(a);const {tile:b}=a;yield this._getTileFeatures(b);for(const e of a.requests.stream.entries)k.isSome(e)&&k.isSome(e.addOrUpdate)&&(yield e.addOrUpdate)};c.createTileQuery=function(a){throw Error("Service does not support tile  queries");};c.resend=function(){var a=m._asyncToGenerator(function*(){this._subscriptions.forEach(b=>{({tile:b}=b);b={type:"append",
id:b.id,addOrUpdate:this._getTileFeatures(b),end:!0};this._onMessage(b)})});return function(){return a.apply(this,arguments)}}();c._getTileFeatures=function(a){const b=this._store.search(a).map(e=>this._quantize(e,a.transform));return A.FeatureSetReaderJSON.fromOptimizedFeatures(b,this._serviceInfo,a.transform)};c._onFeature=function(a){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",a);const b=p.convertFromFeature(a,this._serviceInfo.geometryType,!1,!1,
this._serviceInfo.objectIdField);this._manager.add(b)}catch(b){}};c._clearUpdateInterval=function(){clearInterval(this._updateIntervalId);this._updateIntervalId=0};c._onUpdate=function(a,b){k.isSome(a)&&(this._updateInfo.client+=a.length);this._subscriptions.forEach((e,g)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:g,addOrUpdate:null,clear:!0,end:!1})});this._subscriptions.forEach((e,g)=>{if(e.didSend&&e.tile.level===this._level){var l=this._getTileFeatures(e.tile);
g={type:"append",id:g,addOrUpdate:l,remove:[],end:!0,status:B.UpdateToken.empty()};e.requests.stream.enqueue(g);this._onMessage(g)}})};m._createClass(d,[{key:"updating",get:function(){return!1}}]);return d}(z.DataTileSource);r.GeoEventSource=t;Object.defineProperty(r,"__esModule",{value:!0})});