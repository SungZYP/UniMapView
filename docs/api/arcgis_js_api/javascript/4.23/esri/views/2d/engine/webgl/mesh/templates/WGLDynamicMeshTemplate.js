// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/Logger","../../../../../../symbols/cim/cimAnalyzer","../../../../../../symbols/cim/utils","./WGLMeshTemplate"],function(u,v,w,l,x){const p=v.getLogger("esri.views.2d.engine.webgl.WGLDynamicMeshTemplate");return function(q){function m(d){var b=q.call(this)||this;b._ongoingMaterialRequestMap=new Map;b._materialCache=new Map;b._dynamicPropertyMap=new Map;b._cimLayer=d;return b}u._inheritsLoose(m,q);m.prototype.analyze=
function(d,b,g,h,f){if(f&&0===f.length)return null;const r=f&&0<f.length;b=b.readLegacyFeature();const n=this._materialCache;var a=this._cimLayer.materialHash;if(!a)return p.error("A Dynamic mesh template must have a material hash value or function!"),Promise.reject(null);const c="function"===typeof a?a(b,g,h):a;if(n.has(c))return d=n.get(c),Promise.resolve(d);if(a=this._ongoingMaterialRequestMap.get(c))return a;a=this._cimLayer;var e=w.analyzeCIMResource(a.cim,this._cimLayer.materialOverrides);e.mosaicHash=
c;const {type:t,url:y}=a;e={cim:e,type:t,mosaicHash:c,url:y,size:null,dashTemplate:null,text:null,fontName:null};switch(t){case "marker":e.size=l.evaluateValueOrFunction(a.size,b,g,h);break;case "line":e.dashTemplate=a.dashTemplate;break;case "text":e.text=l.evaluateValueOrFunction(a.text,b,g,h),e.fontName=l.evaluateValueOrFunction(a.fontName,b,g,h)}d=d.getMosaicItem(e,f).then(k=>{r||(this._ongoingMaterialRequestMap.delete(c),n.set(c,k));return k}).catch(k=>{this._ongoingMaterialRequestMap.delete(c);
p.error(".analyze()",k.message);return null});r||this._ongoingMaterialRequestMap.set(c,d);return d};return m}(x)});