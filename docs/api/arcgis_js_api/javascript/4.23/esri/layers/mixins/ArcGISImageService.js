// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators/aliasOf ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../core/unitUtils ../../kernel ../../rest/query/support/AttachmentInfo ../../rest/support/AttachmentQuery ../../rest/query/executeForCount ../../geometry/Extent ../../geometry/Geometry ../../geometry/Multipoint ../../geometry/Point ../../geometry/Polygon ../../geometry/Polyline ../../geometry/support/normalizeUtils ../../core/pbf ../../geometry/support/spatialReferenceUtils ../../rest/support/Query ../../rest/query/executeForIds ../../rest/query/executeQueryJSON ../../core/has ../graphics/featureConversionUtils ../../rest/support/FeatureSet ../../rest/support/RelationshipQuery ../../rest/support/TopFeaturesQuery ../../rest/support/ImageAngleParameters ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImagePixelLocationParameters ../../rest/support/ImageSampleParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(Z,v,k,Na,ma,T,z,C,na,aa,oa,t,pa,qa,M,D,n,B,ra,G,ba,ca,sa,H,ta,ua,I,va,J,K,U,wa,V,xa,O,ya,E,Oa,Pa,Qa,Ra,za,N,Sa,Ta,da,Aa,Ua,Va,Wa,Xa,W,Ba,Ca,Ya,Za,ea,$a,ab,Da,fa,ha,Ea,Fa,Ga,P){function Ha(g){if(!g)return null;g=JSON.stringify(g).match(/"rasterFunction":"(.*?")/gi);return(g=null==g?void 0:g.map(F=>F.replace('"rasterFunction":"',"").replace('"',"")))?g.join("/"):null}const ia=oa.getLogger("esri.layers.mixins.ArcGISImageService"),X=na.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",
S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ia=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ja=n.ensureRange(D.ensureNumber,{min:0,max:255});Z.ArcGISImageService=g=>{g=function(F){function Q(){var b=F.apply(this,arguments)||this;b._functionRasterInfos={};b._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};b._defaultServiceMosaicRule=null;b._serviceSourceType=null;b._serviceSupportsMosaicRule=null;b.rasterAttributeTableFieldPrefix=
"Raster.";b.adjustAspectRatio=null;b.bandCount=null;b.bandIds=void 0;b.capabilities=null;b.compressionQuality=void 0;b.compressionTolerance=.01;b.copyright=null;b.definitionExpression=null;b.exportImageServiceParameters=null;b.rasterInfo=null;b.fields=null;b.fullExtent=null;b.hasMultidimensions=!1;b.imageMaxHeight=4100;b.imageMaxWidth=4100;b.interpolation=void 0;b.minScale=0;b.maxScale=0;b.multidimensionalInfo=null;b.noData=null;b.noDataInterpretation=void 0;b.objectIdField=null;b.geometryType="polygon";
b.typeIdField=null;b.types=[];b.pixelSizeX=null;b.pixelSizeY=null;b.pixelFilter=null;b.raster=void 0;b.viewId=void 0;b.symbolizer=null;b.rasterAttributeTable=null;b.rasterFunctionInfos=null;b.serviceDataType=null;b.spatialReference=null;b.pixelType=null;b.serviceRasterInfo=null;b.sourceJSON=null;b.url=null;b.version=void 0;return b}v._inheritsLoose(Q,F);var h=Q.prototype;h.initialize=function(){this._set("exportImageServiceParameters",new sa.ExportImageServiceParameters({layer:this}))};h.readDefaultServiceMosaicRule=
function(b,a){return this._serviceSupportsMosaicRule?I.fromJSON(a):null};h.readServiceSourceType=function(b,a){return this._isMosaicDataset(a)?"mosaic-dataset":"raster-dataset"};h.readServiceSupportsMosaicRule=function(b,a){return this._isMosaicRuleSupported(a)};h.readBandIds=function(b,a){if(Array.isArray(b)&&0<b.length&&b.every(c=>"number"===typeof c))return b};h.readCapabilities=function(b,a){return this._readCapabilities(a)};h.writeCompressionQuality=function(b,a,c){null!=b&&"lerc"!==this.format&&
(a[c]=b)};h.writeCompressionTolerance=function(b,a,c){"lerc"===this.format&&null!=b&&(a[c]=b)};h.readFormat=function(b,a){return"esriImageServiceDataTypeVector-UV"===a.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===a.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};h.readMinScale=function(b,a){return null!=a.minLOD&&null!=a.maxLOD?b:0};h.readMaxScale=function(b,a){return null!=a.minLOD&&null!=a.maxLOD?b:0};h.readMosaicRule=function(b,a){return(b=b||a.mosaicRule)?I.fromJSON(b):
this._isMosaicRuleSupported(a)?I.fromJSON(a):null};h.writeMosaicRule=function(b,a,c){b=this.mosaicRule;const d=this.definitionExpression;b?d&&d!==b.where&&(b=b.clone(),b.where=d):d&&(b=new I({where:d}));this._isValidCustomizedMosaicRule(b)&&(a[c]=b.toJSON())};h.writeNoData=function(b,a,c){null!=b&&"number"===typeof b&&(a[c]=Ja(b))};h.readObjectIdField=function(b,a){b||(b=(b=a.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&b[0]&&b[0].name);return b};h.readRenderer=function(b,a,c){var d,
e;b=null==a?void 0:null==(d=a.layerDefinition)?void 0:null==(e=d.drawingInfo)?void 0:e.renderer;c=T.read(b,c);if(null==c)return null;"vector-field"===c.type&&a.symbolTileSize&&!b.symbolTileSize&&(c.symbolTileSize=a.symbolTileSize);ua.isSupportedRendererType(c)||ia.warn("ArcGISImageService","Imagery layer doesn't support given renderer type.");return c};h.writeRenderer=function(b,a,c){a.layerDefinition=a.layerDefinition||{};a.layerDefinition.drawingInfo=a.layerDefinition.drawingInfo||{};a.layerDefinition.drawingInfo.renderer=
b.toJSON();"vector-field"===b.type&&(a.symbolTileSize=b.symbolTileSize)};h.readRenderingRule=function(b,a){b=a.rasterFunctionInfos;return a.renderingRule||b&&b.length&&"None"!==b[0].name?this._isRFTJson(a.renderingRule)?K.fromJSON({rasterFunctionDefinition:a.renderingRule}):K.fromJSON(a.renderingRule||{rasterFunctionInfos:a.rasterFunctionInfos}):null};h.writeRenderingRule=function(b,a,c){b=b.toJSON();a[c]=b.rasterFunctionDefinition?b.rasterFunctionDefinition:b};h.readSpatialReference=function(b,a){return(b=
b||a.extent.spatialReference)?P.fromJSON(b):null};h.readPixelType=function(b){return X.fromJSON(b)||b};h.writePixelType=function(b,a,c){if(t.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)a[c]=X.toJSON(b)};h.readVersion=function(b,a){(b=a.currentVersion)||(b=a.hasOwnProperty("fields")||a.hasOwnProperty("timeInfo")?10:9.3);return b};h.applyFilter=function(b){let a=b;this.pixelFilter&&(a=this._clonePixelData(b),this.pixelFilter(a));return a};h.applyRenderer=function(){var b=
v._asyncToGenerator(function*(a,c){var d=a;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());const e=this._rasterJobHandler.instance,{bandIds:f}=this;e?(d&&(this.symbolizer.bind(),yield e.updateSymbolizer(this.symbolizer,c),this._cachedRendererJson=this.renderer.toJSON()),c=yield e.symbolize({bandIds:f,...a},c),d={extent:a.extent,pixelBlock:c}):d={extent:a.extent,pixelBlock:this.symbolizer.symbolize({bandIds:f,
...a})}}return d});return function(a,c){return b.apply(this,arguments)}}();h.destroy=function(){this._shutdownJobHandler()};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h.computeAngles=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeAngles)throw new C("imagery-layer:compute-angles",
"this operation is not supported on the input image service");a=D.ensureClass(Da,a).clone();return E.computeAngles(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.computePixelSpaceLocations=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputePixelLocation)throw new C("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");
a=D.ensureClass(Ea,a).clone();return E.computePixelSpaceLocations(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.computeHistograms=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeHistograms)throw new C("imagery-layer:compute-histograms","this operation is not supported on the input image service");a=D.ensureClass(fa,a).clone();const {raster:d,
mosaicRule:e,renderingRule:f}=this;f&&null==a.renderingRule&&(a.renderingRule=f);e&&null==a.mosaicRule&&(a.mosaicRule=e);d&&null==a.raster&&(a.raster=d);return E.computeHistograms(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.computeStatisticsHistograms=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new C("imagery-layer:compute-statistics-histograms",
"this operation is not supported on the input image service");a=D.ensureClass(fa,a).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==a.renderingRule&&(a.renderingRule=f);e&&null==a.mosaicRule&&(a.mosaicRule=e);d&&null==a.raster&&(a.raster=d);return E.computeStatisticsHistograms(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.getField=function(b){const {fieldsIndex:a}=this;return t.isSome(a)?a.get(b):void 0};h.getFieldDomain=function(b,
a){return(b=this.getField(b))?b.domain:null};h.fetchImage=function(b,a,c,d={}){if(null==b||null==a||null==c)return Promise.reject(new C("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const e=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:d.signal}):null;return pa.when(e).then(f=>{f&&(this.rasterInfo=f);f={imageServiceParameters:this.getExportImageServiceParameters(b,a,c,d.timeExtent),
imageProps:{extent:b,width:a,height:c,format:this.format},requestAsImageElement:d.requestAsImageElement&&!this.pixelFilter||!1,signal:d.signal};return this._requestArrayBuffer(f)})};h.fetchKeyProperties=function(b){return z(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version?null==b?void 0:b.renderingRule:null})}).then(a=>a.data)};h.fetchRasterAttributeTable=function(b){return 10.1>this.version?Promise.reject(new C("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):
z(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version?null==b?void 0:b.renderingRule:null})}).then(a=>ea.fromJSON(a.data))};h.getCatalogItemRasterInfo=function(){var b=v._asyncToGenerator(function*(a,c){var d=z(this.parsedUrl.path+"/"+a+"/info",{query:this._getQueryParams(),...c}).then(e=>e.data);a=z(this.parsedUrl.path+"/"+a+"/info/keyProperties",{query:this._getQueryParams(),...c}).then(e=>e.data).catch(()=>{});d=yield Promise.all([d,a]);if(d[0])return a=
N.fromJSON(d[0].extent),c=d[0].statistics?d[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null,new U({bandCount:d[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new da({x:d[0].pixelSizeX,y:d[0].pixelSizeY,spatialReference:a.sr}),pixelType:d[0].pixelType.toLowerCase(),statistics:c,histograms:d[0].histograms,keyProperties:d[1]||{}})});return function(a,c){return b.apply(this,arguments)}}();h.getCatalogItemICSInfo=function(){var b=v._asyncToGenerator(function*(a,c){var {data:d}=
yield z(this.parsedUrl.path+"/"+a+"/info/ics",{query:this._getQueryParams(),...c});if(d=d&&d.ics){var e=null;try{e=(yield z(this.parsedUrl.path+"/"+a+"/info",{query:this._getQueryParams(),...c})).data.extent}catch{}if(!e||!e.spatialReference)return{ics:d,icsToPixelTransform:null,icsExtent:null,northDirection:null};var f=10.7<=this.version?z(this.parsedUrl.path+"/"+a+"/info/icstopixel",{query:this._getQueryParams(),...c}).then(A=>A.data).catch(()=>({})):{},l=e.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",
geometries:[e]}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+a};p=z(this.parsedUrl.path+"/project",{query:this._getQueryParams(p),...c}).then(A=>A.data).catch(()=>({}));var m=(e.xmin+e.xmax)/2,q=(e.ymax-e.ymin)/6;e=e.ymin+q;var u=[];for(let A=0;5>A;A++)u.push({x:m,y:e+q*A});a={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:u}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+a};c=z(this.parsedUrl.path+"/project",{query:this._getQueryParams(a),...c}).then(A=>A.data).catch(()=>({}));
f=yield Promise.all([f,p,c]);c=f[0].ipxf;if(null==c){var w,r,x;a=null==(w=d.geodataXform)?void 0:w.xf_0;"topup"===(null==a?void 0:null==(r=a.name)?void 0:r.toLowerCase())&&6===(null==a?void 0:null==(x=a.coefficients)?void 0:x.length)&&(c={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:a.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}if(w=N.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]))w.spatialReference=new P({wkid:0,imageCoordinateSystem:d});r=
f[2].geometries?f[2].geometries.filter(A=>null!=A&&null!=A.x&&null!=A.y&&"NaN"!==A.x&&"NaN"!==A.y):[];x=r.length;if(3>x)return{ics:d,icsToPixelTransform:c,icsExtent:w,northDirection:null};l=p=a=f=0;for(m=0;m<x;m++)f+=r[m].x,a+=r[m].y,p+=r[m].x*r[m].x,l+=r[m].x*r[m].y;x=(x*l-f*a)/(x*p-f*f);f=0;a=r[4].x>r[0].x;r=r[4].y>r[0].y;Infinity===x?f=r?90:270:0===x?f=a?0:180:0<x?f=a?180*Math.atan(x)/Math.PI:180*Math.atan(x)/Math.PI+180:0>x&&(f=r?180+180*Math.atan(x)/Math.PI:360+180*Math.atan(x)/Math.PI);return{ics:d,
icsToPixelTransform:c,icsExtent:w,northDirection:f}}});return function(a,c){return b.apply(this,arguments)}}();h.generateRasterInfo=function(){var b=v._asyncToGenerator(function*(a,c){var d;if((!a||"none"===(null==a?void 0:null==(d=a.functionName)?void 0:d.toLowerCase())||this._isVectorFieldResampleFunction(a))&&t.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;d=Ha(a);if(this._functionRasterInfos[d])return this._functionRasterInfos[d];a=this._generateRasterInfo(a,c);this._functionRasterInfos[d]=
a;try{return yield a}catch{return this._functionRasterInfos[d]=null}});return function(a,c){return b.apply(this,arguments)}}();h.getExportImageServiceParameters=function(b,a,c,d){var e;b=b.clone().shiftCentralMeridian();const f=E.getImageSpatialReferenceQueryParameter(b.spatialReference,this.parsedUrl.path);t.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const l=this.exportImageServiceParameters.toJSON(),
{bandIds:p,noData:m}=l;var {renderingRule:q}=l,u=null==(e=this.renderingRule)?void 0:e.rasterFunctionDefinition;e=!this.renderer||"raster-stretch"===this.renderer.type;null!=p&&p.length&&this._hasRenderingRule(this.renderingRule)&&!u&&e?(u={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}},"Stretch"===q.rasterFunction?(u.rasterFunctionArguments.Raster=q.rasterFunctionArguments.Raster,q.rasterFunctionArguments.Raster=u):"Colormap"===q.rasterFunction?(e=q.rasterFunctionArguments.Raster,
"Stretch"===(null==e?void 0:e.rasterFunction)?(u.rasterFunctionArguments.Raster=e.rasterFunctionArguments.Raster,e.rasterFunctionArguments.Raster=u):(u.rasterFunctionArguments.Raster=e,q.rasterFunctionArguments.Raster=u)):(u.rasterFunctionArguments.Raster=q,q=u),l.bandIds=void 0):l.bandIds=null==p?void 0:p.join(",");m instanceof Array&&0<m.length&&(l.noData=m.join(","));u=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d):null;l.mosaicRule=
u&&JSON.stringify(u);l.renderingRule=this._getRenderingRuleString(K.fromJSON(q));q={};if(d){const {start:w,end:r}=d.toJSON();if(w&&r&&w===r)q.time=""+w;else if(null!=w||null!=r)q.time=`${null==w?"null":w},${null==r?"null":r}`}return{bbox:b.xmin+","+b.ymin+","+b.xmax+","+b.ymax,bboxSR:f,imageSR:f,size:a+","+c,...l,...q}};h.getSamples=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsGetSamples)throw new C("imagery-layer:get-samples",
"getSamples operation is not supported on the input image service");a=D.ensureClass(Fa,a).clone();const {raster:d}=this;d&&null==a.raster&&(a.raster=d);return E.getSamples(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.identify=function(){var b=v._asyncToGenerator(function*(a,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsIdentify)throw new C("imagery-layer:query-rasters","query operation is not supported on the input image service");
a=D.ensureClass(ha,a).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==a.renderingRule&&(a.renderingRule=f);if(e&&null==a.mosaicRule){const l=this._combineMosaicRuleWithTimeExtent(e,a.timeExtent);a.mosaicRule=t.unwrap(l)}d&&null==a.raster&&(a.raster=d);return E.identify(this.url,a,this._getRequestOptions(c))});return function(a,c){return b.apply(this,arguments)}}();h.createQuery=function(){const b=new W;b.outFields=["*"];b.returnGeometry=!0;b.where=this.definitionExpression||"1\x3d1";
return b};h.queryRasters=function(){var b=v._asyncToGenerator(function*(a,c){({query:a,requestOptions:c}=yield this._prepareForQuery(a,c));return Ca.executeQueryJSON(this.url,a,c)});return function(a,c){return b.apply(this,arguments)}}();h.queryObjectIds=function(){var b=v._asyncToGenerator(function*(a,c){({query:a,requestOptions:c}=yield this._prepareForQuery(a,c));return Ba.executeForIds(this.url,a,c)});return function(a,c){return b.apply(this,arguments)}}();h.queryRasterCount=function(){var b=
v._asyncToGenerator(function*(a,c){({query:a,requestOptions:c}=yield this._prepareForQuery(a,c));return za.executeForCount(this.url,a,c)});return function(a,c){return b.apply(this,arguments)}}();h.queryVisibleRasters=function(){var b=v._asyncToGenerator(function*(a,c){if(!a)throw new C("imagery-layer: query-visible-rasters","missing query parameter");const {pixelSize:d,returnDomainValues:e,returnTopmostRaster:f,showNoDataRecords:l}=c||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};
let p=!1;var m=null,q=null;const u=this.rasterFunctionNamesIndex;t.isSome(a.outFields)&&(p=a.outFields.some(y=>-1===y.toLowerCase().indexOf("raster.servicepixelvalue")),10.4<=this.version&&(q=a.outFields.filter(y=>-1<y.toLowerCase().indexOf("raster.servicepixelvalue")&&24<y.length).map(y=>{y=y.slice(25);return[this._updateRenderingRulesFunctionName(y,u),y]}),m=q.map(y=>new K({functionName:y[0]})),q=q.map(y=>y[1]),0===m.length?this.renderingRule?(m.push(this.renderingRule),q.push(this.renderingRule.functionName)):
m=null:this.renderingRule&&!m.some(y=>y.functionName===this.renderingRule.functionName)&&(m.push(this.renderingRule),q.push(this.renderingRule.functionName))));const w=t.isNone(a.outSpatialReference)||a.outSpatialReference.equals(this.spatialReference),r=a.timeExtent||this.timeExtent,x=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,r);m=this._getQueryParams({geometry:a.geometry,timeExtent:r,mosaicRule:x,renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:m,
pixelSize:d,returnCatalogItems:p,returnGeometry:w,raster:this.raster,maxItemCount:f?1:null});delete m.f;m=new ha(m);try{var A,ja;yield this.generateRasterInfo(this.renderingRule);const y=yield E.identify(this.url,m,{signal:null==c?void 0:c.signal,query:{...this.customParameters}}),ka=a.outFields,Ka=-1<y.value.toLowerCase().indexOf("nodata");if(!(p&&!w&&(null==y?0:null==(A=y.catalogItems)?0:A.features.length))||!l&&Ka)return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:q,
showNoDataRecords:l,templateFields:ka});const R=this.objectIdField||"ObjectId",la=y.catalogItems.features,La=la.map(S=>{var L;return null==(L=S.attributes)?void 0:L[R]}),Ma=new W({objectIds:La,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[R]}),Y=yield this.queryRasters(Ma);null!=Y&&null!=(ja=Y.features)&&ja.length&&Y.features.forEach(S=>{la.forEach(L=>{L.attributes[R]===S.attributes[R]&&(L.geometry=new Aa(S.geometry),t.isSome(a.outSpatialReference)&&(L.geometry.spatialReference=
a.outSpatialReference))})});return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:q,showNoDataRecords:l,templateFields:ka})}catch{throw new C("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");}});return function(a,c){return b.apply(this,arguments)}}();h.fetchVariableStatisticsHistograms=function(){var b=v._asyncToGenerator(function*(a,c){var d=z(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:a}),signal:c}).then(e=>
{var f;return null==(f=e.data)?void 0:f.statistics});a=z(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:a}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.histograms});d=yield Promise.all([d,a]);d[0]&&d[0].forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(a,c){return b.apply(this,arguments)}}();h.createStreamlinesMesh=function(){var b=v._asyncToGenerator(function*(a,c){const d=this._rasterJobHandler.instance;
return d?d.createStreamlinesMesh(a,c):Ga.createStreamlinesMesh(a.rendererSettings,a.flowData,t.isSome(c.signal)?c.signal:(new AbortController).signal)});return function(a,c){return b.apply(this,arguments)}}();h._fetchService=function(){var b=v._asyncToGenerator(function*(a){yield this._fetchServiceInfo(a);t.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);var c=this.sourceJSON;c=t.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:c,
signal:a}).then(e=>{this._set("serviceRasterInfo",e);return e});a=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:a}):null;const d=this._getRasterFunctionInfos();return Promise.all([c,a,d]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]);e[2]&&this._set("rasterFunctionInfos",e[2]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),ia.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));
this._set("renderer",this._configRenderer(this.renderer));this.watch("renderingRule",f=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(f).then(l=>{l&&(this.rasterInfo=l)})});(e=t.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo)&&this._updateMultidimensionalDefinition(e)})});return function(a){return b.apply(this,arguments)}}();h._combineMosaicRuleWithTimeExtent=function(b,a){var c=this.timeInfo;if(t.isNone(b)||t.isNone(this.multidimensionalInfo)||
t.isNone(a)||t.isNone(null==c?void 0:c.startField))return b;const {startField:d}=c;b=b.clone();if("mosaic-dataset"===this._serviceSourceType){var e;b.multidimensionalDefinition=null==(e=b.multidimensionalDefinition)?void 0:e.filter(m=>m.dimensionName!==d);return this._cleanupMultidimensionalDefinition(b)}b.multidimensionalDefinition=b.multidimensionalDefinition||[];c=b.multidimensionalDefinition.filter(m=>m.dimensionName===d);e=t.isSome(a.start)?a.start.getTime():null;a=t.isSome(a.end)?a.end.getTime():
null;const f=null==e||null==a||e===a,l=f?[e||a]:[[e,a]],p=10.8<=this.version;c.length?c.forEach(m=>{m.dimensionName===d&&(p?(m.dimensionName=null,m.isSlice=null,m.values=null):(m.isSlice=f,m.values=l))}):p||(a=b.multidimensionalDefinition.filter(m=>null!=m.variableName&&null==m.dimensionName),a.length?a.forEach(m=>{m.dimensionName=d;m.isSlice=f;m.values=l}):b.multidimensionalDefinition.push(new ca({variableName:"",dimensionName:d,isSlice:f,values:l})));return this._cleanupMultidimensionalDefinition(b)};
h._cleanupMultidimensionalDefinition=function(b){if(t.isNone(b))return null;b.multidimensionalDefinition&&(b.multidimensionalDefinition=b.multidimensionalDefinition.filter(a=>!(!a.variableName&&!a.dimensionName)),0===b.multidimensionalDefinition.length&&(b.multidimensionalDefinition=null));return"mosaic-dataset"!==this._serviceSourceType&&null==b.multidimensionalDefinition?null:b};h._prepareForQuery=function(){var b=v._asyncToGenerator(function*(a,c){var d;yield this._fetchCapabilities(null==(d=c)?
void 0:d.signal);if(!this.capabilities.operations.supportsQuery)throw new C("imagery-layer:query-rasters","query operation is not supported on the input image service");a=t.isSome(a)?D.ensureClass(W,a):this.createQuery();c=this._getRequestOptions(c);this.raster&&(c.query={...c.query,raster:this.raster});return{query:a,requestOptions:c}});return function(a,c){return b.apply(this,arguments)}}();h._initJobHandler=function(){var b=v._asyncToGenerator(function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;
const a=new wa;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=a},()=>null);yield this._rasterJobHandler.connectionPromise});return function(){return b.apply(this,arguments)}}();h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0};h._isSupportedRenderer=function(b){const {rasterInfo:a,
renderingRule:c}=this;return"unique-value"===b.type&&this._hasRenderingRule(c)&&1===a.bandCount&&["u8","s8"].includes(a.pixelType)||O.getSupportedRendererTypes(this.rasterInfo).includes(this.renderer.type)};h._fetchCapabilities=function(){var b=v._asyncToGenerator(function*(a){if(this.capabilities)return this.capabilities;yield this._fetchServiceInfo(a);return this.capabilities});return function(a){return b.apply(this,arguments)}}();h._fetchServiceInfo=function(){var b=v._asyncToGenerator(function*(a){var c;
let d=this.sourceJSON;if(!d){const {data:e,ssl:f}=yield z(this.parsedUrl.path,{query:this._getQueryParams(),signal:a});this.sourceJSON=d=e;f&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<(null==(c=d.capabilities)?void 0:c.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")))throw new C("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(d,{origin:"service",url:this.parsedUrl})});return function(a){return b.apply(this,arguments)}}();
h._isMosaicDataset=function(b){var a;return b.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===b.serviceSourceType:0<(null==(a=b.fields)?void 0:a.length)};h._isMosaicRuleSupported=function(b){var a;if(!b)return!1;const c=this._isMosaicDataset(b);b=10.71<=b.currentVersion&&b.hasMultidimensions&&b.timeInfo&&!(b.objectIdField&&1<(null==(a=b.fields)?void 0:a.length));return c||b};h._isVectorFieldResampleFunction=function(b){if(!t.isSome(b))return!1;const {functionName:a,functionArguments:c}=
b;b="resample"===(null==a?void 0:a.toLowerCase());const d=(null==c?void 0:c.ResampleType)||(null==c?void 0:c.resampleType);return b&&(7===d||10===d)};h._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};h._configRenderer=function(b){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){const d=O.getDefaultBandCombination(this.rasterInfo);!d||3===this.rasterInfo.bandCount&&0===d[0]&&1===d[1]&&2===d[2]||(this.bandIds=
d)}if(!b){var a,c;b=O.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(a=this.mosaicRule)?void 0:null==(c=a.multidimensionalDefinition)?void 0:c[0].variableName})}a=O.normalizeRendererJSON(b.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new ya({rendererJSON:a,rasterInfo:this.rasterInfo});this.symbolizer.bind().success||(this.symbolizer=null)}return b};h._clonePixelData=function(b){return null==
b?b:{extent:b.extent&&b.extent.clone(),pixelBlock:t.isSome(b.pixelBlock)&&b.pixelBlock.clone()}};h._getQueryParams=function(b){t.isSome(null==b?void 0:b.renderingRule)&&"string"!==typeof b.renderingRule&&(b.renderingRule=this._getRenderingRuleString(b.renderingRule));const {raster:a,viewId:c}=this;return{raster:a,viewId:c,f:"json",...b,...this.customParameters}};h._getRequestOptions=function(b){return{...b,query:{...null==b?void 0:b.query,...this.customParameters}}};h._decodePixelBlock=function(b,
a,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:b,options:a}):V.decode(b,a,c)};h._fetchMultidimensionalInfo=function(){var b=v._asyncToGenerator(function*(a){var c;a=yield z(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:a}).then(d=>{var e;return null==(e=d.data)?void 0:e.multidimensionalInfo});null!=(c=a.variables)&&c.length&&a.variables.forEach(d=>{var e;null!=(e=d.statistics)&&e.length&&d.statistics.forEach(f=>{f.avg=f.mean;
f.stddev=f.standardDeviation})});return a});return function(a){return b.apply(this,arguments)}}();h._getRasterFunctionInfos=function(){var b=v._asyncToGenerator(function*(a){const c=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return c;if(c&&10.3<=this.version){var d;return 1===c.length&&"none"===c[0].name.toLowerCase()?c:null==(d=(yield z(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:a})).data)?void 0:d.rasterFunctionInfos}return null});return function(a){return b.apply(this,
arguments)}}();h._fetchAuxiliaryRasterInfo=function(){var b=v._asyncToGenerator(function*(a){const c=a&&a.serviceInfo;if(!c)return Promise.reject(new C("imagery-layer:fetch-metadata","valid serviceInfo is required"));var d=a.signal,e=c.hasRasterAttributeTable&&10.1<=this.version?z(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=this.version?null==a?void 0:a.renderingRule:null}),signal:d}).then(p=>ea.fromJSON(p.data)).catch(()=>null):!1,f=c.hasColormap&&
10.1<=this.version?z(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:10.6<=this.version?null==a?void 0:a.renderingRule:null}),signal:d}).then(p=>{var m;return null==(m=p.data)?void 0:m.colormap}):!1,l=c.hasHistograms&&10.1<=this.version?z(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=this.version?null==a?void 0:a.renderingRule:null}),signal:d}).then(p=>{var m;return null==(m=p.data)?void 0:m.histograms}):!1;a=10.3<=this.version?z(this.parsedUrl.path+
"/keyProperties",{query:this._getQueryParams({renderingRule:null==a?void 0:a.renderingRule}),signal:d}).then(p=>p.data).catch(()=>{}):!1;d=c.hasMultidimensions&&10.3<=this.version?this._fetchMultidimensionalInfo():!1;e=yield Promise.all([e,f,l,a,d]);f=null;if(c.minValues&&c.minValues.length===c.bandCount)for(f=[],l=0;l<c.minValues.length;l++)f.push({min:c.minValues[l],max:c.maxValues[l],avg:c.meanValues[l],stddev:c.stdvValues[l]});l=Math.ceil((c.extent.xmax-c.extent.xmin)/c.pixelSizeX-.1);a=Math.ceil((c.extent.ymax-
c.extent.ymin)/c.pixelSizeY-.1);d=P.fromJSON(c.spatialReference||c.extent.spatialReference);return new U({width:l,height:a,bandCount:c.bandCount,extent:N.fromJSON(c.extent),spatialReference:d,pixelSize:new da({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:d}),pixelType:c.pixelType.toLowerCase(),statistics:f,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})});return function(a){return b.apply(this,arguments)}}();h._requestArrayBuffer=
function(){var b=v._asyncToGenerator(function*(a){var c;const {imageProps:d,requestAsImageElement:e,signal:f}=a;if(e&&!this.pixelFilter&&-1<(null==(c=d.format)?void 0:c.indexOf("png")))return{imageElement:(yield z(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:f})).data,params:d};c=this._initJobHandler();a=z(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),
signal:f});a=(yield Promise.all([a,c]))[0].data;var l=c=d.format||"jpgpng";"bsq"!==l&&"bip"!==l&&(l=V.getFormat(a));if(!l)throw new C("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(a)));l="gif"===c||"bmp"===c||-1<c.indexOf("png")&&("png"===l||"jpg"===l);const p={signal:f};return{pixelData:{pixelBlock:yield l?V.decode(a,{useCanvas:!0,...d},p):this._decodePixelBlock(a,{width:d.width,height:d.height,planes:null,pixelType:null,noDataValue:null,
format:c},p),extent:d.extent},params:d}});return function(a){return b.apply(this,arguments)}}();h._generateRasterInfo=function(){var b=v._asyncToGenerator(function*(a,c){const {data:d}=yield z(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:a}),...c});return yield this._fetchAuxiliaryRasterInfo({serviceInfo:d,renderingRule:a,...c})});return function(a,c){return b.apply(this,arguments)}}();h._isValidCustomizedMosaicRule=function(b){var a;return b&&JSON.stringify(b.toJSON())!==JSON.stringify(null==
(a=this._defaultServiceMosaicRule)?void 0:a.toJSON())};h._updateMultidimensionalDefinition=function(b){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var a=b.variables[0].dimensions;b=[];for(var c in a)if(a.hasOwnProperty(c)){const d=a[c],e=d.extent;let f=!0,l=[e[0]];d.hasRanges&&!0===d.hasRanges?(f=!1,l=[d.values[0]]):"stdz"===d.name.toLowerCase()&&Math.abs(e[1])<=Math.abs(e[0])&&(l=[e[1]]);b.push(new ca({variableName:"",dimensionName:a[c].name,isSlice:f,values:l}))}0<b.length&&(this.mosaicRule=
this.mosaicRule||new I,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=b)}};h._formatAttributeValue=function(b,a){if("string"===typeof b&&(a=(a=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,a))&&a.format)){let c,d;return-1<b.trim().indexOf(",")?(c=",",d=c+" ",this._formatDelimitedString(b,c,d,a)):-1<b.trim().indexOf(";")?(c=";",d=c+" ",this._formatDelimitedString(b,c,d,a)):-1<b.trim().indexOf(" ")?(c=d=" ",this._formatDelimitedString(b,
c,d,a)):this._formatNumberFromString(b,a)}return b};h._getFieldInfo=function(b,a){if(b&&b.length&&a){var c=a.toLowerCase(),d=void 0;b.some(e=>!e.fieldName||e.fieldName.toLowerCase()!==c&&e.fieldName.toLowerCase()!==c.replace(/ /g,"_")?!1:(d=e,!0));return d}};h._formatDelimitedString=function(b,a,c,d){return b&&a&&c&&d?b.trim().split(a).map(e=>this._formatNumberFromString(e,d)).join(c):b};h._formatNumberFromString=function(b,a){if(!b||!a)return b;const c=Number(b);return isNaN(c)?b:a.format(c)};h._processVisibleRastersResponse=
function(b,a){a=a||{};const c=b.value,{templateRRFunctionNames:d,showNoDataRecords:e,returnDomainValues:f,templateFields:l}=a;a=b.processedValues;var p=b.catalogItems&&b.catalogItems.features;let m=b.properties&&b.properties.Values&&b.properties.Values.map(A=>A.replace(/ /gi,", "))||[];var q=this.objectIdField||"ObjectId",u="string"===typeof c&&-1<c.toLowerCase().indexOf("nodata");b=[];!c||p||u||(p={},p[q]=0,p=new ma(this.fullExtent,null,p),m=[c],p=[p]);if(!p)return[];this._updateResponseFieldNames(p,
l);u&&!e&&(p=[]);for(q=0;q<p.length;q++){u=p[q];if(null!=c){var w=m[q];var r=this.renderingRule&&a&&0<a.length&&d&&0<d.length&&-1<d.indexOf(this.renderingRule.functionName)?a[d.indexOf(this.renderingRule.functionName)]:c;if("nodata"===w.toLowerCase()&&!e)continue;u.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(w,"Raster.ItemPixelValue");u.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(r,"Raster.ServicePixelValue");this._updateFeatureWithMagDirValues(u,w);var x=
this.fields&&0<this.fields.length;r=this.renderingRule&&t.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?x?w:c:r;this.renderingRule||(r=x?w:c);this._updateFeatureWithRasterAttributeTableValues(u,r)}u.sourceLayer=u.layer=this;f&&this._updateFeatureWithDomainValues(u);if(d&&a&&d.length===a.length)for(w=0;w<d.length;w++)x="Raster.ServicePixelValue."+d[w],u.attributes[x]=this._formatAttributeValue(a[w],x);b.push(p[q])}return b};h._updateFeatureWithRasterAttributeTableValues=function(b,
a){var c=this.rasterInfo&&this.rasterInfo.attributeTable||t.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable;const d=c&&c.features;if(d){c=c.fields;var e=c.map(p=>p.name).filter(p=>"value"===p.toLowerCase()),f=e&&e[0];if(f){var l=d.filter(p=>p.attributes[f]===(null!=a?parseInt(a,10):null));l&&l[0]&&c.forEach(p=>{const m=this.rasterAttributeTableFieldPrefix+p.name;b.attributes[m]=this._formatAttributeValue(l[0].attributes[p.name],m)})}}};h._updateFeatureWithMagDirValues=function(b,
a){if("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType){var c=a.split(/,\s*/).map(d=>parseFloat(d));a=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));a=new va({height:1,width:1,pixelType:"f32",pixels:a,statistics:c});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new N(0,0,0,0,this.spatialReference)});a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:
xa.uvComponentToVector([a.pixels[0][0],a.pixels[1][0]]);b.attributes["Raster.Magnitude"]=a[0];b.attributes["Raster.Direction"]=a[1]}};h._updateFeatureWithDomainValues=function(b){const a=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===c.domain.type);null!=a&&a.forEach(c=>{const d=b.attributes[c.name];if(null!=d){const e=c.domain.codedValues.find(f=>f.code===d);e&&(b.attributes[c.name]=e.name)}})};h._updateResponseFieldNames=function(b,a){if(a&&!(1>a.length)){var c=this.fieldsIndex;t.isSome(c)&&
b.forEach(d=>{if(d&&d.attributes)for(const e of a)if(c.has(e)){const f=c.get(e).name;f!==e&&(d.attributes[e]=d.attributes[f],delete d.attributes[f])}})}};h._getRenderingRuleString=function(b){if(this._hasRenderingRule(b)){var a;b=b.toJSON();b=null!=(a=b.rasterFunctionDefinition)?a:b;if(b.thumbnail||b.thumbnailEx)b.thumbnail=b.thumbnailEx=null;return JSON.stringify(b)}return null};h._hasRenderingRule=function(b){return b&&b.functionName&&"none"!==b.functionName.toLowerCase()};h._updateRenderingRulesFunctionName=
function(b,a){if(b&&!(1>b.length)){if("Raw"===b)return b.replace("Raw","None");var c=b.toLowerCase().replace(/ /gi,"_");return a.has(c)?a.get(c):b}};h._isRFTJson=function(b){return b&&b.name&&b.arguments&&b.function&&b.hasOwnProperty("functionType")};h._readCapabilities=function(b){const a=b.capabilities?b.capabilities.toLowerCase().split(",").map(q=>q.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=b,f=-1<a.indexOf("image"),l="esriImageServiceDataTypeElevation"===
b.serviceDataType,p=!!(b.spatialReference||b.extent&&b.extent.spatialReference),m=a.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:f,supportsExportImage:f,supportsIdentify:f,supportsMeasure:-1<a.indexOf("mensuration")&&p,supportsDownload:-1<a.indexOf("download"),supportsQuery:-1<a.indexOf("catalog")&&b.fields&&0<b.fields.length,supportsGetSamples:10.2<=c&&f,supportsProject:10.3<=c&&f,supportsComputeStatisticsHistograms:10.4<=c&&f,supportsQueryBoundary:10.6<=
c&&f,supportsCalculateVolume:10.7<=c&&l,supportsComputePixelLocation:10.7<=c&&-1<a.indexOf("catalog"),supportsComputeAngles:10.91<=c,supportsAdd:m,supportsDelete:m,supportsEditing:m,supportsUpdate:m,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:e,maxRecordCountFactor:void 0,supportsStatistics:!(null==d||!d.supportsStatistics),
supportsOrderBy:!(null==d||!d.supportsOrderBy),supportsDistinct:!(null==d||!d.supportsDistinct),supportsPagination:!(null==d||!d.supportsPagination),supportsStandardizedQueriesOnly:!(null==d||!d.useStandardizedQueries),supportsPercentileStatistics:!(null==d||!d.supportsPercentileStatistics),supportsCentroid:!(null==d||!d.supportsReturningGeometryCentroid),supportsDistance:!(null==d||!d.supportsQueryWithDistance),supportsExtent:!(null==d||!d.supportsReturningQueryExtent),supportsGeometryProperties:!(null==
d||!d.supportsReturningGeometryProperties),supportsHavingClause:!(null==d||!d.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,
centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==d||!d.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}};v._createClass(Q,[{key:"rasterFunctionNamesIndex",get:function(){const b=new Map;if(!this.rasterFunctionInfos||t.isSome(this.rasterFunctionInfos)&&1>this.rasterFunctionInfos.length)return b;t.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(a=>{b.set(a.name.toLowerCase().replace(/ /gi,"_"),a.name)});return b}},
{key:"fieldsIndex",get:function(){return this.fields?new ta(this.fields):null}},{key:"format",set:function(b){b&&Ia.has(b.toLowerCase())&&this._set("format",b.toLowerCase())}},{key:"mosaicRule",set:function(b){b&&b.mosaicMethod&&(b=I.fromJSON({...b.toJSON(),mosaicMethod:b.mosaicMethod,mosaicOperation:b.mosaicOperation}));this._set("mosaicRule",b)}},{key:"parsedUrl",get:function(){return this.url?qa.urlToObject(this.url):null}},{key:"renderer",set:function(b){this.loaded&&(b=this._configRenderer(b));
this._set("renderer",b)}},{key:"rasterFields",get:function(){const b=this.rasterAttributeTableFieldPrefix||"Raster.";var a=new H({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new H({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new H({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let e=this.fields?
aa.clone(this.fields):[];e.push(c);this.capabilities.operations.supportsQuery&&this.fields&&0<this.fields.length&&e.push(a);10.4<=this.version&&t.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(f=>"none"===f.name.toLowerCase())&&e.push(d);t.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(f=>"none"!==f.name.toLowerCase()).forEach(f=>{e.push(new H({name:"Raster.ServicePixelValue."+f.name,alias:f.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||
"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(e.push(new H({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),e.push(new H({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<a.length&&(a=a.filter(f=>"esriFieldTypeOID"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const l=
aa.clone(f);l.name=b+f.name;return l}),e=e.concat(a));return e}},{key:"renderingRule",set:function(b){b&&b.rasterFunction&&(b=K.fromJSON({...b.toJSON(),rasterFunction:b.rasterFunction,rasterFunctionArguments:b.rasterFunctionArguments}));this._set("renderingRule",b)}}]);return Q}(g);k.__decorate([n.property()],g.prototype,"_functionRasterInfos",void 0);k.__decorate([n.property()],g.prototype,"_rasterJobHandler",void 0);k.__decorate([n.property({dependsOn:["_serviceSupportsMosaicRule"]})],g.prototype,
"_defaultServiceMosaicRule",void 0);k.__decorate([B.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],g.prototype,"readDefaultServiceMosaicRule",null);k.__decorate([n.property()],g.prototype,"_cachedRendererJson",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"_serviceSourceType",void 0);k.__decorate([B.reader("_serviceSourceType",["serviceSourceType","fields"])],g.prototype,"readServiceSourceType",null);k.__decorate([n.property({readOnly:!0})],g.prototype,"_serviceSupportsMosaicRule",
void 0);k.__decorate([B.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],g.prototype,"readServiceSupportsMosaicRule",null);k.__decorate([n.property()],g.prototype,"rasterAttributeTableFieldPrefix",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"rasterFunctionNamesIndex",null);k.__decorate([n.property()],g.prototype,"adjustAspectRatio",void 0);k.__decorate([n.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.bandCount")],g.prototype,"bandCount",void 0);k.__decorate([n.property({type:[D.Integer],
json:{write:!0}})],g.prototype,"bandIds",void 0);k.__decorate([B.reader("bandIds")],g.prototype,"readBandIds",null);k.__decorate([n.property({readOnly:!0,json:{read:!1}})],g.prototype,"capabilities",void 0);k.__decorate([B.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g.prototype,"readCapabilities",null);k.__decorate([n.property({type:Number})],g.prototype,"compressionQuality",void 0);k.__decorate([G.writer("compressionQuality")],g.prototype,"writeCompressionQuality",
null);k.__decorate([n.property({type:Number})],g.prototype,"compressionTolerance",void 0);k.__decorate([G.writer("compressionTolerance")],g.prototype,"writeCompressionTolerance",null);k.__decorate([n.property({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0);k.__decorate([n.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],g.prototype,"definitionExpression",void 0);k.__decorate([n.property({readOnly:!0,constructOnly:!0})],
g.prototype,"exportImageServiceParameters",void 0);k.__decorate([n.property()],g.prototype,"rasterInfo",void 0);k.__decorate([n.property({readOnly:!0,type:[H]})],g.prototype,"fields",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"fieldsIndex",null);k.__decorate([n.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],g.prototype,"format",null);k.__decorate([B.reader("service","format",["serviceDataType"])],g.prototype,"readFormat",null);k.__decorate([n.property({type:N})],
g.prototype,"fullExtent",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"hasMultidimensions",void 0);k.__decorate([n.property({json:{read:{source:"maxImageHeight"}}})],g.prototype,"imageMaxHeight",void 0);k.__decorate([n.property({json:{read:{source:"maxImageWidth"}}})],g.prototype,"imageMaxWidth",void 0);k.__decorate([n.property({type:String,json:{type:J.interpolationKebab.jsonValues,read:J.interpolationKebab.read,write:J.interpolationKebab.write}})],g.prototype,"interpolation",void 0);
k.__decorate([n.property()],g.prototype,"minScale",void 0);k.__decorate([B.reader("service","minScale")],g.prototype,"readMinScale",null);k.__decorate([n.property()],g.prototype,"maxScale",void 0);k.__decorate([B.reader("service","maxScale")],g.prototype,"readMaxScale",null);k.__decorate([n.property({type:I})],g.prototype,"mosaicRule",null);k.__decorate([B.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],g.prototype,"readMosaicRule",null);k.__decorate([G.writer("mosaicRule")],g.prototype,
"writeMosaicRule",null);k.__decorate([n.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.multidimensionalInfo")],g.prototype,"multidimensionalInfo",void 0);k.__decorate([n.property({json:{type:D.Integer}})],g.prototype,"noData",void 0);k.__decorate([G.writer("noData")],g.prototype,"writeNoData",null);k.__decorate([n.property({type:String,json:{type:J.noDataInterpretationKebab.jsonValues,read:J.noDataInterpretationKebab.read,write:J.noDataInterpretationKebab.write}})],g.prototype,"noDataInterpretation",
void 0);k.__decorate([n.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g.prototype,"objectIdField",void 0);k.__decorate([B.reader("objectIdField")],g.prototype,"readObjectIdField",null);k.__decorate([n.property({})],g.prototype,"geometryType",void 0);k.__decorate([n.property({})],g.prototype,"typeIdField",void 0);k.__decorate([n.property({})],g.prototype,"types",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"parsedUrl",null);k.__decorate([n.property({readOnly:!0}),
M.aliasOf("serviceRasterInfo.pixelSize.x")],g.prototype,"pixelSizeX",void 0);k.__decorate([n.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.pixelSize.y")],g.prototype,"pixelSizeY",void 0);k.__decorate([n.property({type:Function})],g.prototype,"pixelFilter",void 0);k.__decorate([n.property()],g.prototype,"raster",void 0);k.__decorate([n.property()],g.prototype,"viewId",void 0);k.__decorate([n.property({types:T.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:T.websceneRasterRendererTypes,
name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(F){return{enabled:F&&"vector-field"!==F.type&&"flow"!==F.type}}}}}}})],g.prototype,"renderer",null);k.__decorate([B.reader("renderer")],g.prototype,"readRenderer",null);k.__decorate([G.writer("renderer")],g.prototype,"writeRenderer",null);k.__decorate([n.property()],g.prototype,"symbolizer",void 0);k.__decorate([n.property(ba.opacity)],g.prototype,"opacity",void 0);k.__decorate([n.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.attributeTable")],
g.prototype,"rasterAttributeTable",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"rasterFields",null);k.__decorate([n.property({constructOnly:!0})],g.prototype,"rasterFunctionInfos",void 0);k.__decorate([n.property({type:K})],g.prototype,"renderingRule",null);k.__decorate([B.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],g.prototype,"readRenderingRule",null);k.__decorate([G.writer("renderingRule")],g.prototype,"writeRenderingRule",null);k.__decorate([n.property()],
g.prototype,"serviceDataType",void 0);k.__decorate([n.property({readOnly:!0,type:P})],g.prototype,"spatialReference",void 0);k.__decorate([B.reader("spatialReference",["spatialReference","extent"])],g.prototype,"readSpatialReference",null);k.__decorate([n.property({json:{type:X.jsonValues}})],g.prototype,"pixelType",void 0);k.__decorate([B.reader("pixelType")],g.prototype,"readPixelType",null);k.__decorate([G.writer("pixelType")],g.prototype,"writePixelType",null);k.__decorate([n.property({constructOnly:!0,
type:U})],g.prototype,"serviceRasterInfo",void 0);k.__decorate([n.property()],g.prototype,"sourceJSON",void 0);k.__decorate([n.property(ba.url)],g.prototype,"url",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"version",void 0);k.__decorate([B.reader("version",["currentVersion","fields","timeInfo"])],g.prototype,"readVersion",null);return g=k.__decorate([ra.subclass("esri.layers.mixins.ArcGISImageService")],g)};Object.defineProperty(Z,"__esModule",{value:!0})});