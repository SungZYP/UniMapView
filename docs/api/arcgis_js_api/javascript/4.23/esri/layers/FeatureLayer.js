// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../request ../symbols ../core/Clonable ../core/Collection ../core/Error ../core/Handles ../core/has ../core/jsonMap ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/sql ../core/urlUtils ../core/accessorSupport/decorators/property ../core/arrayUtils ../core/accessorSupport/decorators/cast ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/extensions/serializableProperty/reader ../form/FormTemplate ../geometry/Extent ../geometry/HeightModelInfo ../geometry/SpatialReference ./Layer ./graphics/sources/MemorySource ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/arcgisLayerUrl ./support/commonProperties ./support/FeatureIndex ./support/featureReductionUtils ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/fieldUtils ./support/GeometryFieldsInfo ./support/LabelClass ./support/labelingInfo ./support/LayerFloorInfo ./support/Relationship ./support/TimeInfo ./support/versionUtils ./support/source/DataLayerSource ../renderers/support/styleUtils ../rest/support/AttachmentQuery ../rest/support/FeatureSet ../rest/support/Query ../rest/support/RelationshipQuery ../rest/support/TopFeaturesQuery ../support/popupUtils".split(" "),
function(M,v,e,Y,B,Ua,Va,Wa,Xa,Z,aa,ba,N,ca,O,d,z,n,da,ea,fa,ha,C,ia,G,P,ja,H,g,Ya,ka,p,la,D,ma,na,oa,pa,Q,qa,R,ra,sa,ta,ua,va,wa,xa,ya,za,Aa,Ba,w,t,S,Ca,T,U,Da,I,Ea,Fa,V,Ga,Ha,Ia,Ja,Ka,La,Ma,Na,A,W,E,Oa){function l(m,r,f){return!(m&&m.hasOwnProperty(r)?!m[r]:!f)}function F(m,r,f){return m&&m.hasOwnProperty(r)?m[r]:f}function Pa(m){var r;m=null==m?void 0:null==(r=m.supportedSpatialAggregationStatistics)?void 0:r.map(f=>f.toLowerCase());return{envelope:!(null==m||!m.includes("envelopeaggregate")),
centroid:!(null==m||!m.includes("centroidaggregate")),convexHull:!(null==m||!m.includes("convexhullaggregate"))}}function J(m,r,f){m=!(null==f||!f.writeLayerSchema);return{enabled:m,ignoreOrigin:m}}const K=new fa.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),Qa={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"},
X=ha.getLogger("esri.layers.FeatureLayer");B=Da.defineFieldProperties();d=function(m){function r(...a){a=m.call(this,...a)||this;a._handles=new da;a.capabilities=null;a.charts=null;a.copyright=null;a.datesInUnknownTimezone=!1;a.displayField=null;a.definitionExpression=null;a.dynamicDataSource=null;a.editFieldsInfo=null;a.editingInfo=null;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fieldsIndex=null;a.floorInfo=null;a.formTemplate=null;a.fullExtent=null;a.gdbVersion=null;a.geometryFieldsInfo=
null;a.geometryType=null;a.hasM=void 0;a.hasZ=void 0;a.heightModelInfo=null;a.historicMoment=null;a.infoFor3D=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.layerId=void 0;a.legendEnabled=!0;a.minScale=0;a.maxScale=0;a.globalIdField=null;a.objectIdField=null;a.outFields=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.relationships=null;a.sourceJSON=null;a.returnM=void 0;a.returnZ=void 0;a.screenSizePerspectiveEnabled=!0;a.serviceDefinitionExpression=null;a.spatialReference=Q.WGS84;
a.subtypeCode=null;a.templates=null;a.timeInfo=null;a.title=null;a.sublayerTitleMode="item-title";a.trackIdField=null;a.type="feature";a.typeIdField=null;a.types=null;a.indexes=new (z.ofType(S.FeatureIndex));a.userIsAdmin=!1;a.version=void 0;a.visible=!0;return a}v._inheritsLoose(r,m);var f=r.prototype;f.destroy=function(){var a;null==(a=this.source)?void 0:a.destroy();this._handles=C.destroyMaybe(this._handles)};f.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};f.load=function(a){var b=
this;const c=C.isSome(a)?a.signal:null;if(this.portalItem&&this.portalItem.loaded&&this.source)this.addResolvingPromise(this.createGraphicsSource(c).then(k=>this._initLayerProperties(k)));else{var h=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},a).catch(P.throwIfAbortError).then(v._asyncToGenerator(function*(){if(b.url&&null==b.layerId&&/FeatureServer|MapServer\/*$/i.test(b.url)){const k=yield b._fetchFirstLayerId(c);null!=k&&(b.layerId=k)}if(!b.url&&!b._hasMemorySource())throw new n("feature-layer:missing-url-or-source",
"Feature layer must be created with either a url or a source");return b._initLayerProperties(yield b.createGraphicsSource(c))})).then(()=>this.finishLoadEditablePortalLayer(a));this.addResolvingPromise(h);return Promise.resolve(this)}};f.readCapabilities=function(a,b){b=b.layerDefinition||b;return{attachment:this._readAttachmentCapabilities(b.attachmentProperties),data:this._readDataCapabilities(b),metadata:this._readMetadataCapabilities(b),operations:this._readOperationsCapabilities(b.capabilities||
a,b),query:this._readQueryCapabilities(b),queryRelated:this._readQueryRelatedCapabilities(b),editing:this._readEditingCapabilities(b)}};f.readEditingEnabled=function(a,b){return this._readEditingEnabled(b,!1)};f.readEditingEnabledFromWebMap=function(a,b,c){return this._readEditingEnabled(b,!0,c)};f.writeEditingEnabled=function(a,b){this._writeEditingEnabled(a,b,!1)};f.writeEditingEnabledToWebMap=function(a,b,c,h){this._writeEditingEnabled(a,b,!0,h)};f.readEditingInfo=function(a,b){({editingInfo:a}=
b);return a?{lastEditDate:null!=a.lastEditDate?new Date(a.lastEditDate):null}:null};f.readIsTable=function(a,b){b=b&&b.layerDefinition||b;return"Table"===b.type||!b.geometryType};f.writeIsTable=function(a,b,c,h){null!=h&&h.writeLayerSchema&&G.setDeepValue(c,a?"Table":"Feature Layer",b)};f.readMinScale=function(a,b){return b.effectiveMinScale||a||0};f.readMaxScale=function(a,b){return b.effectiveMaxScale||a||0};f.readGlobalIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;
if(b.fields)for(const c of b.fields)if("esriFieldTypeGlobalID"===c.type)return c.name};f.readObjectIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;if(b.fields)for(const c of b.fields)if("esriFieldTypeOID"===c.type)return c.name};f.readRenderer=function(a,b,c){b=b.layerDefinition||b;if(a=b.drawingInfo&&b.drawingInfo.renderer||void 0)return(a=ba.read(a,b,c)||void 0)||X.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,
context:c}),a;if(b.defaultSymbol)return b.types&&b.types.length?new aa({defaultSymbol:L(b.defaultSymbol,b,c),field:b.typeIdField,uniqueValueInfos:b.types.map(h=>({id:h.id,symbol:L(h.symbol,h,c)}))}):new Z({symbol:L(b.defaultSymbol,b,c)})};f.castSource=function(a){return a?Array.isArray(a)||a instanceof z?new R.default({layer:this,items:a}):a:null};f.readSource=function(a,b){a=Na.fromJSON(b.featureSet);return new R.default({layer:this,items:a&&a.features||[]})};f.readServiceDefinitionExpression=function(a,
b){return b.definitionQuery||b.definitionExpression};f.readTemplates=function(a,b){var c=b.editFieldsInfo;b=c&&c.creatorField;c=c&&c.editorField;a=a&&a.map(h=>T.fromJSON(h));this._fixTemplates(a,b);this._fixTemplates(a,c);return a};f.readTitle=function(a,b){a=b.layerDefinition&&b.layerDefinition.name||b.name;b=b.title||b.layerDefinition&&b.layerDefinition.title;if(a){b=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?w.titleFromUrlAndName(this.url,a):
a;if(!a&&this.url){const c=w.parse(this.url);C.isSome(c)&&(a=c.title)}if(!a)return;"item-title-and-service-name"===this.sublayerTitleMode&&b&&b!==a&&(a=b+" - "+a);return w.cleanTitle(a)}if("item-title"===this.sublayerTitleMode&&b)return b};f.readTitleFromWebMap=function(a,b){return b.title||b.layerDefinition&&b.layerDefinition.name};f.readTypeIdField=function(a,b){b=b.layerDefinition||b;let c=b.typeIdField;c&&b.fields&&(c=c.toLowerCase(),a=b.fields.find(h=>h.name.toLowerCase()===c))&&(c=a.name);return c};
f.readTypes=function(a,b){b=b.layerDefinition||b;a=b.types;const c=(b=b.editFieldsInfo)&&b.creatorField,h=b&&b.editorField;return a&&a.map(k=>{k=U.fromJSON(k);this._fixTemplates(k.templates,c);this._fixTemplates(k.templates,h);return k})};f.writeUrl=function(a,b,c,h){w.writeUrlWithLayerId(this,a,null,b,h)};f.readVersion=function(a,b){return b.currentVersion?b.currentVersion:b.hasOwnProperty("capabilities")||b.hasOwnProperty("drawingInfo")||b.hasOwnProperty("hasAttachments")||b.hasOwnProperty("htmlPopupType")||
b.hasOwnProperty("relationships")||b.hasOwnProperty("timeInfo")||b.hasOwnProperty("typeIdField")||b.hasOwnProperty("types")?10:9.3};f.readVisible=function(a,b){if(b.layerDefinition&&null!=b.layerDefinition.defaultVisibility)return!!b.layerDefinition.defaultVisibility;if(null!=b.visibility)return!!b.visibility};f.addAttachment=function(a,b){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("addAttachment"in this.source))throw new n("FeatureLayer","Layer source does not support addAttachment capability");
return this.source.addAttachment(a,b)})};f.updateAttachment=function(a,b,c){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("updateAttachment"in this.source))throw new n("FeatureLayer","Layer source does not support updateAttachment capability");return this.source.updateAttachment(a,b,c)})};f.applyEdits=function(){var a=v._asyncToGenerator(function*(b,c){const h=yield new Promise((k,q)=>M(["./graphics/editingSupport"],k,q));yield this.load();return h.applyEdits(this,this.source,
b,c)});return function(b,c){return a.apply(this,arguments)}}();f.on=function(a,b){return m.prototype.on.call(this,a,b)};f.createPopupTemplate=function(a){return Oa.createPopupTemplate(this,a)};f.createGraphicsSource=function(){var a=v._asyncToGenerator(function*(b){if(this._hasMemorySource())return this.source.load({signal:b});const {default:c}=yield P.whenOrAbort(new Promise((h,k)=>M(["./graphics/sources/FeatureLayerSource"],q=>h(Object.freeze({__proto__:null,default:q})),k)),b);return(new c({layer:this})).load({signal:b})});
return function(b){return a.apply(this,arguments)}}();f.createQuery=function(){const a=new A,b=this.get("capabilities.data"),c=this.get("capabilities.query");a.dynamicDataSource=this.dynamicDataSource;a.historicMoment=this.historicMoment;a.gdbVersion=this.gdbVersion;a.returnGeometry=!0;c&&(a.compactGeometryEnabled=c.supportsCompactGeometry,a.defaultSpatialReferenceEnabled=c.supportsDefaultSpatialReference);b&&(b.supportsZ&&null!=this.returnZ&&(a.returnZ=this.returnZ),b.supportsM&&null!=this.returnM&&
(a.returnM=this.returnM));a.outFields=["*"];a.where=this.definitionExpression||"1\x3d1";const {timeOffset:h,timeExtent:k}=this;a.timeExtent=null!=h&&null!=k?k.offset(-h.value,h.unit):k||null;a.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null;return a};f.deleteAttachments=function(a,b){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("deleteAttachments"in this.source))throw new n("FeatureLayer","Layer source does not support deleteAttachments capability");
return this.source.deleteAttachments(a,b)})};f.fetchRecomputedExtents=function(a){return this.load({signal:null==a?void 0:a.signal}).then(()=>{if(this.source.fetchRecomputedExtents)return this.source.fetchRecomputedExtents(a);throw new n("FeatureLayer","Layer source does not support fetchUpdates capability");})};f.getFeatureType=function(a){const {typeIdField:b,types:c}=this;if(!b||!a)return null;const h=a.attributes?a.attributes[b]:void 0;if(null==h)return null;let k=null;c.some(q=>{const {id:u}=
q;if(null==u)return!1;u.toString()===h.toString()&&(k=q);return!!k});return k};f.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};f.getField=function(a){return this.fieldsIndex.get(a)};f.queryAttachments=function(a,b){a=Ma.from(a);return this.load().then(()=>{if(!this.get("capabilities.data.supportsAttachment"))throw new n("FeatureLayer","this layer doesn't support attachments");const {attachmentTypes:c,
objectIds:h,globalIds:k,num:q,size:u,start:x,where:y}=a;if(!this.get("capabilities.operations.supportsQueryAttachments")){const Ra=c&&c.length,Sa=k&&k.length,Ta=u&&u.length;if(h&&1<h.length||Ra||Sa||Ta||q||x||y)throw new n("FeatureLayer","when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",a);}if(!(h&&h.length||y))throw new n("FeatureLayer","'objectIds' or 'where' are required to perform attachment query",a);if(!("queryAttachments"in this.source))throw new n("FeatureLayer",
"Layer source does not support queryAttachments capability",a);return this.source.queryAttachments(a)})};f.queryFeatures=function(a,b){return this.load().then(()=>this.source.queryFeatures(A.from(a)||this.createQuery(),b)).then(c=>{if(null!=c&&c.features)for(const h of c.features)h.layer=h.sourceLayer=this;return c})};f.queryObjectIds=function(a,b){return this.load().then(()=>{if(this.source.queryObjectIds)return this.source.queryObjectIds(A.from(a)||this.createQuery(),b);throw new n("FeatureLayer",
"Layer source does not support queryObjectIds capability");})};f.queryFeatureCount=function(a,b){return this.load().then(()=>{if(this.source.queryFeatureCount)return this.source.queryFeatureCount(A.from(a)||this.createQuery(),b);throw new n("FeatureLayer","Layer source does not support queryFeatureCount capability");})};f.queryExtent=function(a,b){return this.load().then(()=>{if(this.source.queryExtent)return this.source.queryExtent(A.from(a)||this.createQuery(),b);throw new n("FeatureLayer","Layer source does not support queryExtent capability");
})};f.queryRelatedFeatures=function(a,b){return this.load().then(()=>{if("queryRelatedFeatures"in this.source)return this.source.queryRelatedFeatures(W.from(a),b);throw new n("FeatureLayer","Layer source does not support queryRelatedFeatures capability");})};f.queryRelatedFeaturesCount=function(a,b){return this.load().then(()=>{if("queryRelatedFeaturesCount"in this.source)return this.source.queryRelatedFeaturesCount(W.from(a),b);throw new n("FeatureLayer","Layer source does not support queryRelatedFeaturesCount capability");
})};f.queryTopFeatures=function(a,b){return this.load().then(()=>{if("queryTopFeatures"in this.source&&this.get("capabilities.query.supportsTopFeaturesQuery"))return this.source.queryTopFeatures(E.from(a),b).then(c=>{if(null!=c&&c.features)for(const h of c.features)h.layer=h.sourceLayer=this;return c});throw new n("FeatureLayer","Layer source does not support queryTopFeatures capability");})};f.queryTopObjectIds=function(a,b){return this.load().then(()=>{if("queryTopObjectIds"in this.source&&this.get("capabilities.query.supportsTopFeaturesQuery"))return this.source.queryTopObjectIds(E.from(a),
b);throw new n("FeatureLayer","Layer source does not support queryTopObjectIds capability");})};f.queryTopFeaturesExtent=function(a,b){return this.load().then(()=>{if("queryTopExtents"in this.source&&this.get("capabilities.query.supportsTopFeaturesQuery"))return this.source.queryTopExtents(E.from(a),b);throw new n("FeatureLayer","Layer source does not support queryTopExtents capability");})};f.queryTopFeatureCount=function(a,b){return this.load().then(()=>{if("queryTopCount"in this.source&&this.get("capabilities.query.supportsTopFeaturesQuery"))return this.source.queryTopCount(E.from(a),
b);throw new n("FeatureLayer","Layer source does not support queryFeatureCount capability");})};f.read=function(a,b){const c=a.featureCollection;if(c){const h=c.layers;h&&1===h.length&&(m.prototype.read.call(this,h[0],b),null!=c.showLegend&&m.prototype.read.call(this,{showLegend:c.showLegend},b))}m.prototype.read.call(this,a,b);b&&"service"===b.origin&&this.revert(["objectIdField","fields","timeInfo","spatialReference"],"service")};f.write=function(a,b){var c,h;b={...b,writeLayerSchema:null!=(c=null==
(h=b)?void 0:h.writeLayerSchema)?c:this._hasMemorySource()};c=b.origin;h=b.layerContainerType;const k=b.messages;if(this.isTable){if("web-scene"===c||"web-map"===c&&"tables"!==h)return k&&k.push(new n("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Table source cannot be written to web scenes and web maps`,{layer:this})),null;if(this._hasMemorySource())return k&&k.push(new n("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using an in-memory Table source cannot be written to web scenes and web maps`,
{layer:this})),null}else if(this.loaded&&"web-map"===c&&"tables"===h)return k&&k.push(new n("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a non-table source cannot be written to tables in web maps`,{layer:this})),null;return m.prototype.write.call(this,a,b)};f.clone=function(){if(this._hasMemorySource())throw new n("FeatureLayer",`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return m.prototype.clone.call(this)};
f.serviceSupportsSpatialReference=function(a){return this.loaded?"memory"===this.source.type?!0:Ja.serviceSupportsSpatialReference(this,a):!1};f._readEditingEnabled=function(a,b,c){var h;let k=null==(h=a.layerDefinition)?void 0:h.capabilities;if(k)return this._hasEditingCapability(k);k=a.capabilities;if(b&&"web-map"===(null==c?void 0:c.origin)&&!this._hasMemorySource()&&k)return this._hasEditingCapability(k)};f._hasEditingCapability=function(a){return a.toLowerCase().split(",").map(b=>b.trim()).includes("editing")};
f._writeEditingEnabled=function(a,b,c,h){if(!a){var k,q;a=null!=(k=this.capabilities)&&null!=(q=k.operations)&&q.supportsSync?"Query,Sync":"Query";G.setDeepValue("layerDefinition.capabilities",a,b);!c||null!=h&&h.writeLayerSchema||(b.capabilities=a)}};f._checkAttachmentSupport=function(a){const {attributes:b}=a,{objectIdField:c}=this;if(!this.get("capabilities.data.supportsAttachment"))return Promise.reject(new n("FeatureLayer","this layer doesn't support attachments"));if(!a)return Promise.reject(new n("FeatureLayer",
"A feature is required to add/delete/update attachments"));if(!b)return Promise.reject(new n("FeatureLayer","'attributes' are required on a feature to query attachments"));if(!b[c])return Promise.reject(new n("FeatureLayer",`feature is missing the identifying attribute ${c}`))};f._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};f._fetchFirstLayerId=function(a){return ca(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:a}).then(b=>
{if(b=b.data){if(Array.isArray(b.layers)&&0<b.layers.length)return b.layers[0].id;if(Array.isArray(b.tables)&&0<b.tables.length)return b.tables[0].id}})};f._initLayerProperties=function(){var a=v._asyncToGenerator(function*(b){this._set("source",b);b.sourceJSON&&(this.sourceJSON=b.sourceJSON,this.read(b.sourceJSON,{origin:"service",url:this.parsedUrl}));this._verifySource();this._verifyFields();I.fixRendererFields(this.renderer,this.fieldsIndex);I.fixTimeInfoFields(this.timeInfo,this.fieldsIndex);
return La.loadStyleRenderer(this,{origin:"service"})});return function(b){return a.apply(this,arguments)}}();f.hasDataChanged=function(){var a=v._asyncToGenerator(function*(){var b;if(null!=(b=this.source)&&b.refresh)try{var c;const {dataChanged:h,updates:k}=yield null==(c=this.source)?void 0:c.refresh();C.isSome(k)&&(this.sourceJSON={...this.sourceJSON,...k},this.read(k,{origin:"service",url:this.parsedUrl}));if(h)return!0}catch{}if(this.definitionExpression)try{return(yield ja.parseWhereClause(this.definitionExpression,
this.fieldsIndex)).hasDateFunctions}catch{}return!1});return function(){return a.apply(this,arguments)}}();f._verifyFields=function(){const a=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+a+")");this.isTable||this._hasMemorySource()||-1!==a.search(/\/FeatureServer\//i)||this.fields&&this.fields.some(function(b){return"geometry"===b.type})||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+
a+")")};f._fixTemplates=function(a,b){a&&a.forEach(c=>{(c=c.prototype&&c.prototype.attributes)&&b&&delete c[b]})};f._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new n("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url");}else if(!this.url)throw new n("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};f._initMemorySource=function(a){a.forEach(b=>{b.layer=
this;b.sourceLayer=this});this._handles.add([a.on("after-add",b=>{b.item.layer=this;b.item.sourceLayer=this}),a.on("after-remove",b=>{b.item.layer=null;b.item.sourceLayer=null})],"fl-source")};f._resetMemorySource=function(a){a.forEach(b=>{b.layer=null;b.sourceLayer=null});this._handles.remove("fl-source")};f._hasMemorySource=function(){return!(this.url||!this.source)};f._readAttachmentCapabilities=function(a){const b={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1};
a&&Array.isArray(a)&&a.forEach(c=>{const h=Qa[c.name];h&&(b[h]=!!c.isEnabled)});return b};f._readDataCapabilities=function(a){return{isVersioned:l(a,"isDataVersioned",!1),supportsAttachment:l(a,"hasAttachments",!1),supportsM:l(a,"hasM",!1),supportsZ:l(a,"hasZ",!1)}};f._readMetadataCapabilities=function(a){return{supportsAdvancedFieldProperties:l(a,"supportsFieldDescriptionProperty",!1)}};f._readOperationsCapabilities=function(a,b){a=a?a.toLowerCase().split(",").map(x=>x.trim()):[];const c=a.includes("editing")&&
!b.datesInUnknownTimezone;let h=c&&a.includes("create"),k=c&&a.includes("delete"),q=c&&a.includes("update");const u=a.includes("changetracking");!c||h||k||q||(h=k=q=!0);return{supportsCalculate:l(b,"supportsCalculate",!1),supportsTruncate:l(b,"supportsTruncate",!1),supportsValidateSql:l(b,"supportsValidateSql",!1),supportsAdd:h,supportsDelete:k,supportsEditing:c,supportsChangeTracking:u,supportsQuery:a.includes("query"),supportsQueryAttachments:l(b.advancedQueryCapabilities,"supportsQueryAttachments",
!1),supportsResizeAttachments:l(b,"supportsAttachmentsResizing",!1),supportsSync:a.includes("sync"),supportsUpdate:q,supportsExceedsLimitStatistics:l(b,"supportsExceedsLimitStatistics",!1)}};f._readQueryCapabilities=function(a){var b;const c=a.advancedQueryCapabilities,h=a.ownershipBasedAccessControlForFeatures,k=a.archivingInfo;var q=null==(b=this.url)?void 0:b.includes("MapServer");b=!ea("mapserver-pbf-enabled")&&q&&10.81>this.version;q=w.isHostedAgolService(this.url);const u=(a.supportedQueryFormats||
"").split(",").reduce((x,y)=>{(y=y.toLowerCase().trim())&&x.add(y);return x},new Set);return{supportsStatistics:l(c,"supportsStatistics",a.supportsStatistics),supportsPercentileStatistics:l(c,"supportsPercentileStatistics",!1),supportsSpatialAggregationStatistics:l(c,"supportsSpatialAggregationStatistics",!1),supportedSpatialAggregationStatistics:Pa(c),supportsCentroid:l(c,"supportsReturningGeometryCentroid",!1),supportsDistance:l(c,"supportsQueryWithDistance",!1),supportsDistinct:l(c,"supportsDistinct",
a.supportsAdvancedQueries),supportsExtent:l(c,"supportsReturningQueryExtent",!1),supportsGeometryProperties:l(c,"supportsReturningGeometryProperties",!1),supportsHavingClause:l(c,"supportsHavingClause",!1),supportsOrderBy:l(c,"supportsOrderBy",a.supportsAdvancedQueries),supportsPagination:l(c,"supportsPagination",!1),supportsQuantization:l(a,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:l(a,"supportsQuantizationEditMode",!1),supportsQueryGeometry:l(a,"supportsReturningQueryGeometry",
!1),supportsResultType:l(c,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:l(c,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:l(c,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:l(a,"useStandardizedQueries",!1),supportsTopFeaturesQuery:l(c,"supportsTopFeaturesQuery",!1),supportsQueryByOthers:l(h,"allowOthersToQuery",!0),supportsHistoricMoment:l(k,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:!b&&u.has("pbf"),supportsDisjointSpatialRelationship:l(c,"supportsDisjointSpatialRel",
!1),supportsCacheHint:l(c,"supportsQueryWithCacheHint",!1),supportsDefaultSpatialReference:l(c,"supportsDefaultSR",!1),supportsCompactGeometry:q,maxRecordCountFactor:F(a,"maxRecordCountFactor",void 0),maxRecordCount:F(a,"maxRecordCount",void 0),standardMaxRecordCount:F(a,"standardMaxRecordCount",void 0),tileMaxRecordCount:F(a,"tileMaxRecordCount",void 0)}};f._readQueryRelatedCapabilities=function(a){a=a.advancedQueryCapabilities;const b=l(a,"supportsAdvancedQueryRelated",!1);return{supportsPagination:l(a,
"supportsQueryRelatedPagination",!1),supportsCount:b,supportsOrderBy:b}};f._readEditingCapabilities=function(a){const b=a.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:l(a,"allowGeometryUpdates",!0),supportsGlobalId:l(a,"supportsApplyEditsWithGlobalIds",!1),supportsReturnServiceEditsInSourceSpatialReference:l(a,"supportsReturnServiceEditsInSourceSR",!1),supportsRollbackOnFailure:l(a,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:l(a,"allowUpdateWithoutMValues",
!1),supportsUploadWithItemId:l(a,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:l(b,"allowAnonymousToDelete",!0),supportsDeleteByOthers:l(b,"allowOthersToDelete",!0),supportsUpdateByAnonymous:l(b,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:l(b,"allowOthersToUpdate",!0)}};v._createClass(r,[{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("dynamicDataSource");this.commitProperty("timeExtent");this.commitProperty("timeOffset");
this.commitProperty("geometryType");this.commitProperty("gdbVersion");this.commitProperty("historicMoment");this.commitProperty("returnZ");this.commitProperty("capabilities");this.commitProperty("returnM");return(this._get("createQueryVersion")||0)+1}},{key:"editingEnabled",get:function(){return this.loaded&&!this.capabilities.operations.supportsEditing?!1:this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges},set:function(a){null!=
a?this._override("editingEnabled",a):this._clearOverride("editingEnabled")}},{key:"parsedUrl",get:function(){const a=this.url?H.urlToObject(this.url):null;null!=a&&(null!=this.dynamicDataSource?a.path=H.join(a.path,"dynamicLayer"):null!=this.layerId&&(a.path=H.join(a.path,this.layerId.toString())));return a}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(a){I.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}},{key:"source",
set:function(a){const b=this._get("source");b!==a&&(b&&b instanceof z&&this._resetMemorySource(b),a&&a instanceof z&&this._initMemorySource(a),this._set("source",a))}},{key:"url",set:function(a){a=w.sanitizeUrlWithLayerId({layer:this,url:a,nonStandardUrlAllowed:!0,logger:X});this._set("url",a.url);null!=a.layerId&&this._set("layerId",a.layerId)}}]);return r}(va.FeatureEffectLayer(ta.BlendLayer(xa.OrderedLayer(Ba.TemporalLayer(Aa.ScaleRangeLayer(za.RefreshableLayer(sa.ArcGISService(wa.OperationalLayer(ya.PortalLayer(ia.MultiOriginJSONMixin(ua.CustomParametersMixin(ra.APIKeyMixin(d.ClonableMixin(qa))))))))))))));
e.__decorate([g.property({readOnly:!0,json:{read:!1}})],d.prototype,"capabilities",void 0);e.__decorate([p.reader("service","capabilities","advancedQueryCapabilities allowGeometryUpdates allowUpdateWithoutMValues archivingInfo capabilities datesInUnknownTimezone hasAttachments hasM hasZ maxRecordCount maxRecordCountFactor ownershipBasedAccessControlForFeatures standardMaxRecordCount supportedQueryFormats supportsAdvancedQueries supportsApplyEditsWithGlobalIds supportsAttachmentsByUploadId supportsAttachmentsResizing supportsCalculate supportsCoordinatesQuantization supportsExceedsLimitStatistics supportsFieldDescriptionProperty supportsQuantizationEditMode supportsRollbackOnFailureParameter supportsStatistics supportsTruncate supportsValidateSql tileMaxRecordCount useStandardizedQueries".split(" "))],
d.prototype,"readCapabilities",null);e.__decorate([g.property({json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],d.prototype,"charts",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"createQueryVersion",null);e.__decorate([g.property({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],d.prototype,"copyright",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"datesInUnknownTimezone",void 0);
e.__decorate([g.property({type:String,json:{read:{source:"layerDefinition.displayField"},origins:{service:{read:{source:"displayField"}}}}})],d.prototype,"displayField",void 0);e.__decorate([g.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],d.prototype,"definitionExpression",void 0);e.__decorate([g.property({types:O.symbolTypes,readOnly:!0})],d.prototype,"defaultSymbol",void 0);e.__decorate([g.property({type:Ka.DataLayerSource})],
d.prototype,"dynamicDataSource",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"editFieldsInfo",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"editingEnabled",null);e.__decorate([p.reader(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],d.prototype,"readEditingEnabled",null);e.__decorate([p.reader("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],d.prototype,"readEditingEnabledFromWebMap",null);e.__decorate([D.writer(["portal-item",
"web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],d.prototype,"writeEditingEnabled",null);e.__decorate([D.writer("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],d.prototype,"writeEditingEnabledToWebMap",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"editingInfo",void 0);e.__decorate([p.reader("editingInfo")],d.prototype,"readEditingInfo",null);e.__decorate([g.property(t.elevationInfo)],d.prototype,"elevationInfo",
void 0);e.__decorate([g.property(Ca.featureReductionProperty)],d.prototype,"featureReduction",void 0);e.__decorate([g.property({...B.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:J}}}}})],d.prototype,"fields",void 0);e.__decorate([g.property(B.fieldsIndex)],d.prototype,"fieldsIndex",void 0);e.__decorate([g.property({type:Ga,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],
d.prototype,"floorInfo",void 0);e.__decorate([g.property({type:na,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],d.prototype,"formTemplate",void 0);e.__decorate([g.property({type:oa,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);e.__decorate([g.property()],d.prototype,"gdbVersion",void 0);e.__decorate([g.property({readOnly:!0,type:Ea,json:{read:{source:"geometryProperties"}}})],d.prototype,"geometryFieldsInfo",
void 0);e.__decorate([g.property({type:"point polygon polyline multipoint multipatch mesh".split(" "),json:{origins:{service:{read:K.read},"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:J,writer(m,r,f){(m=m?K.toJSON(m):null)&&G.setDeepValue(f,m,r)}}}},read:{source:"layerDefinition.geometryType",reader:K.read}}})],d.prototype,"geometryType",void 0);e.__decorate([g.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],d.prototype,"hasM",
void 0);e.__decorate([g.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],d.prototype,"hasZ",void 0);e.__decorate([g.property({readOnly:!0,type:pa})],d.prototype,"heightModelInfo",void 0);e.__decorate([g.property({type:Date})],d.prototype,"historicMoment",void 0);e.__decorate([g.property(t.id)],d.prototype,"id",void 0);e.__decorate([g.property({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],d.prototype,"infoFor3D",void 0);e.__decorate([g.property({readOnly:!0,
json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],d.prototype,"isTable",void 0);e.__decorate([p.reader("service","isTable",["type","geometryType"]),p.reader("isTable",["layerDefinition.type","layerDefinition.geometryType"])],d.prototype,"readIsTable",null);e.__decorate([D.writer("web-map","isTable")],d.prototype,"writeIsTable",null);e.__decorate([g.property(t.labelsVisible)],d.prototype,"labelsVisible",void 0);e.__decorate([g.property({type:[Fa],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",
reader:V.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:V.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],d.prototype,"labelingInfo",void 0);e.__decorate([g.property(t.opacityDrawingInfo)],d.prototype,"opacity",void 0);e.__decorate([g.property({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],d.prototype,"layerId",void 0);e.__decorate([g.property(t.legendEnabled)],d.prototype,"legendEnabled",
void 0);e.__decorate([g.property({type:["show","hide"]})],d.prototype,"listMode",void 0);e.__decorate([g.property(t.minScale)],d.prototype,"minScale",void 0);e.__decorate([p.reader("service","minScale",["minScale","effectiveMinScale"])],d.prototype,"readMinScale",null);e.__decorate([g.property(t.maxScale)],d.prototype,"maxScale",void 0);e.__decorate([p.reader("service","maxScale",["maxScale","effectiveMaxScale"])],d.prototype,"readMaxScale",null);e.__decorate([g.property({type:String})],d.prototype,
"globalIdField",void 0);e.__decorate([p.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"]),p.reader("service","globalIdField",["globalIdField","fields"])],d.prototype,"readGlobalIdFieldFromService",null);e.__decorate([g.property({type:String,json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:J}}}}})],d.prototype,"objectIdField",void 0);e.__decorate([p.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),
p.reader("service","objectIdField",["objectIdField","fields"])],d.prototype,"readObjectIdFieldFromService",null);e.__decorate([g.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],d.prototype,"operationalLayerType",void 0);e.__decorate([g.property(B.outFields)],d.prototype,"outFields",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"parsedUrl",null);e.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],d.prototype,"path",void 0);
e.__decorate([g.property(t.popupEnabled)],d.prototype,"popupEnabled",void 0);e.__decorate([g.property({type:Y,json:{name:"popupInfo",write:!0}})],d.prototype,"popupTemplate",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"defaultPopupTemplate",null);e.__decorate([g.property({type:[Ha],readOnly:!0})],d.prototype,"relationships",void 0);e.__decorate([g.property({types:N.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:N.webSceneRendererTypes,
name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(m,r,f){return{ignoreOrigin:null==f?void 0:f.writeLayerSchema}}}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy(m,r,f){return{ignoreOrigin:null==f?void 0:f.writeLayerSchema}}}}})],d.prototype,"renderer",null);e.__decorate([p.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),p.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],d.prototype,"readRenderer",
null);e.__decorate([g.property()],d.prototype,"sourceJSON",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"returnM",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"returnZ",void 0);e.__decorate([g.property(t.screenSizePerspectiveEnabled)],d.prototype,"screenSizePerspectiveEnabled",void 0);e.__decorate([g.property({clonable:!1})],d.prototype,"source",null);e.__decorate([ka.cast("source")],d.prototype,"castSource",null);e.__decorate([p.reader("portal-item","source",["featureSet"]),
p.reader("web-map","source",["featureSet"])],d.prototype,"readSource",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"serviceDefinitionExpression",void 0);e.__decorate([p.reader("service","serviceDefinitionExpression",["definitionQuery","definitionExpression"])],d.prototype,"readServiceDefinitionExpression",null);e.__decorate([g.property({type:Q,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],d.prototype,"spatialReference",
void 0);e.__decorate([g.property({type:Number})],d.prototype,"subtypeCode",void 0);e.__decorate([g.property({type:[T]})],d.prototype,"templates",void 0);e.__decorate([p.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],d.prototype,"readTemplates",null);e.__decorate([g.property({type:Ia})],d.prototype,"timeInfo",void 0);e.__decorate([g.property()],d.prototype,"title",void 0);e.__decorate([p.reader("service","title",["name"]),p.reader("portal-item","title",["layerDefinition.title",
"layerDefinition.name","title"])],d.prototype,"readTitle",null);e.__decorate([p.reader("web-map","title",["layerDefinition.name","title"])],d.prototype,"readTitleFromWebMap",null);e.__decorate([g.property({type:String})],d.prototype,"sublayerTitleMode",void 0);e.__decorate([g.property({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],d.prototype,"trackIdField",void 0);e.__decorate([g.property({json:{read:!1}})],d.prototype,"type",void 0);e.__decorate([g.property({type:String})],d.prototype,
"typeIdField",void 0);e.__decorate([p.reader("service","typeIdField"),p.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,"readTypeIdField",null);e.__decorate([g.property({type:[U]})],d.prototype,"types",void 0);e.__decorate([p.reader("service","types",["types"]),p.reader("types",["layerDefinition.types"])],d.prototype,"readTypes",null);e.__decorate([g.property({readOnly:!0,json:{write:!1}})],d.prototype,"serverGens",void 0);e.__decorate([g.property({type:z.ofType(S.FeatureIndex),
readOnly:!0})],d.prototype,"indexes",void 0);e.__decorate([g.property(t.url)],d.prototype,"url",null);e.__decorate([D.writer("url")],d.prototype,"writeUrl",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"userIsAdmin",void 0);e.__decorate([g.property({json:{origins:{service:{read:!0}},read:!1}})],d.prototype,"version",void 0);e.__decorate([p.reader("service","version","currentVersion capabilities drawingInfo hasAttachments htmlPopupType relationships timeInfo typeIdField types".split(" "))],
d.prototype,"readVersion",null);e.__decorate([g.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],d.prototype,"visible",void 0);e.__decorate([p.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],d.prototype,"readVisible",null);d=e.__decorate([la.subclass("esri.layers.FeatureLayer")],d);const L=ma.createTypeReader({types:O.symbolTypesRenderer});return d});