// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../geometry ../Graphic ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../core/Collection ../core/Error ../core/HandleOwner ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/reactiveUtils ../core/unitUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/arrayUtils ../core/has ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/originUtils ../geometry/Extent ../geometry/projection ../geometry/support/spatialReferenceUtils ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./support/arcgisLayerUrl ./support/DefaultSymbols ../portal/Portal ../portal/PortalItem ../rest/networkService ../rest/route ../rest/support/DirectionLine ../rest/support/DirectionPoint ../rest/support/networkEnums ../rest/support/PointBarrier ../rest/support/PolygonBarrier ../rest/support/PolylineBarrier ../rest/support/RouteInfo ../rest/support/RouteParameters ../rest/support/RouteSettings ../rest/support/Stop ../geometry/SpatialReference ../geometry/Multipoint".split(" "),
function(F,l,W,k,ta,ua,db,eb,fb,gb,hb,ib,jb,va,w,A,wa,xa,g,ya,za,Aa,Ba,Ca,r,kb,lb,mb,z,Da,Ea,Fa,Ga,X,Ha,Ia,Ja,Ka,La,Ma,Na,Y,Oa,Pa,Qa,Ra,M,N,Z,G,H,I,Q,aa,Sa,J,K,Ta){function S(p){return p.length?p:null}function Ua(p,n,h){var b,a,c,d,m,q,u,v,x,f,D;const {impedance:L,networkDataset:B,supportedTravelModes:y,defaultTravelMode:Va}=n,T=B.networkAttributes.filter(e=>"esriNAUTCost"===e.usageType);var O=y.find(e=>e.id===Va);O=null!=(b=h.travelMode)?b:O;if(g.isNone(O))ba.warn("route-layer:missing-travel-mode",
"The routing service must have a default travel mode or one must be specified in the route parameter.");else{var {timeAttributeName:C,distanceAttributeName:P}=O,ca=T.find(e=>e.name===C);b=T.find(e=>e.name===P);var R=null!=(a=null!=(c=null==(d=h.travelMode)?void 0:d.impedanceAttributeName)?c:h.impedanceAttribute)?a:L;a=Z.directionsTimeUnitJsonMap.fromJSON(null==ca?void 0:ca.units);c=Z.directionsLengthUnitJsonMap.fromJSON(null==b?void 0:b.units);if(!a||!c)throw new A("routelayer:unknown-impedance-units",
"the units of either the distance or time impedance are unknown");d=null!=(m=h.directionsLanguage)?m:n.directionsLanguage;var da=null!=(q=null!=(u=h.accumulateAttributes)?u:n.accumulateAttributeNames)?q:[],Wa=new Set(T.filter(({name:e})=>e===C||e===P||e===R||da.includes(e)).map(({name:e})=>e));n=e=>{for(const ea in e)Wa.has(ea)||delete e[ea]};for(const e of p.pointBarriers)if(g.isSome(e.costs)){var t;e.addedCost=null!=(t=e.costs[R])?t:0;n(e.costs)}for(const e of p.polygonBarriers)if(g.isSome(e.costs)){var fa;
e.scaleFactor=null!=(fa=e.costs[R])?fa:1;n(e.costs)}for(const e of p.polylineBarriers)if(g.isSome(e.costs)){var ha;e.scaleFactor=null!=(ha=e.costs[R])?ha:1;n(e.costs)}({routeInfo:t}=p);var {findBestSequence:Xa,preserveFirstStop:Ya,preserveLastStop:Za,startTimeIsUTC:$a,timeWindowsAreUTC:ab}=h;t.analysisSettings=new Sa({accumulateAttributes:da,directionsLanguage:d,findBestSequence:Xa,preserveFirstStop:Ya,preserveLastStop:Za,startTimeIsUTC:$a,timeWindowsAreUTC:ab,travelMode:O});t.totalDuration=E(null!=
(v=t.totalCosts[C])?v:0,a);t.totalDistance=U(null!=(x=t.totalCosts[P])?x:0,c);t.totalLateDuration=E(null!=(f=t.totalViolations[C])?f:0,a);t.totalWaitDuration=E(null!=(D=t.totalWait[C])?D:0,a);g.isSome(t.totalCosts)&&n(t.totalCosts);g.isSome(t.totalViolations)&&n(t.totalViolations);g.isSome(t.totalWait)&&n(t.totalWait);for(const e of p.stops){if(g.isSome(e.serviceCosts)){var ia,ja;e.serviceDuration=E(null!=(ia=e.serviceCosts[C])?ia:0,a);e.serviceDistance=U(null!=(ja=e.serviceCosts[P])?ja:0,c);n(e.serviceCosts)}if(g.isSome(e.cumulativeCosts)){var ka,
la;e.cumulativeDuration=E(null!=(ka=e.cumulativeCosts[C])?ka:0,a);e.cumulativeDistance=U(null!=(la=e.cumulativeCosts[P])?la:0,c);n(e.cumulativeCosts)}if(g.isSome(e.violations)){var ma;e.lateDuration=E(null!=(ma=e.violations[C])?ma:0,a);n(e.violations)}if(g.isSome(e.wait)){var na;e.waitDuration=E(null!=(na=e.wait[C])?na:0,a);n(e.wait)}}}}function oa(p){return V.apply(this,arguments)}function V(){V=F._asyncToGenerator(function*(p){const n=K.WGS84;yield X.initializeProjection(p.spatialReference,n);return X.project(p,
n)});return V.apply(this,arguments)}function E(p,n){switch(n){case "seconds":return p/60;case "hours":return 60*p;case "days":return 1440*p;default:return p}}function U(p,n){return"decimal-degrees"===n||"points"===n||"unknown"===n?p:Ba.convertUnit(p,n,"meters")}const bb=w.ofType(M),cb=w.ofType(N),pa=w.ofType(G),qa=w.ofType(H),ra=w.ofType(I),sa=w.ofType(J),ba=xa.getLogger("esri.layers.RouteLayer");k=function(p){function n(...b){var a=p.call(this,...b)||this;a._featureCollection=null;a._type="Feature Collection";
a.defaultSymbols=new Y;a.directionLines=null;a.directionPoints=null;a.featureCollectionType="route";a.legendEnabled=!1;a.maxScale=0;a.minScale=0;a.pointBarriers=new pa;a.polygonBarriers=new qa;a.polylineBarriers=new ra;a.routeInfo=null;a.spatialReference=K.WGS84;a.stops=new sa;a.type="route";a.handles.add(Aa.watch(()=>a.stops.toArray(),()=>{g.isNone(a.routeInfo)&&a._setStopSymbol(a.stops)},{sync:!0}));return a}F._inheritsLoose(n,p);var h=n.prototype;h.writeFeatureCollectionWebmap=function(b,a,c,d){b=
[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(m=>!!m);c=b.map((m,q)=>q);za.setDeepValue("web-map"===d.origin?"featureCollection.layers":"layers",b,a);a.opacity=this.opacity;a.visibility=this.visible;a.visibleLayers=c};h.readDirectionLines=function(b,a){return this._getNetworkFeatures(a,"DirectionLines",c=>M.fromPortalJSON(c))};h.readDirectionPoints=function(b,
a){return this._getNetworkFeatures(a,"DirectionPoints",c=>N.fromPortalJSON(c))};h.readMaxScale=function(b,a){var c;b=("layers"in a?a.layers:a.featureCollection.layers).find(d=>g.isSome(d.layerDefinition.maxScale));return null!=(c=null==b?void 0:b.layerDefinition.maxScale)?c:0};h.readMinScale=function(b,a){var c;b=("layers"in a?a.layers:a.featureCollection.layers).find(d=>g.isSome(d.layerDefinition.minScale));return null!=(c=null==b?void 0:b.layerDefinition.minScale)?c:0};h.readPointBarriers=function(b,
a){return this._getNetworkFeatures(a,"Barriers",c=>G.fromPortalJSON(c))};h.readPolygonBarriers=function(b,a){return this._getNetworkFeatures(a,"PolygonBarriers",c=>H.fromPortalJSON(c))};h.readPolylineBarriers=function(b,a){return this._getNetworkFeatures(a,"PolylineBarriers",c=>I.fromPortalJSON(c))};h.readRouteInfo=function(b,a){b=this._getNetworkFeatures(a,"RouteInfo",c=>Q.fromPortalJSON(c));return 0<b.length?b.getItemAt(0):null};h.readSpatialReference=function(b,a){var c,d;b="layers"in a?a.layers:
a.featureCollection.layers;if(!b.length)return K.WGS84;({layerDefinition:b}=b[0]);b=null!=(c=null!=(d=b.spatialReference)?d:b.extent.spatialReference)?c:Ha.WGS84;return K.fromJSON(b)};h.readStops=function(b,a){return this._getNetworkFeatures(a,"Stops",c=>J.fromPortalJSON(c),c=>this._setStopSymbol(c))};h.load=function(b){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},b));return Promise.resolve(this)};h.removeAll=function(){g.isSome(this.directionLines)&&(this.directionLines.removeAll(),
this._set("directionLines",null));g.isSome(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null));g.isSome(this.routeInfo)&&this._set("routeInfo",null);this.pointBarriers.removeAll();this.polygonBarriers.removeAll();this.polylineBarriers.removeAll();this.stops.removeAll()};h.save=function(){var b=F._asyncToGenerator(function*(){yield this.load();const {fullExtent:a,portalItem:c}=this;if(!c)throw new A("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");
if(!c.id)throw new A("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==c.type)throw new A("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(g.isNone(this.routeInfo))throw new A("routelayer:route-unsolved","save() requires a solved route");var {portal:d}=c;yield d._signIn();d.user||(yield c.reload());if(d.user.username!==c.owner)throw new A("routelayer:not-portal-item-owner","You can only overwrite your portal items");
var {itemUrl:m}=c;m=m&&Ca.urlToObject(m);d=this.write(null,{messages:[],origin:"portal-item",portal:d,url:m,writtenProperties:[]});c.extent=yield oa(a);c.title=this.title;yield c.update({data:d});return c});return function(){return b.apply(this,arguments)}}();h.saveAs=function(){var b=F._asyncToGenerator(function*(a,c={}){var d,m,q;yield this.load();if(g.isNone(this.routeInfo))throw new A("routelayer:route-unsolved","saveAs() requires a solved route");a=Pa.from(a).clone();null!=(d=a.extent)?d:a.extent=
yield oa(this.fullExtent);a.id=null;null!=(m=a.portal)?m:a.portal=Oa.getDefault();null!=(q=a.title)?q:a.title=this.title;a.type="Feature Collection";a.typeKeywords=["Data","Feature Collection","Multilayer","Route Layer"];({portal:d}=a);m={messages:[],origin:"portal-item",portal:d,url:null,writtenProperties:[]};yield d._signIn();c=null==c?void 0:c.folder;q=this.write(null,m);yield d.user.addItem({item:a,folder:c,data:q});this.portalItem=a;Fa.updateOrigins(m);return m.portalItem=a});return function(a){return b.apply(this,
arguments)}}();h.solve=function(){var b=F._asyncToGenerator(function*(a,c){var d,m,q,u,v,x,f=null!=(d=null==a?void 0:a.stops)?d:this.stops;d=null!=(m=null==a?void 0:a.pointBarriers)?m:S(this.pointBarriers);m=null!=(q=null==a?void 0:a.polylineBarriers)?q:S(this.polylineBarriers);q=null!=(u=null==a?void 0:a.polygonBarriers)?u:S(this.polygonBarriers);if(g.isNone(f))throw new A("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===
f.declaredClass||"esri.rest.support.NetworkFeatureSet"===f.declaredClass)&&2>f.features.length||w.isCollection(f)&&2>f.length)throw new A("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");u=yield Qa.fetchServiceDescription(this.url,null==a?void 0:a.apiKey,c);const {defaultTravelMode:D,supportedTravelModes:L}=u;var B=L.find(y=>y.id===D);B=null!=(v=null==a?void 0:a.travelMode)?v:B;v=null!=(x=null==a?void 0:a.accumulateAttributes)?x:[];g.isSome(B)&&v.push(B.distanceAttributeName);
x={startTime:new Date};f={accumulateAttributes:v,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:d,polylineBarriers:m,polygonBarriers:q,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!d,returnDirections:!0,returnPolygonBarriers:!!q,returnPolylineBarriers:!!m,returnRoutes:!0,returnStops:!0,stops:f};a=a?aa.from(a):new aa;for(const y in x)null==a[y]&&(a[y]=x[y]);a.set(f);c=yield Ra.solve(this.url,a,c);c=this._toRouteLayerSolution(c);this._isOverridden("title")||(this.title=
g.unwrapOrValue(c.routeInfo.name,"Route"));Ua(c,u,a);return c});return function(a,c){return b.apply(this,arguments)}}();h.update=function(b){const {stops:a,directionLines:c,directionPoints:d,pointBarriers:m,polylineBarriers:q,polygonBarriers:u,routeInfo:v}=b;this.set({stops:a,pointBarriers:m,polylineBarriers:q,polygonBarriers:u});this._set("directionLines",c);this._set("directionPoints",d);this._set("routeInfo",v)};h._getLayerDefinition=function(){return{capabilities:"Query,Update,Editing",extent:this.fullExtent.toJSON(),
hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),type:"Feature Layer",typeIdField:""}};h._getNetworkFeatures=function(b,a,c,d){b=("layers"in b?b.layers:b.featureCollection.layers).find(f=>f.layerDefinition.name===a);if(g.isNone(b))return new w;const {layerDefinition:m,popupInfo:q,featureSet:u}=b;b=m.drawingInfo.renderer;const {features:v}=u,x=b&&va.read(b);b=v.map(f=>{var D,L,B;const y=c(f);({attributes:f}=f);
f=new ta({attributes:f});null!=(D=y.symbol)?D:y.symbol=null!=(L=null==x?void 0:x.getSymbol(f))?L:this._getNetworkSymbol(a);null!=(B=y.popupTemplate)?B:y.popupTemplate=q&&ua.fromJSON(q);return y});d&&b.some(f=>!f.symbol)&&d(b);return new w(b)};h._getNetworkSymbol=function(b){switch(b){case "Barriers":return this.defaultSymbols.pointBarriers;case "DirectionPoints":return this.defaultSymbols.directionPoints;case "DirectionLines":return this.defaultSymbols.directionLines;case "PolylineBarriers":return this.defaultSymbols.polylineBarriers;
case "PolygonBarriers":return this.defaultSymbols.polygonBarriers;case "RouteInfo":return this.defaultSymbols.routeInfo;case "Stops":return null}};h._setStopSymbol=function(b){if(b&&0!==b.length)if(g.isNone(this.routeInfo)||1===b.length)b.forEach((d,m)=>{switch(m){case 0:d.symbol=this.defaultSymbols.firstStop;break;case b.length-1:d.symbol=this.defaultSymbols.lastStop;break;default:d.symbol=this.defaultSymbols.middleStop}});else{var a=b.map(d=>d.sequence).filter(d=>g.isSome(d)),c=Math.min(...a);a=
Math.max(...a);for(const d of b)d.symbol=d.sequence===c?this.defaultSymbols.firstStop:d.sequence===a?this.defaultSymbols.lastStop:"ok"!==d.status&&"not-located-on-closest"!==d.status?this.defaultSymbols.invalidStop:"waypoint"===d.locationType?this.defaultSymbols.waypointStop:"break"===d.locationType?this.defaultSymbols.breakStop:this.defaultSymbols.middleStop}};h._toRouteLayerSolution=function(b){var a,c,d,m,q,u=b.routeResults[0].stops.map(f=>J.fromJSON(f.toJSON()));this._setStopSymbol(u);u=new sa(u);
const v=new qa(null==(a=b.polygonBarriers)?void 0:a.map(f=>{f=H.fromJSON(f.toJSON());f.symbol=this.defaultSymbols.polygonBarriers;return f}));a=new ra(null==(c=b.polylineBarriers)?void 0:c.map(f=>{f=I.fromJSON(f.toJSON());f.symbol=this.defaultSymbols.polylineBarriers;return f}));c=new pa(null==(d=b.pointBarriers)?void 0:d.map(f=>{f=G.fromJSON(f.toJSON());f.symbol=this.defaultSymbols.pointBarriers;return f}));d=Q.fromJSON(b.routeResults[0].route.toJSON());d.symbol=this.defaultSymbols.routeInfo;const x=
new cb(null==(m=b.routeResults[0].directionPoints)?void 0:m.features.map(f=>{f=N.fromJSON(f.toJSON());f.symbol=this.defaultSymbols.directionPoints;return f}));return{directionLines:new bb(null==(q=b.routeResults[0].directionLines)?void 0:q.features.map(f=>{f=M.fromJSON(f.toJSON());f.symbol=this.defaultSymbols.directionLines;return f})),directionPoints:x,pointBarriers:c,polygonBarriers:v,polylineBarriers:a,routeInfo:d,stops:u}};h._writeDirectionLines=function(){return g.isNone(this.directionLines)||
!this.directionLines.length?null:{featureSet:{features:this.directionLines.toArray().map(b=>b.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionLines.toJSON()}},fields:M.fields,geometryType:"esriGeometryPolyline",name:"DirectionLines",title:"Direction Lines"},popupInfo:M.popupInfo}};h._writeDirectionPoints=function(){return g.isNone(this.directionPoints)||!this.directionPoints.length?
null:{featureSet:{features:this.directionPoints.toArray().map(b=>b.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionPoints.toJSON()}},fields:N.fields,geometryType:"esriGeometryPoint",name:"DirectionPoints",title:"Direction Points"},popupInfo:N.popupInfo}};h._writePointBarriers=function(){return g.isNone(this.pointBarriers)||!this.pointBarriers.length?null:{featureSet:{features:this.pointBarriers.toArray().map(b=>
b.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.pointBarriers.toJSON()}},fields:G.fields,geometryType:"esriGeometryPoint",name:"Barrier",title:"Point Barrier"},popupInfo:G.popupInfo}};h._writePolygonBarriers=function(){return g.isNone(this.polygonBarriers)||!this.polygonBarriers.length?null:{featureSet:{features:this.polygonBarriers.toArray().map(b=>b.toPortalJSON()),geometryType:"esriGeometryPolygon"},
layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polygonBarriers.toJSON()}},fields:H.fields,geometryType:"esriGeometryPolygon",name:"PolygonBarriers",title:"Polygon Barriers"},popupInfo:H.popupInfo}};h._writePolylineBarriers=function(){return g.isNone(this.polylineBarriers)||!this.polylineBarriers.length?null:{featureSet:{features:this.polylineBarriers.toArray().map(b=>b.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),
drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polylineBarriers.toJSON()}},fields:I.fields,geometryType:"esriGeometryPolyline",name:"PolylineBarriers",title:"Line Barriers"},popupInfo:I.popupInfo}};h._writeRouteInfo=function(){return g.isNone(this.routeInfo)?null:{featureSet:{features:[this.routeInfo.toPortalJSON()],geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.routeInfo.toJSON()}},
fields:Q.fields,geometryType:"esriGeometryPolyline",name:"RouteInfo",title:"Route Details"},popupInfo:Q.popupInfo}};h._writeStops=function(){return g.isNone(this.stops)||!this.stops.length?null:{featureSet:{features:this.stops.toArray().map(b=>b.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"uniqueValue",field1:"Sequence",defaultSymbol:this.defaultSymbols.middleStop.toJSON(),uniqueValueInfos:[{value:"1",symbol:this.defaultSymbols.firstStop.toJSON(),
label:"First Stop"},{value:`${this.stops.length}`,symbol:this.defaultSymbols.lastStop.toJSON(),label:"Last Stop"}]}},fields:J.fields,geometryType:"esriGeometryPoint",name:"Stops",title:"Stops"},popupInfo:J.popupInfo}};F._createClass(n,[{key:"fullExtent",get:function(){if(g.isSome(this.routeInfo)&&g.isSome(this.routeInfo.geometry))return this.routeInfo.geometry.extent;if(1<this.stops.length){var {spatialReference:b}=this.stops[0];b=new Ta({spatialReference:b});const a=this.stops.toArray().map(c=>c.geometry);
for(const c of a)g.isSome(c)&&b.addPoint(c);return b.extent}return new Ga({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:K.WGS84})}},{key:"title",get:function(){return g.isSome(this.routeInfo)&&g.isSome(this.routeInfo.name)?this.routeInfo.name:"Route"},set:function(b){b?this._override("title",b):this._clearOverride("title")}},{key:"url",get:function(){return W.routeServiceUrl},set:function(b){null==b?this._set("url",W.routeServiceUrl):this._set("url",Na.sanitizeUrl(b,ba))}}]);return n}(Ja.BlendLayer(Ma.ScaleRangeLayer(Ka.OperationalLayer(La.PortalLayer(ya.MultiOriginJSONMixin(wa.HandleOwnerMixin(Ia)))))));
l.__decorate([r.property({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],k.prototype,"_featureCollection",void 0);l.__decorate([Ea.writer(["web-map","portal-item"],"_featureCollection")],k.prototype,"writeFeatureCollectionWebmap",null);l.__decorate([r.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=
this.portalItem}}}}}}})],k.prototype,"_type",void 0);l.__decorate([r.property({nonNullable:!0,type:Y})],k.prototype,"defaultSymbols",void 0);l.__decorate([r.property({readOnly:!0})],k.prototype,"directionLines",void 0);l.__decorate([z.reader(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],k.prototype,"readDirectionLines",null);l.__decorate([r.property({readOnly:!0})],k.prototype,"directionPoints",void 0);l.__decorate([z.reader(["web-map","portal-item"],"directionPoints",
["layers","featureCollection.layers"])],k.prototype,"readDirectionPoints",null);l.__decorate([r.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],k.prototype,"featureCollectionType",void 0);l.__decorate([r.property({readOnly:!0})],k.prototype,"fullExtent",null);l.__decorate([r.property({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],k.prototype,"legendEnabled",void 0);l.__decorate([r.property({type:["show","hide"]})],k.prototype,"listMode",
void 0);l.__decorate([r.property({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"maxScale",void 0);l.__decorate([z.reader(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],k.prototype,"readMaxScale",null);l.__decorate([r.property({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"minScale",void 0);l.__decorate([z.reader(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],k.prototype,"readMinScale",null);l.__decorate([r.property({type:["ArcGISFeatureLayer"],
value:"ArcGISFeatureLayer"})],k.prototype,"operationalLayerType",void 0);l.__decorate([r.property({nonNullable:!0,type:w.ofType(G)})],k.prototype,"pointBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],k.prototype,"readPointBarriers",null);l.__decorate([r.property({nonNullable:!0,type:w.ofType(H)})],k.prototype,"polygonBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],
k.prototype,"readPolygonBarriers",null);l.__decorate([r.property({nonNullable:!0,type:w.ofType(I)})],k.prototype,"polylineBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],k.prototype,"readPolylineBarriers",null);l.__decorate([r.property({readOnly:!0})],k.prototype,"routeInfo",void 0);l.__decorate([z.reader(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],k.prototype,"readRouteInfo",null);l.__decorate([r.property({type:K})],
k.prototype,"spatialReference",void 0);l.__decorate([z.reader(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],k.prototype,"readSpatialReference",null);l.__decorate([r.property({nonNullable:!0,type:w.ofType(J)})],k.prototype,"stops",void 0);l.__decorate([z.reader(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],k.prototype,"readStops",null);l.__decorate([r.property()],k.prototype,"title",null);l.__decorate([r.property({readOnly:!0,json:{read:!1}})],
k.prototype,"type",void 0);l.__decorate([r.property()],k.prototype,"url",null);return k=l.__decorate([Da.subclass("esri.layers.RouteLayer")],k)});