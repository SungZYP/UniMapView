// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../PopupTemplate ../../symbols ../../core/JSONSupport ../../core/lang ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../geometry/Point ../route/utils ./networkEnums ../../symbols/support/jsonUtils".split(" "),function(D,c,r,E,b,F,e,d,
I,k,G,q,t,l,g,H){var n;b=n=function(u){function p(a){a=u.call(this,a)||this;a.arriveCurbApproach=null;a.arriveTime=null;a.arriveTimeOffset=null;a.bearing=null;a.bearingTol=null;a.cumulativeCosts=null;a.cumulativeDistance=null;a.cumulativeDuration=null;a.curbApproach=null;a.departCurbApproach=null;a.departTime=null;a.departTimeOffset=null;a.distanceToNetworkInMeters=null;a.geometry=null;a.lateDuration=null;a.locationType=null;a.name=null;a.navLatency=null;a.objectId=null;a.popupTemplate=null;a.posAlong=
null;a.routeName=null;a.serviceCosts=null;a.serviceDistance=null;a.serviceDuration=null;a.sequence=null;a.sideOfEdge=null;a.snapX=null;a.snapY=null;a.snapZ=null;a.sourceId=null;a.sourceOid=null;a.status=null;a.symbol=null;a.timeWindowEnd=null;a.timeWindowEndOffset=null;a.timeWindowStart=null;a.timeWindowStartOffset=null;a.violations=null;a.waitDuration=null;a.wait=null;return a}D._inheritsLoose(p,u);var h=p.prototype;h.readArriveTimeOffset=function(a,f){return l.getTimezoneOffset(f.attributes.ArriveTime,
f.attributes.ArriveTimeUTC)};h.readCumulativeCosts=function(a,f){return l.getPrefixedProperties(f.attributes,"Cumul_")};h.readDepartTimeOffset=function(a,f){return l.getTimezoneOffset(f.attributes.DepartTime,f.attributes.DepartTimeUTC)};h.readServiceCosts=function(a,f){return l.getPrefixedProperties(f.attributes,"Attr_")};h.writeServiceCosts=function(a,f){if(!e.isNone(a)){f.attributes||(f.attributes={});for(const m in a)f.attributes[`Attr_${m}`]=a[m]}};h.writeTimeWindowEnd=function(a,f){e.isNone(a)||
(f.attributes||(f.attributes={}),f.attributes.TimeWindowEnd=a.getTime())};h.writeTimeWindowStart=function(a,f){e.isNone(a)||(f.attributes||(f.attributes={}),f.attributes.TimeWindowStart=a.getTime())};h.readViolations=function(a,f){return l.getPrefixedProperties(f.attributes,"Violation_")};h.readWait=function(a,f){return l.getPrefixedProperties(f.attributes,"Wait_")};p.fromPortalJSON=function(a){var f,m,v,w,x,y,z,A,B,C;return new n({arriveCurbApproach:e.isSome(a.attributes.ArrivalCurbApproach)?g.curbApproachJsonMap.fromJSON(a.attributes.ArrivalCurbApproach):
null,arriveTime:e.isSome(a.attributes.ArrivalTime)?new Date(a.attributes.ArrivalTime):null,arriveTimeOffset:a.attributes.ArrivalUTCOffset,cumulativeCosts:e.isSome(a.attributes.CumulativeCosts)?JSON.parse(a.attributes.CumulativeCosts):null,cumulativeDistance:null!=(f=a.attributes.CumulativeMeters)?f:null,cumulativeDuration:null!=(m=a.attributes.CumulativeMinutes)?m:null,curbApproach:e.isSome(a.attributes.CurbApproach)?g.curbApproachJsonMap.fromJSON(a.attributes.CurbApproach):null,departCurbApproach:e.isSome(a.attributes.DepartureCurbApproach)?
g.curbApproachJsonMap.fromJSON(a.attributes.DepartureCurbApproach):null,departTime:e.isSome(a.attributes.DepartureTime)?new Date(a.attributes.DepartureTime):null,departTimeOffset:null!=(v=a.attributes.DepartureUTCOffset)?v:null,geometry:t.fromJSON(a.geometry),lateDuration:null!=(w=a.attributes.LateMinutes)?w:null,locationType:e.isSome(a.attributes.LocationType)?g.locationTypeJsonMap.fromJSON(a.attributes.LocationType):null,name:a.attributes.Name,objectId:a.attributes.__OBJECTID,popupTemplate:e.isSome(a.popupInfo)?
r.fromJSON(a.popupInfo):null,routeName:a.attributes.RouteName,sequence:null!=(x=a.attributes.Sequence)?x:null,serviceCosts:e.isSome(a.attributes.ServiceCosts)?JSON.parse(a.attributes.ServiceCosts):null,serviceDistance:null!=(y=a.attributes.ServiceMeters)?y:null,serviceDuration:null!=(z=a.attributes.ServiceMinutes)?z:null,status:e.isSome(a.attributes.Status)?g.statusJsonMap.fromJSON(a.attributes.Status):null,symbol:e.isSome(a.symbol)?H.fromJSON(a.symbol):null,timeWindowEnd:e.isSome(a.attributes.TimeWindowEnd)?
new Date(a.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!=(A=a.attributes.TimeWindowEndUTCOffset)?A:null,timeWindowStart:e.isSome(a.attributes.TimeWindowStart)?new Date(a.attributes.TimeWindowStart):null,timeWindowStartOffset:null!=(B=a.attributes.TimeWindowStartUTCOffset)?B:null,waitDuration:null!=(C=a.attributes.WaitMinutes)?C:null})};h.clone=function(){return new n(F.clone({arriveCurbApproach:this.arriveCurbApproach,arriveTime:this.arriveTime,arriveTimeOffset:this.arriveTimeOffset,bearing:this.bearing,
bearingTol:this.bearingTol,cumulativeCosts:this.cumulativeCosts,cumulativeDistance:this.cumulativeDistance,cumulativeTime:this.cumulativeDuration,curbApproach:this.curbApproach,departCurbApproach:this.departCurbApproach,departTime:this.departTime,departTimeOffset:this.departTimeOffset,distanceToNetworkInMeters:this.distanceToNetworkInMeters,geometry:this.geometry,lateDuration:this.lateDuration,locationType:this.locationType,name:this.name,navLatency:this.navLatency,objectId:this.objectId,popupTemplate:this.popupTemplate,
posAlong:this.posAlong,routeName:this.routeName,serviceCosts:this.serviceCosts,serviceDistance:this.serviceDistance,serviceDuration:this.serviceDuration,sequence:this.sequence,sideOfEdge:this.sideOfEdge,snapX:this.snapX,snapY:this.snapY,snapZ:this.snapZ,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol,timeWindowEnd:this.timeWindowEnd,timeWindowEndOffset:this.timeWindowEndOffset,timeWindowStart:this.timeWindowStart,timeWindowStartOffset:this.timeWindowStartOffset,
waitDuration:this.waitDuration}))};h.toPortalJSON=function(){var a,f;return{geometry:e.isSome(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:e.unwrap(this.objectId),ArrivalCurbApproach:e.isSome(this.arriveCurbApproach)?g.curbApproachJsonMap.toJSON(this.arriveCurbApproach):null,ArrivalTime:e.isSome(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:e.isSome(this.cumulativeCosts)?JSON.stringify(this.cumulativeCosts):null,CumulativeMeters:this.cumulativeDistance,
CumulativeMinutes:this.cumulativeDuration,CurbApproach:e.isSome(this.curbApproach)?g.curbApproachJsonMap.toJSON(this.curbApproach):null,DepartureCurbApproach:e.isSome(this.departCurbApproach)?g.curbApproachJsonMap.toJSON(this.departCurbApproach):null,DepartureTime:e.isSome(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:e.isSome(this.locationType)?g.locationTypeJsonMap.toJSON(this.locationType):null,Name:e.unwrap(this.name),
RouteName:e.unwrap(this.routeName),Sequence:this.sequence,ServiceCosts:e.isSome(this.serviceCosts)?JSON.stringify(this.serviceCosts):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:e.isSome(this.status)?g.statusJsonMap.toJSON(this.status):null,TimeWindowEnd:e.isSome(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!=(a=this.timeWindowEndOffset)?a:this.arriveTimeOffset,TimeWindowStart:e.isSome(this.timeWindowStart)?this.timeWindowStart.getTime():
null,TimeWindowStartUTCOffset:null!=(f=this.timeWindowEndOffset)?f:this.arriveTimeOffset,WaitMinutes:this.waitDuration},symbol:e.isSome(this.symbol)?this.symbol.toJSON():null,popupInfo:e.isSome(this.popupTemplate)?this.popupTemplate.toJSON():null}};return p}(b.JSONSupport);b.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,
domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",
type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",
code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",
length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",
code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",
editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",
code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",
editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}];b.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},
{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",
label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",
isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},
stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,
format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",
label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,
digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]};c.__decorate([d.property({type:g.curbApproachJsonMap.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:g.curbApproachJsonMap.read}}})],b.prototype,"arriveCurbApproach",void 0);c.__decorate([d.property({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],
b.prototype,"arriveTime",void 0);c.__decorate([d.property()],b.prototype,"arriveTimeOffset",void 0);c.__decorate([k.reader("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],b.prototype,"readArriveTimeOffset",null);c.__decorate([d.property({json:{name:"attributes.Bearing",read:!1,write:!0}})],b.prototype,"bearing",void 0);c.__decorate([d.property({json:{name:"attributes.BearingTol",read:!1,write:!0}})],b.prototype,"bearingTol",void 0);c.__decorate([d.property()],b.prototype,
"cumulativeCosts",void 0);c.__decorate([k.reader("cumulativeCosts",["attributes"])],b.prototype,"readCumulativeCosts",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"cumulativeDistance",void 0);c.__decorate([d.property({json:{read:!1}})],b.prototype,"cumulativeDuration",void 0);c.__decorate([d.property({type:g.curbApproachJsonMap.apiValues,json:{name:"attributes.CurbApproach",read:{reader:g.curbApproachJsonMap.read},write:{writer:g.curbApproachJsonMap.write}}})],b.prototype,"curbApproach",
void 0);c.__decorate([d.property({type:g.curbApproachJsonMap.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:g.curbApproachJsonMap.read}}})],b.prototype,"departCurbApproach",void 0);c.__decorate([d.property({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],b.prototype,"departTime",void 0);c.__decorate([d.property()],b.prototype,"departTimeOffset",void 0);c.__decorate([k.reader("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],b.prototype,"readDepartTimeOffset",
null);c.__decorate([d.property({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],b.prototype,"distanceToNetworkInMeters",void 0);c.__decorate([d.property({type:t,json:{write:!0}})],b.prototype,"geometry",void 0);c.__decorate([d.property({json:{name:"attributes.LateMinutes",read:!1}})],b.prototype,"lateDuration",void 0);c.__decorate([d.property({type:g.locationTypeJsonMap.apiValues,json:{name:"attributes.LocationType",read:{reader:g.locationTypeJsonMap.read},write:{writer:g.locationTypeJsonMap.write}}})],
b.prototype,"locationType",void 0);c.__decorate([d.property({json:{name:"attributes.Name",write:!0}})],b.prototype,"name",void 0);c.__decorate([d.property({json:{read:{source:"attributes.NavLatency"}}})],b.prototype,"navLatency",void 0);c.__decorate([d.property({json:{name:"attributes.ObjectID",write:!0}})],b.prototype,"objectId",void 0);c.__decorate([d.property({type:r,json:{read:!1}})],b.prototype,"popupTemplate",void 0);c.__decorate([d.property({json:{read:{source:"attributes.PosAlong"}}})],b.prototype,
"posAlong",void 0);c.__decorate([d.property({json:{name:"attributes.RouteName",write:!0}})],b.prototype,"routeName",void 0);c.__decorate([d.property()],b.prototype,"serviceCosts",void 0);c.__decorate([k.reader("serviceCosts",["attributes"])],b.prototype,"readServiceCosts",null);c.__decorate([q.writer("serviceCosts")],b.prototype,"writeServiceCosts",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"serviceDistance",void 0);c.__decorate([d.property({json:{read:!1}})],b.prototype,"serviceDuration",
void 0);c.__decorate([d.property({json:{name:"attributes.Sequence",write:!0}})],b.prototype,"sequence",void 0);c.__decorate([d.property({type:g.sideOfEdgeJsonMap.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:g.sideOfEdgeJsonMap.read}}})],b.prototype,"sideOfEdge",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapX"}}})],b.prototype,"snapX",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapY"}}})],b.prototype,"snapY",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapZ"}}})],
b.prototype,"snapZ",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SourceID"}}})],b.prototype,"sourceId",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SourceOID"}}})],b.prototype,"sourceOid",void 0);c.__decorate([d.property({type:g.statusJsonMap.apiValues,json:{read:{source:"attributes.Status",reader:g.statusJsonMap.read}}})],b.prototype,"status",void 0);c.__decorate([d.property({types:E.symbolTypes,json:{read:!1}})],b.prototype,"symbol",void 0);c.__decorate([d.property({type:Date,
json:{name:"attributes.TimeWindowEnd"}})],b.prototype,"timeWindowEnd",void 0);c.__decorate([q.writer("timeWindowEnd")],b.prototype,"writeTimeWindowEnd",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"timeWindowEndOffset",void 0);c.__decorate([d.property({type:Date,json:{name:"attributes.TimeWindowStart"}})],b.prototype,"timeWindowStart",void 0);c.__decorate([q.writer("timeWindowStart")],b.prototype,"writeTimeWindowStart",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,
"timeWindowStartOffset",void 0);c.__decorate([d.property()],b.prototype,"violations",void 0);c.__decorate([k.reader("violations",["attributes"])],b.prototype,"readViolations",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"waitDuration",void 0);c.__decorate([d.property()],b.prototype,"wait",void 0);c.__decorate([k.reader("wait",["attributes"])],b.prototype,"readWait",null);return b=n=c.__decorate([G.subclass("esri.rest.support.Stop")],b)});