// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.23/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/colorUtils ../../core/JSONSupport ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../layers/support/RasterInfo ../../layers/support/rasterFunctions/pixelUtils ../../layers/support/rasterFunctions/surfaceUtils ./colorRampUtils".split(" "),function(J,B,K,y,L,t,C,
Q,R,S,M,N,q,D,F){function O(x,z){const {attributeTable:m,bandCount:b}=x;return!t.isSome(m)||1<b||z&&null==m.fields.find(a=>a.name.toLowerCase()===z.toLowerCase())?!1:!0}function P(x){const {bandCount:z,colormap:m}=x;return t.isSome(m)&&m.length&&1===z}function G(x){return q.isValidPixelBlock(x)&&0!==x.validPixelCount}const H=L.getLogger("esri.renderers.support.RasterSymbolizer"),I={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,
2147483647],f32:[-3.4*1E39,3.4*1E39],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};y=function(x){function z(b){return x.call(this,b)||this}J._inheritsLoose(z,x);var m=z.prototype;m.bind=function(){const {rendererJSON:b}=this;if(!b)return{success:!1};this.lookup={rendererJSON:{}};let a;switch(b.type){case "uniqueValue":a=this._updateUVRenderer(b);break;case "rasterColormap":a=this._updateColormapRenderer(b);break;case "rasterStretch":a=this._updateStretchRenderer(b);break;case "classBreaks":a=this._updateClassBreaksRenderer(b);
break;case "rasterShadedRelief":a=this._updateShadedReliefRenderer(b);break;case "vectorField":a=this._updateVectorFieldRenderer();break;case "flowRenderer":a=this._updateFlowRenderer()}return a};m.symbolize=function(b){let a=b&&b.pixelBlock;if(!G(a))return a;if(b.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(a,b.simpleStretchParams);try{3<a.pixels.length&&(a=q.extractBands(a,[0,1,2]));let d;switch(this.rendererJSON.type){case "uniqueValue":case "rasterColormap":d=
this._symbolizeColormap(a);break;case "classBreaks":d=this._symbolizeClassBreaks(a);break;case "rasterStretch":d=this._symbolizeStretch(a,b.bandIds);break;case "rasterShadedRelief":({extent:b}=b),d=this._symbolizeShadedRelief(a,{isGCS:b.spatialReference.isGeographic,resolution:{x:(b.xmax-b.xmin)/a.width,y:(b.ymax-b.ymin)/a.height}})}return d}catch(d){return H.error("symbolize",d.message),a}};m.simpleStretch=function(b,a){if(!G(b))return b;try{return 3<b.pixels.length&&(b=q.extractBands(b,[0,1,2])),
q.stretch(b,a)}catch(d){return H.error("symbolize",d.message),b}};m.generateWebGLParameters=function(b){if(-1<["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)){var a;const {indexedColormap:h,offset:k}=(null==(a=this.lookup)?void 0:a.colormapLut)||{};return{colormap:h,colormapOffset:k,type:"lut"}}const {pixelBlock:d,isGCS:f,resolution:c,bandIds:e}=b;({rendererJSON:b}=this);return"rasterStretch"===b.type?this._generateStretchWebGLParams(d,b,e):"rasterShadedRelief"===b.type?
this._generateShadedReliefWebGLParams(b,f,c):"vectorField"===b.type?this._generateVectorFieldWebGLParams(b):null};m._isLUTChanged=function(b){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const a=this.rendererJSON.colorRamp;if(b)return JSON.stringify(a)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);({...this.rendererJSON});({...this.lookup.rendererJSON})}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)};m._symbolizeColormap=
function(b){return this._isLUTChanged()&&!this.bind().success?b:q.colorize(b,this.lookup.colormapLut)};m._symbolizeClassBreaks=function(b){const a=-1<["u8","u16","s8","s16"].indexOf(this.rasterInfo.pixelType);return this._isLUTChanged()&&!this.bind().success?b:a?q.colorize(b,this.lookup.colormapLut):q.remapColor(b,this.lookup.remapLut)};m._symbolizeStretch=function(b,a){const {pixelType:d,bandCount:f}=this.rasterInfo,c=this.rendererJSON,e=-1<["u8","u16","s8","s16"].indexOf(d);let h;var {dra:k}=c;
var g=c.useGamma?c.gamma:null;if("histogramEqualization"===c.stretchType){var l=k?null:this.lookup.histogramLut;a=this._getStretchCutoff(c,b,a,!l);g=q.stretch(b,{...a,gamma:g});g=q.lookupPixels(g,{lut:k?a.histogramLut:l,offset:0})}else if(e){var v;if(k)k=this._getStretchCutoff(c,b,a),h=q.createStretchLUT({pixelType:d,...k,gamma:g});else{if(this._isLUTChanged()&&!this.bind().success)return b;h=this.lookup?this.lookup.stretchLut:null}if(!h)return b;1<f&&(null==a?void 0:a.length)===(null==(l=t.unwrap(b))?
void 0:l.pixels.length)&&(null==(v=h)?void 0:v.lut.length)===f&&(h={lut:a.map(r=>h.lut[r]),offset:h.offset});g=q.lookupPixels(b,h)}else k=this._getStretchCutoff(c,b,a),g=q.stretch(b,{...k,gamma:g});if(c.colorRamp){if(this._isLUTChanged(!0)&&!this.bind().success)return b;g=q.colorize(g,this.lookup.colormapLut)}return g};m._symbolizeShadedRelief=function(b,a){var d,f,c=this.rendererJSON;a=D.hillshade(b,{...c,...a});if(!c.colorRamp||this._isLUTChanged(!0)&&!this.bind().success)return a;c=this.lookup?
this.lookup.hsvMap:null;if(!c)return a;const e=null!=(d=null==(f=t.unwrap(this.rasterInfo.statistics))?void 0:f[0])?d:{min:0,max:8E3};D.tintHillshade(a,b,c,e);return a};m._isVectorFieldData=function(){const {bandCount:b,dataType:a}=this.rasterInfo;return 2===b&&("vector-magdir"===a||"vector-uv"===a)};m._updateVectorFieldRenderer=function(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; VectorFieldRenderer only supports "vector-magdir" and "vector-uv".`}};
m._updateFlowRenderer=function(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; FlowRenderer only supports "vector-magdir" and "vector-uv".`}};m._updateUVRenderer=function(b){const {bandCount:a,attributeTable:d,pixelType:f}=this.rasterInfo,c=b.field1;if(!c)return{success:!1,error:"Unsupported renderer; missing UniqueValueRenderer.field."};const e=b.defaultSymbol;var h=1===a&&["u8","s8"].includes(f);if(!O(this.rasterInfo,c)&&!h)return{success:!1,
error:"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table."};const k=[];if(d){const g=d.fields.find(l=>"value"===l.name.toLowerCase());if(!g)return{success:!1,error:"Unsupported data; the data's raster attribute table does not have a value field."};d.features.forEach(l=>{var v,r=b.uniqueValueInfos.find(n=>String(n.value)===String(l.attributes[c]));(r=null==r?void 0:null==(v=r.symbol)?void 0:v.color)?k.push([l.attributes[g.name]].concat(r)):
e&&k.push([l.attributes[g.name]].concat(e.color))})}else{if("value"!==c.toLowerCase())return{success:!1,error:'Unsupported renderer; UniqueValueRenderer.field must be "Value" when raster attribute table is not availalbe.'};b.uniqueValueInfos.forEach(g=>{var l;const v=null==g?void 0:null==(l=g.symbol)?void 0:l.color;v?k.push([parseInt(""+g.value,10)].concat(v)):e&&k.push([parseInt(""+g.value,10)].concat(e.color))})}if(0===k.length)return{success:!1,error:"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table."};
h=q.createColormapLUT({colormap:k});this.lookup={rendererJSON:b,colormapLut:h};this.canRenderInWebGL=!0;return{success:!0}};m._updateColormapRenderer=function(b){if(!P(this.rasterInfo))return{success:!1,error:"Unsupported data; the data source does not have a colormap."};var a=b.colormapInfos.map(d=>[d.value].concat(d.color)).sort((d,f)=>d[0]-f[0]);if(!a||0===a.length)return{success:!1,error:"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos."};a=q.createColormapLUT({colormap:a});
this.lookup={rendererJSON:b,colormapLut:a};this.canRenderInWebGL=!0;return{success:!0}};m._updateShadedReliefRenderer=function(b){if("elevation"!==this.rasterInfo.dataType)return{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; ShadedReliefRenderer only supports "elevation".`};if(b.colorRamp){var a=F.convertColorRampToColormap(b.colorRamp,256,!0);a=q.createColormapLUT({colormap:a});const d=[],f=a.indexedColormap;for(let c=0;c<f.length;c+=4){const e=K.toHSV({r:f[c],g:f[c+1],b:f[c+
2]});d.push([e.h/60,e.s/100,255*e.v/100])}this.lookup={rendererJSON:b,colormapLut:a,hsvMap:d}}else this.lookup=null;this.canRenderInWebGL=!0;return{success:!0}};m._updateClassBreaksRenderer=function(b){var a=-1<["u8","u16","s8","s16"].indexOf(this.rasterInfo.pixelType),d=b.classBreakInfos;if(null==d||!d.length)return{success:!1,error:"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos."};d=d.sort((k,g)=>k.classMaxValue-g.classMaxValue);const f=d[d.length-1];var c=b.minValue;
if(!a){a=[];for(var e=0;e<d.length;e++){var h;a.push({value:null!=(h=d[e].classMinValue)?h:c,mappedColor:d[e].symbol.color});c=d[e].classMaxValue}a.push({value:f.classMaxValue,mappedColor:f.symbol.color});this.lookup={rendererJSON:b,remapLut:a};this.canRenderInWebGL=!1;return{success:!0}}h=[];c=Math.floor(b.minValue);for(a=0;a<d.length;a++){for(e=d[a];c<e.classMaxValue;c++)h.push([c].concat(e.symbol.color));c=Math.ceil(e.classMaxValue)}f.classMaxValue===c&&h.push([f.classMaxValue].concat(f.symbol.color));
d=q.createColormapLUT({colormap:h,fillUnspecified:!1});this.lookup={rendererJSON:b,colormapLut:d};this.canRenderInWebGL=!0;return{success:!0}};m._isHistogramRequired=function(b){return"percentClip"===b||"histogramEqualization"===b};m._isValidRasterStatistics=function(b){return t.isSome(b)&&0<b.length&&null!=b[0].min&&null!=b[0].max};m._updateStretchRenderer=function(b){var a;let {stretchType:d,dra:f}=b;if(!("none"===d||null!=(a=b.statistics)&&a.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||
f))return{success:!1,error:"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used."};var c=t.unwrap(b.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(b.stretchType)||null!=c&&c.length||f||(d="minMax");const {gamma:e,useGamma:h,colorRamp:k}=b;a=this.rasterInfo.pixelType;const g=!f&&-1<["u8","u16","s8","s16"].indexOf(a);"histogramEqualization"===d?(a=c.map(l=>q.createHistogramEqualizationLUT(l)),this.lookup={rendererJSON:b,histogramLut:a}):
g&&(c=this._getStretchCutoff(b),a=q.createStretchLUT({pixelType:a,...c,gamma:h?e:null}),this.lookup={rendererJSON:b,stretchLut:a});k&&(a=F.convertColorRampToColormap(k,256,!0),this.lookup||(this.lookup={rendererJSON:b}),this.lookup.colormapLut=q.createColormapLUT({colormap:a}),this.lookup.rendererJSON=b);this.canRenderInWebGL=!0;return{success:!0}};m._getStretchCutoff=function(b,a=null,d,f){var c,e,h,k=b.stretchType;if(b.dra)if("minMax"===k&&t.isSome(a)&&a.statistics)a=a.statistics.map(u=>[u.minValue,
u.maxValue,0,0]);else{var g=q.estimateStatisticsHistograms(a);a=t.isSome(g)?g.statistics:null;g=t.isSome(g)?g.histograms:null}else{var l;a=0<(null==(l=b.statistics)?void 0:l.length)?b.statistics:t.unwrap(this.rasterInfo.statistics);g=b.histograms||t.unwrap(this.rasterInfo.histograms)}!this._isHistogramRequired(k)||null!=(c=g)&&c.length||(k="minMax");l=(null==(e=a)?void 0:e.length)||(null==(h=g)?void 0:h.length)||this.rasterInfo.bandCount;e=[];h=[];let v;let r,n,p;a&&!Array.isArray(a[0])&&(a=a.map(u=>
[u.min,u.max,u.avg,u.stddev]));switch(k){case "none":a=I[this.rasterInfo.pixelType]||I.f32;for(c=0;c<l;c++)e[c]=a[0],h[c]=a[1];break;case "minMax":for(c=0;c<l;c++)e[c]=a[c][0],h[c]=a[c][1];break;case "standardDeviation":for(c=0;c<l;c++)e[c]=a[c][2]-b.numberOfStandardDeviations*a[c][3],h[c]=a[c][2]+b.numberOfStandardDeviations*a[c][3],e[c]<a[c][0]&&(e[c]=a[c][0]),h[c]>a[c][1]&&(h[c]=a[c][1]);break;case "histogramEqualization":for(c=0;c<l;c++)e[c]=g[c].min,h[c]=g[c].max;break;case "percentClip":for(c=
0;c<g.length;c++){a=g[c];r=new Uint32Array(a.size);var w=[...a.counts];20<=w.length&&(w[0]=w[1]=w[2]=w[w.length-1]=w[w.length-2]=0);v=0;l=(a.max-a.min)/a.size;n=-.5===a.min&&1===l?.5:0;for(p=0;p<a.size;p++)v+=w[p],r[p]=v;w=(b.minPercent||0)*v/100;for(p=0;p<a.size;p++)if(r[p]>w){e[c]=a.min+l*(p+n);break}w=(1-(b.maxPercent||0)/100)*v;for(p=a.size-2;0<=p;p--)if(r[p]<w){h[c]=a.min+l*(p+2-n);break}}break;default:for(c=0;c<l;c++)e[c]=a[c][0],h[c]=a[c][1]}let A;"histogramEqualization"===k?(k=g[0].size||
256,b=0,f&&(A=g.map(u=>q.createHistogramEqualizationLUT(u)))):(k=b.max||255,b=b.min||0);return this._getSelectedBandCutoffs({minCutOff:e,maxCutOff:h,outMax:k,outMin:b,histogramLut:A},d)};m._getSelectedBandCutoffs=function(b,a){if(null==a||0===a.length)return b;const d=Math.max.apply(null,a),{minCutOff:f,maxCutOff:c,outMin:e,outMax:h,histogramLut:k}=b;return f.length===a.length||f.length<=d?b:{minCutOff:a.map(g=>f[g]),maxCutOff:a.map(g=>c[g]),histogramLut:k?a.map(g=>k[g]):null,outMin:e,outMax:h}};
m._generateStretchWebGLParams=function(b,a,d){let f=null,c=null;var e=this.lookup&&this.lookup.colormapLut;a.colorRamp&&e&&(f=e.indexedColormap,c=e.offset);"histogramEqualization"===a.stretchType&&(a={...a,stretchType:"minMax"});({gamma:e}=a);const h=!!(a.useGamma&&e&&e.some(w=>1!==w)),{minCutOff:k,maxCutOff:g,outMin:l,outMax:v}=this._getStretchCutoff(a,b,d);var r=0;t.isSome(b)&&(r=b.getPlaneCount(),2===r&&(b=b.clone(),b.statistics=[b.statistics[0]],b.pixels=[b.pixels[0]]));b=Math.min(3,(null==d?
void 0:d.length)||r||this.rasterInfo.bandCount);d=new Float32Array(b);r=f||h?1:255;let n;for(n=0;n<b;n++)d[n]=(v-l)/(g[n]-k[n])/r;const p=new Float32Array(b);if(h)for(n=0;n<b;n++)p[n]=1<e[n]?2<e[n]?6.5+(e[n]-2)**2.5:6.5+100*(2-e[n])**4:1;return{bandCount:b,outMin:l/r,outMax:v/r,minCutOff:k,maxCutOff:g,factor:d,useGamma:h,gamma:h?e:[1,1,1],gammaCorrection:h?p:[1,1,1],colormap:f,colormapOffset:c,stretchType:a.stretchType,type:"stretch"}};m._generateShadedReliefWebGLParams=function(b,a,d){var f,c,e;
let h=null,k=null;const g=this.lookup&&this.lookup.colormapLut;b.colorRamp&&g&&(h=g.indexedColormap,k=g.offset);a=D.calculateHillshadeParams({...b,isGCS:a,resolution:d});d=null==(f=t.unwrap(this.rasterInfo.statistics))?void 0:f[0];return{...a,minValue:null!=(c=null==d?void 0:d.min)?c:0,maxValue:null!=(e=null==d?void 0:d.max)?e:8E3,hillshadeType:"traditional"===b.hillshadeType?0:1,type:"hillshade",colormap:h,colormapOffset:k}};m._generateVectorFieldWebGLParams=function(b){var a,d,f,c,e,h,k,g;const {style:l,
inputUnit:v,outputUnit:r,visualVariables:n,symbolTileSize:p,flowRepresentation:w}=b;let A;var u=null!=(a=null==(d=this.rasterInfo.statistics)?void 0:d[0].min)?a:0;a=null!=(f=null==(c=this.rasterInfo.statistics)?void 0:c[0].max)?f:50;f=null!=(e=null==n?void 0:n.find(E=>"sizeInfo"===E.type))?e:{type:"sizeInfo",field:"Magnitude",maxDataValue:a,maxSize:.8*p,minDataValue:u,minSize:.2*p};e=null!=(h=f.minDataValue)?h:u;u=null!=(k=f.maxDataValue)?k:a;k=t.isSome(f.maxSize)&&t.isSome(f.minSize)?[f.minSize/
p,f.maxSize/p]:[.2,.8];"wind_speed"===l&&(k[0]=k[1]=(k[0]+k[1])/2);h=t.isSome(e)&&t.isSome(u)?[e,u]:null;if("classified_arrow"===l)if(t.isSome(e)&&t.isSome(u)&&t.isSome(f))for(A=[],e=(f.maxDataValue-f.minDataValue)/5,u=0;6>u;u++)A.push(f.minDataValue+e*u);else A=[0,1E-6,3.5,7,10.5,14];f="flow_to"===w===("ocean_current_kn"===l||"ocean_current_m"===l)?0:Math.PI;e=null==n?void 0:n.find(E=>"rotationInfo"===E.type);b=(null==(g=this.rasterInfo.storageInfo)?0:g.tileInfo)&&"vector-uv"===this.rasterInfo.dataType?
"geographic":(null==e?void 0:e.rotationType)||b.rotationType;return{breakValues:A,dataRange:h,inputUnit:v,outputUnit:r,symbolTileSize:p,symbolPercentRange:k,style:l||"single_arrow",rotation:f,rotationType:b,type:"vectorField"}};return z}(y.JSONSupport);B.__decorate([C.property({json:{write:!0}})],y.prototype,"rendererJSON",void 0);B.__decorate([C.property({type:N,json:{write:!0}})],y.prototype,"rasterInfo",void 0);B.__decorate([C.property({json:{write:!0}})],y.prototype,"lookup",void 0);B.__decorate([C.property()],
y.prototype,"canRenderInWebGL",void 0);return y=B.__decorate([M.subclass("esri.renderers.support.RasterSymbolizer")],y)});